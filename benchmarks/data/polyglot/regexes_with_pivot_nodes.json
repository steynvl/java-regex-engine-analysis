[
  {
    "pattern": "(\\s*\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[(.+\\|?)+\\]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "]a",
      "exampleString": "[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 70
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s*(/\\*(.*?\\s*?)*\\*/)*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "/*",
      "exampleString": "/*aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/*"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(superator_(definition|alias_for))?((_?\\d{2,3})+)((__\\d{2,3})+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "_"
      ],
      "pumps": [
        "00000"
      ],
      "suffix": "u",
      "exampleString": "_000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000u"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 173
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<!-- @@(?:(?:\\n?.)*?)-->)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- @@\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "->-",
      "exampleString": "<!--\\x20@@\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a->-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([()]|.)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "(("
      ],
      "suffix": "a",
      "exampleString": "((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 652
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((/|..)?[-a-zA-Z0-9:_]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$$a$",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$$a$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\?\\>)(\\n|\\s)*(\\]\\]\\>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "?>"
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": ">>",
      "exampleString": "?>\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a>>"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((https?:\\/\\/)?([\\da-z\\.\\*-]+)\\.([a-z\\.]{2,6})([\\/\\w\\.\\*-]*)*\\/?)\\s?(\\d{3})*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ".\t\t",
      "exampleString": "a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 224
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*\\{([^\\}]+)\\}\\s+(\\S+)(?:\\s+((?:.|[\\r\\n])+))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{a}\ta\t"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "{a}\\x09a\\x09\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 758
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "((::){0,1}[A-Z][\\w]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "a:a",
      "exampleString": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa:a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[0-9]+([\\\\.]+|[0-9]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0."
      ],
      "pumps": [
        ".."
      ],
      "suffix": "#",
      "exampleString": "0.....................................................................................#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([[:alnum:]]+(-?\\w*)*('?\\w+)?) ?){1,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-A'",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-A'"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\\"((?:\\\\\\\\|\\\\\\\"|.)+?)\\\")",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a"
      ],
      "pumps": [
        "\\\""
      ],
      "suffix": "\\a",
      "exampleString": "\"a\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "NAME SERVER INFORMATION:\\n((.+\\n)+)\\s+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "NAME SERVER INFORMATION:\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "I",
      "exampleString": "NAME\\x20SERVER\\x20INFORMATION:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aI"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:\\-[a-z][= ]\\S+\\s*)+)?(?:@?(\\w+))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-a "
      ],
      "pumps": [
        "a-a a-a "
      ],
      "suffix": "-aa\t$",
      "exampleString": "-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20a-a\\x20-aa\\x09$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r|\\n|\\r\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+)\\.*(?:\\t|\\s)*(\\d+)\\w*(?:\\t|\\s)*(?:\\-|to)(?:\\t|\\s)*(\\d+)\\w*,*(?:\\t|\\s)*(\\d*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "toa.\n",
      "exampleString": "a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09toa.\\x0a"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 170
    },
    "indeg": {
      "num_nodes": 17,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "([/][*])|([/][/][^\\n]*)|('[^'\\\\]*(?:\\.[^'\\\\]*)*')|(\"[^\"\\\\]*(?:\\.[^\"\\\\]*)*\")",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        ".."
      ],
      "suffix": "'\"\n",
      "exampleString": "'....................................................................................'\"\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 120
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s+|\\d+\\.\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "0..",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x090.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\'(?:[^\\']+|\\'\\')*\\')",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a'a",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\s*<[NS]>\\s*,\\s*){100,})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,"
      ],
      "pumps": [
        "\t<N>,"
      ],
      "suffix": ",<N>,<N>,<N>,<N>,<N>",
      "exampleString": "<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,\\x09<N>,,<N>,<N>,<N>,<N>,<N>"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 1826
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "package (?:\\w+(?:::)?)+;",
    "exploitString": {
      "degree": 0,
      "separators": [
        "package a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ac",
      "exampleString": "package\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(BEGIN:VEVENT(.*\\n)*?END:VEVENT\\r?\\n)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "BEGIN:VEVENT"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "D:VEVEN",
      "exampleString": "BEGIN:VEVENT\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaD:VEVEN"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 141
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\s|\\t)*\\n+(\\s|\\t)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(",
    "exploitString": {
      "degree": 0,
      "separators": [
        "&"
      ],
      "pumps": [
        "nbsp;\n&"
      ],
      "suffix": "p;&nb",
      "exampleString": "&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&nbsp;\\x0a&p;&nb"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*\\\\( *([^\\\\)]*) *\\\\))*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "a \\\\"
      ],
      "suffix": "a",
      "exampleString": "\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a\\x20\\\\a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "Nameservers\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Nameservers\na"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "erv",
      "exampleString": "Nameservers\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaerv"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "#define\\s+(\\S+)+\\s+(\\S+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#define\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ef\ta\t",
      "exampleString": "#define\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaef\\x09a\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n2 OBJE(?:\\n[3-9].+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n2 OBJE\n"
      ],
      "pumps": [
        "3a\n3a\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a2\\x20OBJE\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0a3a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 714
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "mail#((\\d)+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "mail#0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "mail#",
      "exampleString": "mail#0000000000000000000000000000000000000000000000000000000000000000000000000000000000000mail#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:\\[(\\\\\\\\|\\\\\\]|[^\\]])*\\])",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        "\\]\\\\"
      ],
      "suffix": "]\\a][",
      "exampleString": "[\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\]\\a]["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "SamsungBrowser\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "s",
      "exampleString": "SamsungBrowser\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000s"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d+\\.?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "..",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([^+#]*|\\+)(/([^+#]*|\\+))*(/#)?|#)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+/"
      ],
      "pumps": [
        "//"
      ],
      "suffix": "a/##",
      "exampleString": "+/////////////////////////////////////////////////////////////////////////////////////a/##"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:\\.|(\\\\\\\")|[^\\\"\"\\n])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "a."
      ],
      "suffix": ".\\\"\".",
      "exampleString": "\"a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a..\\\"\"."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 120
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([a-zA-Z0-9]*[-_]?[\\w.]+)*@([a-zA-Z0-9]*[-_]?[a-zA-Z0-9]+)+[\\\\.][A-Za-z]{2,3}([\\\\.][A-Za-z]{2})?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a@a-",
      "exampleString": "-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@a-"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "<blockquote class=\"([^\"]+)\">((.|\\n)*?)<\\/blockquote>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<blockquote class=\"a\">"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "</blockquot",
      "exampleString": "<blockquote\\x20class=\"a\">a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a</blockquot"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 169
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<version>)((\\d|\\w|[-]|\\S)*)</version>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<version>"
      ],
      "pumps": [
        "a0"
      ],
      "suffix": "<ve",
      "exampleString": "<version>a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0<ve"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 142
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "=\\sVersion\\s((\\d+\\.?)+).+?=",
    "exploitString": {
      "degree": 0,
      "separators": [
        "=\tVersion\t0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "i",
      "exampleString": "=\\x09Version\\x090000000000000000000000000000000000000000000000000000000000000000000000000000000000000i"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*(.|\\n)*\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "/\n",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*[-_:+ ])*(lon|lng)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "  "
      ],
      "suffix": "ln",
      "exampleString": "\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20ln"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(((((true|false):\\d+)\\s{0,1})+,{0,1})+;{0,1})+\\s+\\+\\-(.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "true:0\t"
      ],
      "pumps": [
        "true:0\t\t"
      ],
      "suffix": "true:0,;",
      "exampleString": "true:0\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0\\x09\\x09true:0,;"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 1179
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([.]{2,})|/|\\\\)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "."
      ],
      "pumps": [
        "...."
      ],
      "suffix": "/./",
      "exampleString": "........................................................................................................................................................................././"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\.?\\w+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "..",
      "exampleString": ".aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:<!--.*?-->\\s*?)*?<([a-z]+)[\\s>]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!---->"
      ],
      "pumps": [
        "\t<!----><!---->"
      ],
      "suffix": "-",
      "exampleString": "<!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->\\x09<!----><!---->-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "extension_config do \\|config\\|((\\n|\\s*.*\\n)*)\\s+\\# end",
    "exploitString": {
      "degree": 0,
      "separators": [
        "extension_config do |config|"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": " |config",
      "exampleString": "extension_config\\x20do\\x20|config|\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20|config"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 177
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "\"(\\\\.|.)*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\a",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^typedef struct( \\S+)?\\s*\\{\\n(([^}\\n].*)?\\n)*\\}\\s*XExtData;\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "typedef struct{\n"
      ],
      "pumps": [
        "a\n\n"
      ],
      "suffix": ";\n{a",
      "exampleString": "typedef\\x20struct{\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0a;\\x0a{a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 247
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "# (\\w+ = .+)\\n(?:#.*\\n)*\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "# a = a\n"
      ],
      "pumps": [
        "#\n#\n"
      ],
      "suffix": " a ",
      "exampleString": "#\\x20a\\x20=\\x20a\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a\\x20a\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[(.*?(?:\\[.*?\\].*?)*)\\]\\((.*?)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[[]"
      ],
      "pumps": [
        "[]"
      ],
      "suffix": "]",
      "exampleString": "[[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]]"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 128
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:(?:<>|<|>|\\=|[()]+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "("
      ],
      "pumps": [
        "(("
      ],
      "suffix": "#",
      "exampleString": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z0-9_.-][a-z0-9_.-]*(?:\\[(?:\\d*|[a-z0-9_.-]+)\\])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a["
      ],
      "pumps": [
        "0][0]["
      ],
      "suffix": "0[[",
      "exampleString": "a[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0[["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/(doku\\.php\\?id=)?:?((((\\w)(\\w|_)*)*:)*(\\w(\\w|_)*)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/:"
      ],
      "pumps": [
        "a_:"
      ],
      "suffix": "p?",
      "exampleString": "/:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:a_:p?"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 170
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "<key>CFBundleDevelopmentRegion<\\/key>(\\s|\\n)*<string>(\\w*)<\\/string>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<key>CFBundleDevelopmentRegion</key>"
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "y",
      "exampleString": "<key>CFBundleDevelopmentRegion</key>\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0ay"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 383
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([A-Z_a-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c-\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ufffd-\ufffd][\ufffd-\ufffd])([A-Z_a-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c-\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd.0-9\u00b7\u0300-\u036f\u203f-\u2040\\-]|[\ufffd-\ufffd][\ufffd-\ufffd])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\ufffd\ufffd\ufffd\ufffd"
      ],
      "suffix": "#",
      "exampleString": "a\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}\\x{fffd}#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 11
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 11
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\nOn  wrote:\n"
      ],
      "pumps": [
        "> \n> \n"
      ],
      "suffix": "oa",
      "exampleString": "\\x0aOn\\x20\\x20wrote:\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0a>\\x20\\x0aoa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(pagespeed(?:.|\\s)+)url:[^,]+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "pagespeed\t"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "pa,ur",
      "exampleString": "pagespeed\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09pa,ur"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\w+ Name Server\\n((?:.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a Name Server\na"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "Se",
      "exampleString": "a\\x20Name\\x20Server\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaSe"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\s*(re|aw):\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aw"
      ],
      "pumps": [
        ":\tre"
      ],
      "suffix": "a",
      "exampleString": "aw:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09re:\\x09rea"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\"(\"\"|[^\"])*\")|('(''|[^'])*')|(--[^\\n\\r]*)|(#.*)|(/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "\n*"
      ],
      "suffix": "/",
      "exampleString": "/**\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 668
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "/a/",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/a/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(?:\\s*,\\s*)+|\\s+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ",\t\t"
      ],
      "suffix": "#",
      "exampleString": ",\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\!\\-\\-(.|\\n)*?\\-\\-\\>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "!-",
      "exampleString": "<!--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a!-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\s*(\\!\\S*|\\&\\S+))*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "&a&a"
      ],
      "suffix": "&\ta",
      "exampleString": "&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s/]*)\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "function"
      ],
      "pumps": [
        "/**/\t/**/\t"
      ],
      "suffix": "n*\t*",
      "exampleString": "function/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09n*\\x09*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 177
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(\\/\\*\\*(.|\\r?\\n)*?\\*\\/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "/*",
      "exampleString": "/**\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^<!-- Start:AutoDoc((.*?(\\n))+.*?)End:AutoDoc -->$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- Start:AutoDoc"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "t:Auto",
      "exampleString": "<!--\\x20Start:AutoDoc\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0at:Auto"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 172
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": " (\\w+) (?: \\( (.*?) \\) )*",
    "exploitString": {
      "degree": 0,
      "separators": [
        " a  ("
      ],
      "pumps": [
        "  )  (  )  ("
      ],
      "suffix": " $ ",
      "exampleString": "\\x20a\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20\\x20)\\x20\\x20(\\x20$\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(:?0x(?:(?:\\d|[abcdefABCDEF]){0,2})+) +in +(:?0x(?:(?:\\d|[abcdefABCDEF]){0,2})+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":0xa"
      ],
      "pumps": [
        "aa0a"
      ],
      "suffix": "inn",
      "exampleString": ":0xaaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0ainn"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*ZOPFLILIB_SRC\\s*=\\s*((?:.*(?:\\\\\\r?\\n))*.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ZOPFLILIB_SRC="
      ],
      "pumps": [
        "\\\na"
      ],
      "suffix": "\\\r",
      "exampleString": "ZOPFLILIB_SRC=\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0d"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 653
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r?\\n|\\r)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*\\n)*(\\ *\\/\\/\\=\\ *require\\ +.*\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "e",
      "exampleString": "\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aae"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 172
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "DNS servers:\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "DNS servers:\na\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "D",
      "exampleString": "DNS\\x20servers:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aD"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "refs\\/tags\\/(v?[0-9.-]+)(\\^\\{(.*)\\})*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "refs/tags/v-^"
      ],
      "pumps": [
        "{}^{}^"
      ],
      "suffix": "e",
      "exampleString": "refs/tags/v-^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^{}^e"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[cCsSiIf](,[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "C,+."
      ],
      "pumps": [
        "0,00,."
      ],
      "suffix": "C,",
      "exampleString": "C,+.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.0,00,.C,"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[\\^((?:[^\\]]|\\]|\\[)+?)\\]:",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[^]"
      ],
      "pumps": [
        "["
      ],
      "suffix": "]",
      "exampleString": "[^][[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/v([1-9]+\\d*)(\\.[1-9]+\\d*)*.*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/v1.1"
      ],
      "pumps": [
        "0.11"
      ],
      "suffix": "a",
      "exampleString": "/v1.10.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.110.11a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 666
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^<option(?:\\s+\\w+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s>]+))?)*\\s+value[\\s=]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<option\ta="
      ],
      "pumps": [
        "\"\"\ta='\ta='\ta="
      ],
      "suffix": "<\t'\tvalu",
      "exampleString": "<option\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=\"\"\\x09a='\\x09a='\\x09a=<\\x09'\\x09valu"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 275
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:.*?[;\\}])+)([^;\\}]+?)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ";"
      ],
      "pumps": [
        ";;"
      ],
      "suffix": "a;",
      "exampleString": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;a;"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\w+\\s*)+)\\n(?:-+|=+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\t*fail\\((.*\\n)*?.*\\);\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "fail("
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a)a",
      "exampleString": "fail(\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa)a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": " *?\\/\\/ FINAL_START.*?\\n((.|\\n|\\r)*?) *\\/\\/ FINAL_END.*?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "// FINAL_START\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "S",
      "exampleString": "//\\x20FINAL_START\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aS"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 195
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*([#].*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "##"
      ],
      "suffix": "a",
      "exampleString": "####################################################################################a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 819
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^application\\/(.*?)+\\+json$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "application/"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ion",
      "exampleString": "application/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaion"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(([^@\\s]+)@((?:[-a-z0-9]+\\.)+[a-z]{2,})[\\s\\/,;]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "@a.aa,a"
      ],
      "suffix": "a,\t@",
      "exampleString": "a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,a@a.aa,aa,\\x09@"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\\\\p{L}]([\\\\p{L}|[:space:]|\\\\-|\\\\']*[\\\\p{L}])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "L"
      ],
      "pumps": [
        "La"
      ],
      "suffix": "La",
      "exampleString": "LLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "REGISTRAR:\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "REGISTRAR:\na\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "A",
      "exampleString": "REGISTRAR:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aA"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\\\[_\\~\\.\\-\\!\\$&'()*+,;=\\/?#@%]|%[0-9A-Fa-f]{2}|[^ \\t\\r\\n;,\\[\\]()])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\$"
      ],
      "suffix": "a(",
      "exampleString": "a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a\\$a("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*([^\\*]|[\\r\\n]|(\\*+([^\\*\\/]|[\\r\\n])))*\\*+\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "/**/*",
      "exampleString": "/*a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a/**/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "coast\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "co",
      "exampleString": "coast\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000co"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\^{3}math(.*?\\n*?)+?\\^{3}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "^^^math"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "mat\n",
      "exampleString": "^^^mathaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaamat\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([0-9]|0x[0-9a-fA-F]+|\\+|\\-| )+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0x"
      ],
      "pumps": [
        "a00x"
      ],
      "suffix": "xax",
      "exampleString": "0xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xa00xxax"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "([a-z0-9-]+)\\s*:\\s*([^;\\s]+(?:\\s*[^;\\s]+)*);?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\t;",
      "exampleString": "a:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09;"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "encoders: ([\\w\\s_]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "encoders: a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "er:",
      "exampleString": "encoders:\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaer:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*-\\s.*?\\n)(?:\\s*\\n)+(\\s*-\\s)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-\t\n"
      ],
      "pumps": [
        "\n\t"
      ],
      "suffix": "-",
      "exampleString": "-\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(\\\\\\\\|\\\\\"|[^\"\\n])*[\"\\n]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\"\\\\"
      ],
      "suffix": "\\\"\n\n",
      "exampleString": "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "url((a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ur()",
      "exampleString": "url((aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaur()"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(\\@.*\\@)*\\s*\\$\\(INSTALL\\S*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "@@@@"
      ],
      "suffix": "$@\t@$(INST",
      "exampleString": "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$@\\x09@$(INST"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\\\\\ |\\S)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\ "
      ],
      "suffix": "\t",
      "exampleString": "a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20a\\\\x20\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:[0-9]+\\.?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "..",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "```(.|\\n|\\r)*?```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\n`",
      "exampleString": "```\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a`"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(Java)[/ ]{0,1}\\d+\\.(\\d+)\\.(\\d+)[_-]*([a-zA-Z0-9]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Java0.0.0a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a 0.",
      "exampleString": "Java0.0.0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x200."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "s\\[(\\\\\\\\|\\\\\\]|[^\\]])*\\]\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "s["
      ],
      "pumps": [
        "a\\\\"
      ],
      "suffix": "s][",
      "exampleString": "s[a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\s]["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*?/)*(.+)\\.json$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "//"
      ],
      "suffix": "so.j",
      "exampleString": "////////////////////////////////////////////////////////////////////////////////////so.j"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:https?:\\/{2}|[\\w\\-]+\\.[\\w\\-]+|\\.{1,2}\\/|[\\w\\-]+\\/|\\/)(?:[\\w\\/\\-\\.:]+|%\\w*)*([?][^ (){}'\"#]*)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "</?[!\\w]+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)/?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</a\ta="
      ],
      "pumps": [
        "\t\"\"\ta=\t\"\"\ta="
      ],
      "suffix": "</\t",
      "exampleString": "</a\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=</\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 201
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[a-z]+([a-z\\d]+-|-[a-z\\d]+)+[a-z\\d]+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "--aa-aa"
      ],
      "suffix": "---",
      "exampleString": "aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa--aa-aa---"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n        [NOTE]\n\n        You\tmay\thave\tencountered\ta\tbug\tin\tthe\tRuby\tinterpreter\tor\textension\tlibrariesa\n\n        Bug\treports\tare\twelcomea\n\n        \n        For\tdetails:\thttp://.ruby-lang.org/\n\n        \n\n        \n          [IMPORTANT]\n\n          a\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "ts\t",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20[NOTE]\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20You\\x09may\\x09have\\x09encountered\\x09a\\x09bug\\x09in\\x09the\\x09Ruby\\x09interpreter\\x09or\\x09extension\\x09librariesa\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Bug\\x09reports\\x09are\\x09welcomea\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20For\\x09details:\\x09http://.ruby-lang.org/\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20[IMPORTANT]\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ats\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 1600
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([[:graph:]]+)[[:space:]]*\\|[[:space:]]*([[:graph:]]+)[[:space:]]*\\|[[:space:]]*([0-9]+)[[:space:]]*\\|[[:space:]]*([0-9]+)[[:space:]]*\\|[[:space:]]*([[:ascii:]]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a|a|0|0|a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "g",
      "exampleString": "a|a|0|0|aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "'''(?:.|\\n)*?'''",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'''"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "'a",
      "exampleString": "'''a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a'a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<text>(.|\\n)*</text>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<text>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "ext",
      "exampleString": "<text>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aext"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "silk\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "silk/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "il",
      "exampleString": "silk/0._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000il"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[0-9]{10,11}\\.[0-9]+ \\[[0-9]+ .+\\]( \".+?\")+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0000000000.0 [0 a] \"a\""
      ],
      "pumps": [
        " \"a\" \" \"a\""
      ],
      "suffix": "0",
      "exampleString": "0000000000.0\\x20[0\\x20a]\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"\\x20\"a\"\\x20\"\\x20\"a\"0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 152
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(@[\\w-]+)(?:\\s*(\\w+))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-a@",
      "exampleString": "@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-a@"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\"(([^\"]*| \\\\\")*)\"$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " ",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([()\\s]|.)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "a",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 641
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:[^\"\\\\]+|\\\\.)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "info\\.GetReturnValue\\(\\)\\.Set\\(((\\n|.)+?)\\);",
    "exploitString": {
      "degree": 0,
      "separators": [
        "info.GetReturnValue().Set("
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "e(",
      "exampleString": "info.GetReturnValue().Set(\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ae("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 131
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(!--|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\ta="
      ],
      "pumps": [
        "\t\t\t\ta="
      ],
      "suffix": "--\t",
      "exampleString": "a\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=\\x09\\x09\\x09\\x09a=--\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 133
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "Name Servers: \\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Name Servers: \n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "s",
      "exampleString": "Name\\x20Servers:\\x20\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0as"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\u001b\\]((?:.|;)*?)(\u0007)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u001b]"
      ],
      "pumps": [
        ";"
      ],
      "suffix": "\u001b",
      "exampleString": "\\x1b];;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\\x1b"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:((`(?:([^\\n\\r\\\\`]+)|(\\\\(?:(?:(?:[\"'\\\\bfnrtv])|(?:[^\\d\"'\\\\bfnrt-vx]))|(?:[x](?:[\\dA-Fa-f]){2})|(?:[u](?:[\\dA-Fa-f]){4}))))*`)))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "`a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ua\\u",
      "exampleString": "`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaua\\u"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\n *\\/\\/.*\\s*)* *lodash\\.isPlainObject *= *.+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n//"
      ],
      "pumps": [
        "\t\n//"
      ],
      "suffix": "ect",
      "exampleString": "\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//\\x09\\x0a//ect"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 283
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^'(\\\\[\\\\']|.+)+'\\s*(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\\",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 653
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(( |\\t|\\r)*\\n( |\\t)*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        " \n"
      ],
      "suffix": "\r",
      "exampleString": "\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x0d"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[a-zA-Z_$]+[0-9a-zA-Z_$]*(\\.[a-zA-Z_$]+[0-9a-zA-Z_$]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a."
      ],
      "pumps": [
        "aaa."
      ],
      "suffix": "a0..",
      "exampleString": "a.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.a0.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "cigar:\\s+(.+)\\s+([0-9]+)\\s+([0-9]+)\\s+([\\+\\-\\.])\\s+(.+)\\s+([0-9]+)\\s+([0-9]+)\\s+([\\+\\-\\.])\\s+([^\\s]+)(\\s+(.*)\\s*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "cigar:\ta\t0\t0\t+\ta\t0\t0\t+\ta\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "a",
      "exampleString": "cigar:\\x09a\\x090\\x090\\x09+\\x09a\\x090\\x090\\x09+\\x09a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 761
    },
    "indeg": {
      "num_nodes": 20,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 20,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s|\\t)*\\n+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\u000b",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x0b"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *var noArgsEnum;|.+?noArgsEnum *=.+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n /**a"
      ],
      "pumps": [
        "**"
      ],
      "suffix": "**/\nvar noArgsE",
      "exampleString": "\\x0a\\x20/**a**************************************************************************************/\\x0avar\\x20noArgsE"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 890
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 1
    }
  },
  {
    "pattern": "__version__ = [\\'\\\"]v((\\d+\\.?)+)[\\'\\\"]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "__version__ = \"v0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0.",
      "exampleString": "__version__\\x20=\\x20\"v00000000000000000000000000000000000000000000000000000000000000000000000000000000000000."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\/\\/(\\[.+\\])+\\n.*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//["
      ],
      "pumps": [
        "a][a]["
      ],
      "suffix": "a]",
      "exampleString": "//[a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a]"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 722
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n(?:\\s*\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\t"
      ],
      "suffix": "\t",
      "exampleString": "\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "Domain Servers in listed order:\\n((?:.+\\n)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Domain Servers in listed order:\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "i",
      "exampleString": "Domain\\x20Servers\\x20in\\x20listed\\x20order:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ai"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 153
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(-|\\+)?(([0-9]+\\.[0-9]*)|(\\.[0-9]))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "0.0.0"
      ],
      "suffix": "0.+",
      "exampleString": "0.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.0.00.+"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "decoders: ([\\w\\s_]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "decoders: a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "er:",
      "exampleString": "decoders:\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaer:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^&?(?:.*::)*(\\w+)\\s*[(]?.*[)]?\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "&"
      ],
      "pumps": [
        "::::"
      ],
      "suffix": "$::",
      "exampleString": "&::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::$::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 707
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:use\\s+[^(;]+;\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "use"
      ],
      "pumps": [
        "\t\ta;\nuse"
      ],
      "suffix": "us;\t",
      "exampleString": "use\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0ause\\x09\\x09a;\\x0auseus;\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{(?:.|\\s)+\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{\t"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "}a",
      "exampleString": "{\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09}a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": " \"(?: \\\\. | \\\\\" | [^\"\\n])*\" ",
    "exploitString": {
      "degree": 0,
      "separators": [
        " \" "
      ],
      "pumps": [
        "\\\"  \\   "
      ],
      "suffix": "a",
      "exampleString": "\\x20\"\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20\\\"\\x20\\x20\\\\x20\\x20\\x20a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s|\\n|#[^\\n]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\na",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*\\n)*----- OUTPUT -----\\r?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": " ",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "((http|ftp)(s)?:\\/\\/([^\\s\\\"]|[\\~\\?\\&\\@\\=])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ftps://"
      ],
      "pumps": [
        "&&"
      ],
      "suffix": "\t",
      "exampleString": "ftps://&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[-+]?(\\d*,\\d*)+(?:\\.)?\\d*\\s*%$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+"
      ],
      "pumps": [
        "0,0"
      ],
      "suffix": "++",
      "exampleString": "+0,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,0++"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([[:ascii:]]+)*\\|[[:space:]]*([[:ascii:]]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "i||",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaai||"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "Domain servers in listed order:\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Domain servers in listed order:\na"
      ],
      "pumps": [
        "\na\na"
      ],
      "suffix": "r",
      "exampleString": "Domain\\x20servers\\x20in\\x20listed\\x20order:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aar"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\s\\w]|_|[0-9])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\t",
      "exampleString": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:\\\\.|[^\\s>])+|[\\s>])",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "a\\\\a\\"
      ],
      "suffix": "\\\t\t",
      "exampleString": "\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\\\\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((([#\\.]?[\\w-]+)?(\\[([\\w!]+(=\"([^\"]|\\\\\")+\")? {0,})+\\])?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "!",
      "exampleString": "[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa!"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": ":link([\\s]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":link"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "in\t",
      "exampleString": ":link\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09in\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "isa = PBXProject;(.|[\r",
    "exploitString": {
      "degree": 0,
      "separators": [
        "isa = PBXProject;"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "ge",
      "exampleString": "isa\\x20=\\x20PBXProject;a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0age"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 150
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\d+(\\.?\\d?)*\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0."
      ],
      "pumps": [
        "0.."
      ],
      "suffix": "0.\t.",
      "exampleString": "0.0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0.\\x09."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "(Add|Remove).*?(?:(?:To|From).+?)*(?:To|From)((?:To|From)?.*?)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "AddTo"
      ],
      "pumps": [
        "aTo"
      ],
      "suffix": "a",
      "exampleString": "AddToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToaToa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 761
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "<html>(.|\\r|\\n)*<title class=\"klass\">Default Title<\\/title>(.|\\r|\\n)*<\\/html>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<html>"
      ],
      "pumps": [
        "\n\r"
      ],
      "suffix": "\"",
      "exampleString": "<html>\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 323
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\s*(\\.?\\w+)\\s*\\:\\s*((\\w+\\.*)+)\\s*(\\|\\s*(\\w+)\\s*)?);?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".a:a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "|",
      "exampleString": ".a:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa|"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "^a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\a^",
      "exampleString": "^aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\a^"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^s\\d(-s\\d)??(:c\\d{1,4}((.c\\d{1,4})?,c\\d{1,4})*(.c\\d{1,4})?(,c\\d{1,4}(.c\\d{1,4})?)*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "s0:c0,c0"
      ],
      "pumps": [
        ",c0,c0"
      ],
      "suffix": "00c0,",
      "exampleString": "s0:c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c0,c000c0,"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 478
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([\\w-]+(\\.[\\w\\s-]+|\\(.*\\))*)\\s+AS\\s*([\\w-]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.a"
      ],
      "pumps": [
        "()().a"
      ],
      "suffix": "A\t",
      "exampleString": "a.a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().a()().aA\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 151
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "rotate\\(-*\\d+([.]\\d+)*(,*\\s*-*\\d+([.]\\d+)*,*\\s*-*\\d+([.]\\d+)*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "rotate(0"
      ],
      "pumps": [
        "-00,00"
      ],
      "suffix": "0.",
      "exampleString": "rotate(0-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,00-00,000."
    },
    "pivot": {
      "num_nodes": 10,
      "exec_time": 252
    },
    "indeg": {
      "num_nodes": 17,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 17,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[A-Za-z](?:[A-Za-z0-9._-]|-)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "--"
      ],
      "suffix": "#",
      "exampleString": "a------------------------------------------------------------------------------------#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(gobrowser)\\/?((\\d+)?[\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "gobrowser/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "e0",
      "exampleString": "gobrowser/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae0"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^typedef struct( \\S+)?\\s*\\{\\n(([^}\\n].*)?\\n)*\\}\\s*XImage;\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "typedef struct{\n"
      ],
      "pumps": [
        "a\n\n"
      ],
      "suffix": "e;\n{a",
      "exampleString": "typedef\\x20struct{\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0ae;\\x0a{a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 216
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "%(\\\\[\\\\%]|[^%])*%[egimosx]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%"
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": "%a\\",
      "exampleString": "%\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\%a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\s+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "/\\n([ ]*)+(\\*|\\d+\\.) /g",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/\n"
      ],
      "pumps": [
        "  "
      ],
      "suffix": "/\n*.",
      "exampleString": "/\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20/\\x0a*."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[^{]*(\\{(?:.|\\n)*\\})[^}]*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "{\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 704
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(ii[ ]+)([\\w\\-\\+\\.]+)([\\:\\w]*)*([ ]+)([\\w\\.\\:\\-\\+\\~]+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ii a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "i:+ ",
      "exampleString": "ii\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaai:+\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "<(?:(?:!--([\\w\\W]*?)-->)|(?:!\\[CDATA\\[([\\w\\W]*?)\\]\\]>)|(?:!DOCTYPE([\\w\\W]*?)>)|(?:\\?([^\\s\\/<>]+) ?([\\w\\W]*?)[?/]>)|(?:\\/([^>]+)>)|(?:([A-Za-z0-9\\-_\\:\\.]+)((?:\\s+[^\"'>]+(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>]*))*|\\/|\\s+)>))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\ta"
      ],
      "pumps": [
        "\"\"\ta'\ta'\ta"
      ],
      "suffix": "DO\"]-?']-?\ta]-/",
      "exampleString": "<a\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09aDO\"]-?']-?\\x09a]-/"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 537
    },
    "indeg": {
      "num_nodes": 21,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 19,
      "exec_time": 1
    }
  },
  {
    "pattern": "<solr>(.|\\n)*</solr>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<solr>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "lr",
      "exampleString": "<solr>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0alr"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\d+(?:[._]*\\d*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        ".."
      ],
      "suffix": "#",
      "exampleString": "0....................................................................................#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([ \\t]*)\\/\\/\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/\\s*endbower)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//bower"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "\te//",
      "exampleString": "//bower\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x09e//"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 192
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "k-meleon\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "e",
      "exampleString": "k-meleon\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000e"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "\"\"\"(?:\\s*\\r?\\n)?((?:.|\\r?\\n)*?)(?:\\r?\\n\\s*)?\"\"\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\"\""
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "\na",
      "exampleString": "\"\"\"\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 145
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:.*,)*\\s*Negotiate\\s*([^,]*),?",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ",,"
      ],
      "suffix": "ia,,",
      "exampleString": ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ia,,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 133
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:.+\\n)*content-disposition: inline",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "s",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0as"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\w(?:\\.?[\\w%+-]+)*@\\w(?:[\\w-]*\\.)+?[a-z]{2,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a@a",
      "exampleString": "a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\(((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "(()",
      "exampleString": "(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa(()"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(http[s]?\\:\\/\\/)?([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-\\.]*[A-Za-z])+(:[0-9]+)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "tps::",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaatps::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z0-9][a-z0-9_]?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "__",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa__"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "(.*\\.){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "."
      ],
      "pumps": [
        "a."
      ],
      "suffix": "a",
      "exampleString": ".a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\/\\/.*)*\\s*mixin\\(lodash\\)[\\s\\S]+?\\/\\*-+\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "/////"
      ],
      "suffix": "m",
      "exampleString": "///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////m"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 171
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\s*(/\\*(.*\\s+)*\\*/)*([ \\t]*//.*\\s+)*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//\t"
      ],
      "pumps": [
        "//\t\t"
      ],
      "suffix": "\n ",
      "exampleString": "//\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\<div\\s*class=\"prefixes\"\\>(.|\\s)*\\<\\/div\\>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<divclass=\"prefixes\">"
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "p",
      "exampleString": "<divclass=\"prefixes\">a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09p"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 132
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<example>((.|\\n)*)<\\/example>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<example>"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "<example",
      "exampleString": "<example>a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a<example"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 133
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^I generate a (.*)project named '((?:\\w|-|_)+)' that is '([^']*)'$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "I generate a project named '"
      ],
      "pumps": [
        "-_"
      ],
      "suffix": "r",
      "exampleString": "I\\x20generate\\x20a\\x20project\\x20named\\x20'-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_r"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 242
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^((?: {4}|\\t)[^\\n]*\\n?([ \\t]*\\n)*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "   "
      ],
      "pumps": [
        "        "
      ],
      "suffix": "a\na",
      "exampleString": "\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:<script.*>.*<\\/script>)+|<\\/?[^>]+>|[[[:alpha:]][0-9]\\|`~!@#\\$%^&*\\(\\)\\-_\\+=\\[\\]{}:;'\u00b2\u00b3\u00a7\",\\.\\/?]+|\\s+|[[:punct:]]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<scri"
      ],
      "pumps": [
        "pt></script><script></script><scri"
      ],
      "suffix": "cr</scr",
      "exampleString": "<script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><script></script><scricr</scr"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 170
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[-\\[\\]{}\\w*.+\\/:@=,#\\$%&!'^~\\s\\xC3\\x80-\\xCA\\xAF]|[^\\x00-\\x7F]|\\\\[a-fA-F\\d]{2})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u0080"
      ],
      "pumps": [
        "\u0080"
      ],
      "suffix": "a\u00cb0",
      "exampleString": "\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80a\\xcb0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "DD\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "DD",
      "exampleString": "DD\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09DD"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\/\\*(?:\\n|.)*\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "/\n",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(.|\\n)*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "'a",
      "exampleString": "'\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a'a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+\\.?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "..",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([\\s\\t]*)\\/{2}\\s*?bower:\\s*?(\\S*))(\\n|\\r|.)*?(\\/{2}\\s*endbower)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//bower:"
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "ena",
      "exampleString": "//bower:\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0dena"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 194
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "(mint)[\\/\\s\\(]?(\\w+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "mint\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "min\t",
      "exampleString": "mint\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaamin\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([[:lower:]][[:lower:]\\d]*[\\.\\?:\\/]?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":"
      ],
      "pumps": [
        ".:::"
      ],
      "suffix": ".0",
      "exampleString": ":.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.:::.0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w+_)*id$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "_a"
      ],
      "suffix": "id_a",
      "exampleString": "a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_aid_a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(android)[\\/\\s-]?([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "android\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "dr\t",
      "exampleString": "android\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadr\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\/\\/.*\\n)* *var sourceURL[^;]+;|\\+ *sourceURL",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//"
      ],
      "pumps": [
        "a\n\n//"
      ],
      "suffix": " v",
      "exampleString": "//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//a\\x0a\\x0a//\\x20v"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 185
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^'((?:[^'{]+|\\\\.)*)'$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\{a{",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\{a{"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:[A-Za-z0-9-]+(?:=\"[^\"]+\")?,?)+ *)?(ssh-(?:dss|rsa)) *([^ ]*) *(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a=\"a\"",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=\"a\""
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 732
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\(\\[@\\S+\\]\\[\\](?:, \\[@\\S+\\]\\[\\])*\\)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "([@a][], [@a]"
      ],
      "pumps": [
        "[], [@a][], [@a]"
      ],
      "suffix": "@",
      "exampleString": "([@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a][],\\x20[@a]@"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([achlmqstvz])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?\\s*,?\\s*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-"
      ],
      "pumps": [
        "0--"
      ],
      "suffix": "-0.+",
      "exampleString": "a-0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0---0.+"
    },
    "pivot": {
      "num_nodes": 8,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\(\\*(?:[\\s\\S]*?\\(\\*[\\s\\S]*?\\*\\))*[\\s\\S]*?\\*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(*(*"
      ],
      "pumps": [
        "*)(*"
      ],
      "suffix": "(",
      "exampleString": "(*(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(*("
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "mac os x (\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "mac os x 0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": " x",
      "exampleString": "mac\\x20os\\x20x\\x200._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x20x"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?: *:?\\w+ *= *\\\"[^\\\"]*\\\" *)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":a=\""
      ],
      "pumps": [
        "a\" a=\""
      ],
      "suffix": " \":\"\"",
      "exampleString": ":a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"a\"\\x20a=\"\\x20\":\"\""
    },
    "pivot": {
      "num_nodes": 5,
      "exec_time": 120
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\+|(0(\\d+)?[-/.\\s]?))[1-9]\\d{0,2}[-/.\\s]?)?((\\(\\d{1,6}\\)|\\d{1,6})[-/.\\s]?)?(\\d+[-/.\\s]?)+\\d+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\t(0000",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09(0000"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 257
    },
    "indeg": {
      "num_nodes": 16,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "([A-Z\u00c4\u00d6\u00dc]+[a-z\u00e4\u00f6\u00fc\u00df]*-?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "-a",
      "exampleString": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\\"])\\/\\*([^\\*^\\/]*|[\\*^\\/*]*[^\\**\\/]*)*\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a/*"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "*",
      "exampleString": "a/*aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa*"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\n   ( -+[\\w,-]+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n   "
      ],
      "pumps": [
        " --a"
      ],
      "suffix": "\n\n",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x20--a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:(?:@Inject(?:\\n|.)*?\\s+(?:protected|public|lateinit|(\\w+(?:\\.\\w+)*))?\\s+(?:var(?:\\n|.)*?:\\s*)?)|(?:@field\\s*:\\s*\\[(?:\\n|.)*?Inject(?:\\n|.)*?\\]\\s*(?:protected|public|lateinit)?\\s*var\\s*.+?\\s*:\\s*))(\\w+(?:\\.\\w+)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@Inject"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "]var\n",
      "exampleString": "@Inject\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a]var\\x0a"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 1163
    },
    "indeg": {
      "num_nodes": 36,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 29,
      "exec_time": 1
    }
  },
  {
    "pattern": "https?://(-\\.)?([^\\s/?\\.#-]+\\.?)+(/[^\\s]*)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "^UPSTREAM: (\\d+)+:(.+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "UPSTREAM: 0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a",
      "exampleString": "UPSTREAM:\\x200000000000000000000000000000000000000000000000000000000000000000000000000000000000000a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 613
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--(.|\\n|\\r)*?-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n\r"
      ],
      "suffix": "!--",
      "exampleString": "<!--\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d!--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([A-Z]\\w+(::)?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "aAaA"
      ],
      "suffix": "a:a",
      "exampleString": "AaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAa:a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*\\[.*(,.*)+\\])(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        ",,"
      ],
      "suffix": "a",
      "exampleString": "[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 661
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "[\\/][*](\\s|.)+?[*][\\/]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "/*",
      "exampleString": "/*a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\d (PAGE|EVEN|ROLE|DATE|TEXT|QUAY) ?(.*(\\n\\d CONT.*)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0 TEXT \n0 CON"
      ],
      "pumps": [
        "T\n0 CONT\n0 CON"
      ],
      "suffix": "a",
      "exampleString": "0\\x20TEXT\\x20\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONT\\x0a0\\x20CONa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 820
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:.*,)*\\s*NTLM\\s*([^,]*),?",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ",,"
      ],
      "suffix": "M,,",
      "exampleString": ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,M,,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 140
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n-+ *original *message *-+\\n(?:\\n|.)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n-originalmessage-\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a-originalmessage-\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 746
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s|//.*?\\n|/[*].*?[*]/)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t//\n\n"
      ],
      "suffix": "/\n/",
      "exampleString": "\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a/\\x0a/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(ffprobe|avprobe|ffmpeg) version (\\d+)\\.?(\\d+)\\.?(\\d+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ffmpeg version 0.0.0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "vpro",
      "exampleString": "ffmpeg\\x20version\\x200.0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000vpro"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "Service Information \"update\"\\n(?:.*\\n)*?URL:\\s+(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Service Information \"update\"\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "UR",
      "exampleString": "Service\\x20Information\\x20\"update\"\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aUR"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 755
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\t",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\u000b\t\u000b\t",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x0b\\x09\\x0b\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*[+-]?((\\d+_?)*\\d+(\\.(\\d+_?)*\\d+)?|\\.(\\d+_?)*\\d+)(\\s*|([eE][+-]?(\\d+_?)*\\d+)\\s*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+.0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0_",
      "exampleString": "+.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000_"
    },
    "pivot": {
      "num_nodes": 8,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 24,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 22,
      "exec_time": 1
    }
  },
  {
    "pattern": ".*variant:\\s*(([\\w-]+,?)+).*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "variant:a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$",
      "exampleString": "variant:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 729
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(\\/\\*\\*?(.|\\r?\\n)*?\\*\\/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "\r\n\r\n"
      ],
      "suffix": "/*",
      "exampleString": "/**\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "normal\t+0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0.E",
      "exampleString": "normal\\x09+00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.E"
    },
    "pivot": {
      "num_nodes": 15,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 27,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 27,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([a-zA-Z]+\\s*)+)(\\s[0-9]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "Domain nameservers:\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Domain nameservers:\na\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "ve",
      "exampleString": "Domain\\x20nameservers:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ave"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 145
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\?xml\\sversion=\"1.0\"\\?>\\n<root (?:xmlns:\\w+=\".+?\".?)+>\\n\\s+([^\\s].+)\\n<\\/root>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<?xml\tversion=\"1a0\"?>\n<root "
      ],
      "pumps": [
        "xmlns:a=\"a\"\""
      ],
      "suffix": "sion",
      "exampleString": "<?xml\\x09version=\"1a0\"?>\\x0a<root\\x20xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"xmlns:a=\"a\"\"sion"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 278
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(<code[^>]*>\\s*(?:\\r\\n|\\r|\\n))((?:.|\\r|\\n)*?)<\\/code>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<code>\r"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "</<>\r</co",
      "exampleString": "<code>\\x0d\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a</<>\\x0d</co"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "gecko\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "gecko/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "e",
      "exampleString": "gecko/0._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000e"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{\\{\\{((?:.|\\n)*?)\\}\\}\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{{{"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "{a",
      "exampleString": "{{{a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a{a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "([A-Z]+)=(\"(?:\\\\.|[^\"])*\") ?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A=\""
      ],
      "pumps": [
        "\\a\\a"
      ],
      "suffix": "A\\\"a\"\"",
      "exampleString": "A=\"\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\aA\\\"a\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<script id=\"journeyLinkData\" type=\"application\\/json\">((.|\\s)*?)<\\/script>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script id=\"journeyLinkData\" type=\"application/json\">"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "o",
      "exampleString": "<script\\x20id=\"journeyLinkData\"\\x20type=\"application/json\">\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09o"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 204
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!-- Preact intro -->(.|\\r?\\n)*<!-- Preact intro -->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- Preact intro -->"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "c",
      "exampleString": "<!--\\x20Preact\\x20intro\\x20-->\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0ac"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 181
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\s*[A-Z0-9_\\-]+\\s*=>\\s*[\"'A-Z0-9_\\-.+ ]+,*\\s*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "-=> --=> \t"
      ],
      "suffix": "=>>",
      "exampleString": "-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09-=>\\x20--=>\\x20\\x09=>>"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 157
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "([^a-z0-9]|-)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "$-"
      ],
      "suffix": "0",
      "exampleString": "$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[A-Z]+|[A-Z][a-z_\\d\\x80-\\xff]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "#",
      "exampleString": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n2 NOTE ?(.*(?:\\n3.*)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n2 NOTE "
      ],
      "pumps": [
        "\n3\n3"
      ],
      "suffix": "a",
      "exampleString": "\\x0a2\\x20NOTE\\x20\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3\\x0a3a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 618
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^.*?Y.log.*?(?:;|\\).*;|(?:\\r?\\n.*?)*?\\).*;).*;?.*?\\r?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Yalog\r"
      ],
      "pumps": [
        "\n\r"
      ],
      "suffix": "o",
      "exampleString": "Yalog\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0do"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 365
    },
    "indeg": {
      "num_nodes": 17,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:\\|[^|]*\\||[-\\w.]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$|\"",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$|\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([MmLlHhVvCcSs])((?:-?(?:\\d+)?(?:\\.\\d+)?,?\\s?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "C-,"
      ],
      "pumps": [
        "\t,,"
      ],
      "suffix": "0.\t",
      "exampleString": "C-,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,\\x09,,0.\\x09"
    },
    "pivot": {
      "num_nodes": 5,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "Stack trace:(.|\\n)*?\\n\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Stack trace:"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": " t",
      "exampleString": "Stack\\x20trace:\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20t"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:[^\\\\\\[\\]\\(\\)\\|^\\{\\}]|\\\\[^cxu0-9]|\\\\[0-9]{1,3}|\\\\c[A-Z]|\\\\x[0-9a-fA-F]{2}|\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]+\\})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\uaaa"
      ],
      "pumps": [
        "a\\000\\uaaa"
      ],
      "suffix": "c\\u",
      "exampleString": "\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaaa\\000\\uaaac\\u"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 204
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{\\{\\--((.|\\s)*?)--\\}\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{{--"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "}a",
      "exampleString": "{{--\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09}a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "First commit(\\s|.)*Some previous changelog.",
    "exploitString": {
      "degree": 0,
      "separators": [
        "First commit"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "elog",
      "exampleString": "First\\x20commit\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09elog"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 153
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(?:(?:%.*)|(?:\\/\\*(?:\\n|\\r|.)*?\\*\\/)|(?:\\s+))\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "*",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 756
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\"(?:\\\\\"|.)*?\"$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\""
      ],
      "suffix": "\\a",
      "exampleString": "\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([\u4e00\u4e8c\u4e24\u4e09\u56db\u4e94\u516d\u4e03\u516b\u4e5d\u96f6\u3007]+[\u5341\u767e\u5343\u4e07\u4ebf\u5146]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u3007"
      ],
      "pumps": [
        "\u3007\u3007"
      ],
      "suffix": "#",
      "exampleString": "\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}\\x{3007}#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\/\\*(.|\\s)*?\\*\\/)|(\\/\\/.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "a",
      "exampleString": "/*a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 644
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s+(\\d+)\\s+basis functions,*\\s+(\\d+)\\s+primitive gaussians,*\\s*(\\d+)*\\s*(cartesian basis functions)*\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t0\tbasis functions\t0\tprimitive gaussians0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "n",
      "exampleString": "\\x090\\x09basis\\x20functions\\x090\\x09primitive\\x20gaussians0000000000000000000000000000000000000000000000000000000000000000000000000000000000000n"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 205
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:\\s+|#.*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "a",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 659
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s|",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[(?:.*? )*?([^ ]*?)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        "  "
      ],
      "suffix": "] a",
      "exampleString": "[\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20]\\x20a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[Unity\\](.*\\n)+title=Unity\\nsize=12345\\nurl=http:\\/\\/example.com",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[Unity]"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "//",
      "exampleString": "[Unity]a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a//"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 207
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([A-Z]\\w+\\s*)+):\\n\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Aa"
      ],
      "pumps": [
        "\tAaAa"
      ],
      "suffix": "\na",
      "exampleString": "Aa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x09AaAa\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\t|\\s)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "(<form (?:\"[^\"]*\"|'[^']*'|[^'\"<>]*)*>)(.*?)<\\/form>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<form "
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "or</\"<a",
      "exampleString": "<form\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaor</\"<a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[ ]{0,2}([ ]?-[ ]?){3,}[ \\t]*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        " -  - "
      ],
      "pumps": [
        " - -"
      ],
      "suffix": "-\t-",
      "exampleString": "\\x20-\\x20\\x20-\\x20\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20--\\x09-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-zA-Z]*[0-9]+[a-zA-Z]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "#",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000#"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^http:\\/\\/(www\\.youtube|youtube)\\.com\\/watch\\?v=[^&]*(&.*){0,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "http://youtube.com/watch?v="
      ],
      "pumps": [
        "&&"
      ],
      "suffix": "a",
      "exampleString": "http://youtube.com/watch?v=&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 685
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "## Contributors(.|\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "## Contributors"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "##\\x20Contributors\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 710
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "/(\\\\\\\\|\\\\/|[^\\n/])*/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "\\/\\\\"
      ],
      "suffix": "a\\//a",
      "exampleString": "/\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\\\/\\\\a\\//a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "^((?:[^:]+|:[^:])*)::(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ":",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 589
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(?:[^']*?#[^']*?)*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "#a"
      ],
      "suffix": "'#'#",
      "exampleString": "'#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a'#'#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\$\\w+(\\{.*?\\})*\\s*=.*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$a{"
      ],
      "pumps": [
        "a}{"
      ],
      "suffix": "a",
      "exampleString": "$a{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a}{a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 777
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([a-z]*[A-Z]*[0-9]*(_|-)*)*/*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 5,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\*]*#[^\\*]*)+\\*?",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "#a"
      ],
      "suffix": "a**",
      "exampleString": "#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#aa**"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\/\\/.*\\r?\\n)*['\"]use strict['\"];?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//"
      ],
      "pumps": [
        "a\r\n//"
      ],
      "suffix": "s",
      "exampleString": "//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//a\\x0d\\x0a//s"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 126
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "'([^']*(&[ ]*[\\n\\r]+)?)*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\n&",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x0a&"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([A-Z]?[A-Z]?[C,Z]?[0-9]{3}[>\\-]\\s?\\n?)+)([0-9]{6})-$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "AA,000-\t"
      ],
      "pumps": [
        "\nC000-"
      ],
      "suffix": "-CC",
      "exampleString": "AA,000-\\x09\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000-\\x0aC000--CC"
    },
    "pivot": {
      "num_nodes": 5,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:\\w+\\.?\\w+)+)\\s*:\\s*(\\w+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\t.",
      "exampleString": "a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[+\\-]?(\\d+([.,]\\d+)?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "++",
      "exampleString": "+0000000000000000000000000000000000000000000000000000000000000000000000000000000000000++"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 70
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(https?:\\/\\/(([\\w.-]+)+(:\\d+)?(\\/([\\w/_.]*(\\?\\S+)?)?)?))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:'[^']*'|[^\\|])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "'''''"
      ],
      "suffix": "|'|",
      "exampleString": "'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''|'|"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:[^)\\\\]+|\\\\.)*)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\a)a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\a)a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*(?:\\'(?:\\\\\\'|.)*?\\'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+[;\\s]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*a:'"
      ],
      "pumps": [
        "\\'"
      ],
      "suffix": "a\t}",
      "exampleString": "*a:'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'a\\x09}"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 324
    },
    "indeg": {
      "num_nodes": 17,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "(-arch \\S+(?: -arch \\S+)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-arch a -arch "
      ],
      "pumps": [
        "a -arch "
      ],
      "suffix": "\t",
      "exampleString": "-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20a\\x20-arch\\x20\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "return\\s*\\(?'((?:\\\\'|[^']+)+)'\\)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "return('a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ")\\",
      "exampleString": "return('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\?((.|\\s)*?)\\?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<?"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\t",
      "exampleString": "<?\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(@(-?)[a-zA-Z\\-]*(keyframes)*\\s[a-zA-Z\\-]*(\\s*,?\\s*)){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@-\t,@-"
      ],
      "pumps": [
        "keyframes\t@-"
      ],
      "suffix": "@akeyfram",
      "exampleString": "@-\\x09,@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-keyframes\\x09@-@akeyfram"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 205
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "height=\"([^\"]+)*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "height=\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "i",
      "exampleString": "height=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaai"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\"(\\\\\\\\|\\\\\"|[^\"])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\"\\\\"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<h(.*?)>((.|\\n|\\r\\n)*?)<\\/h1>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<h>"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "h",
      "exampleString": "<h>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ah"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s*)?ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;(?:(\\s*)(ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;)?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\tAS",
      "exampleString": "ASSETCATALOG_COMPILER_APPICON_NAME\\x20=\\x20AppIcon;\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09AS"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 279
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\nLast Modified.*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\nLast "
      ],
      "pumps": [
        "Modified\nLast Modified\nLast "
      ],
      "suffix": "Modif",
      "exampleString": "\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modified\\x0aLast\\x20Modif"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 692
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(a|b|ab)*bc",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "ab"
      ],
      "suffix": "cb",
      "exampleString": "ababababababababababababababababababababababababababababababababababababababababababcb"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(```\\s*(?:js|javascript)\\n)?(.*)(\\/\\*\\*\\*\\*\\*\\*\\/ \\(function\\(modules\\) \\{ \\/\\/ webpackBootstrap\\n(?:.|\\n)*?\\n\\/\\*\\*\\*\\*\\*\\*\\/ \\}\\)\\n\\/\\**\\/\\n)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/******/ (function(modules) { // webpackBootstrap\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "ts",
      "exampleString": "/******/\\x20(function(modules)\\x20{\\x20//\\x20webpackBootstrap\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ats"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 455
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([A-Z]+[a-z]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "#",
      "exampleString": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 62
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(use \\w+\\:\\:\\w+.+?\\;[\\r\\n][\\r\\n.]*){3,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "use a::aa;\nuse a::aa;\nuse a::"
      ],
      "pumps": [
        "aa;\nuse a::aa;\nuse a::"
      ],
      "suffix": "e",
      "exampleString": "use\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::aa;\\x0ause\\x20a::e"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 282
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d+)*:(\\d+)*:*(\\d+)*[:,]*(\\d+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ",0:",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000,0:"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\S+\\.)+\\S+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        ".a.a"
      ],
      "suffix": "\t",
      "exampleString": "a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*\\[[^\\]]+\\]\\s*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a]"
      ],
      "pumps": [
        "\t[a]"
      ],
      "suffix": "]a",
      "exampleString": "[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]\\x09[a]]a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "GlobalSection\\(SolutionConfigurationPlatforms\\) = preSolution((?:.|\\n)*?)EndGlobalSection",
    "exploitString": {
      "degree": 0,
      "separators": [
        "GlobalSection(SolutionConfigurationPlatforms) = preSolution"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "ndGlobalSe",
      "exampleString": "GlobalSection(SolutionConfigurationPlatforms)\\x20=\\x20preSolutiona\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0andGlobalSe"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 221
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^#\\n]|#[^{\\n]|(\\\\\\\\)*\\\\#\\{)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#"
      ],
      "pumps": [
        "a\\\\\\#{#"
      ],
      "suffix": "#a#{",
      "exampleString": "#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{#a\\\\\\#{##a#{"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#\\"
      ],
      "pumps": [
        "aaaaaa\\"
      ],
      "suffix": "\\a$",
      "exampleString": "#\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\\\a$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 146
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d+)\\.(\\d+)\\.(\\d+)(([\\.-][0-9A-Za-z-]+)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0.0.0-a"
      ],
      "pumps": [
        "-a"
      ],
      "suffix": "a..",
      "exampleString": "0.0.0-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-aa.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(\\S+)\\s*=\\s*((\\S|\\S+\\s+\\S+)+)\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a=a\t"
      ],
      "pumps": [
        "aaa\t"
      ],
      "suffix": "\ta\ta\ta",
      "exampleString": "a=a\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09\\x09a\\x09a\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 180
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "href=\"xmpp:\\s?(\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+)\\s?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "href=\"xmpp:\ta-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "h",
      "exampleString": "href=\"xmpp:\\x09a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaah"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 140
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "@(\\\\[\\\\@]|[^@])*@[egimosx]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@"
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": "@a\\",
      "exampleString": "@\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\@a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "'((\\\\.|[^'])*)'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\$\\$((.|\\n)*?)\\$\\$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$$"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "$\n",
      "exampleString": "$$\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a$\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "blazer\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "b\t",
      "exampleString": "blazer\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<textarea[^>]*>)(.|\\n)*(<\\/textarea>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<textarea>"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "<text",
      "exampleString": "<textarea>a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a<text"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 140
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\?(.+?)=([^&]*)(?:\\&(.+?)=([^&]*))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "?a=&"
      ],
      "pumps": [
        "a=&"
      ],
      "suffix": "a&",
      "exampleString": "?a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a=&a&"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "Physical density: ([^\\r?\\n]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Physical density: a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\n",
      "exampleString": "Physical\\x20density:\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\/?form(.|\\s)*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</form"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "<",
      "exampleString": "</form\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s|\\t)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\<div class=\"mapping\"\\>(.|\\s)*\\<\\/div>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<div class=\"mapping\">"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "</",
      "exampleString": "<div\\x20class=\"mapping\">\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09</"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 136
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z]([a-z0-9]*[-_]?[a-z0-9]+)*@([a-z0-9]*[-_]?[a-z0-9]+)+[\\.][a-z]{2,3}([\\.][a-z]{2})?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a@a-",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@a-"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "^java\\.util\\..*Map.*(<.*>)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "java.util.Map"
      ],
      "pumps": [
        "<><>"
      ],
      "suffix": "a",
      "exampleString": "java.util.Map<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 756
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:.|\\n)*?)<style>((?:.|\\n)*)<\\/style>((?:.|\\n)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\n<style><styl",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<style><styl"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 839
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "```config\\s+((.|\\s)+?)\\s*```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```config\t\t"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "a",
      "exampleString": "```config\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(doi:\\s*|(?:https?://)?(?:dx\\.)?doi\\.org/)?(10\\.\\d+(.\\d+)*/.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "10.0"
      ],
      "pumps": [
        "a000"
      ],
      "suffix": "aa",
      "exampleString": "10.0a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 738
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "defaults\\s*\\=\\s*(\\{(?:.|\\s)+?\\}\\;)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "defaults={"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "d",
      "exampleString": "defaults={\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09d"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((.*\\n)*)\\r?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "\ra\n",
      "exampleString": "\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0da\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n[[File|"
      ],
      "pumps": [
        "|"
      ],
      "suffix": "[",
      "exampleString": "\\x0a[[File|||||||||||||||||||||||||||||||||||||||||||["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z](-?[a-z0-9]+)*(__[a-z0-9](-?[a-z0-9]+)*)?((_[a-z0-9](-?[a-z0-9]+)*){0,2})?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-a_a-a_a-",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-a_a-a_a-"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[ ]{0,2}([ ]?\\-[ ]?){3,}[ \\t]*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        " -  - "
      ],
      "pumps": [
        " - -"
      ],
      "suffix": "-\t-",
      "exampleString": "\\x20-\\x20\\x20-\\x20\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20-\\x20--\\x09-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "([a-zA-Z0-9]*:[a-zA-Z0-9]*)(,|[a-zA-Z0-9]*:[a-zA-Z0-9]*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":"
      ],
      "pumps": [
        ",:a:"
      ],
      "suffix": ",a,",
      "exampleString": ":,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,:a:,a,"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^@@INIT(.|\\n)+@@reduxReactRouter\\/routerDidChange(.|\\n)+@@reduxReactRouter\\/initRoutes(.|\\n)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@@INIT"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "a@@reduxReactRouter/routerDidChange@@reduxReactRouter",
      "exampleString": "@@INITa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa@@reduxReactRouter/routerDidChange@@reduxReactRouter"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 998
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^\\s']+|'[^']*')+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "'\t'\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\\x09'\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\/(?:(?:\\\\.|[^\\/\\r\\n])+?)\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/\\"
      ],
      "pumps": [
        "a\\a\\"
      ],
      "suffix": "a\\/\n",
      "exampleString": "/\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\/\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\[[^\\]]*\\]\\(\\s*)((([^\\s\\(\\)]|\\(\\S*?\\))+))\\s*(\".*?\")?\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[]("
      ],
      "pumps": [
        "a()()"
      ],
      "suffix": ")]",
      "exampleString": "[](a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()()a()())]"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\#.*?\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#"
      ],
      "pumps": [
        "\n#\n#"
      ],
      "suffix": "a",
      "exampleString": "#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^E(?:\\\\'|.)*?'$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "E"
      ],
      "pumps": [
        "\\'"
      ],
      "suffix": "a",
      "exampleString": "E\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\?|\\*|\\{((?:\\{[^/]+?\\}|[^/{}]|\\\\[{}])+?)\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{{a"
      ],
      "pumps": [
        "}\\{{a"
      ],
      "suffix": "*a{",
      "exampleString": "{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a}\\{{a*a{"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\w+(_+)*\\w*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a_"
      ],
      "pumps": [
        "__"
      ],
      "suffix": "#",
      "exampleString": "a_____________________________________________________________________________________#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d+\\.*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "#",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\{)((\\[)(\\d+)..(\\d+)(\\])[,]?){1,}(\\})?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{[0aa"
      ],
      "pumps": [
        "0][0000][000"
      ],
      "suffix": "{[0",
      "exampleString": "{[0aa{[0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\\\.|[^\\.])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "..",
      "exampleString": "a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\"(<a .+?a>|[^\"\\\\]|\\\\.)*\"|'([^'\\\\]|\\\\.)?')",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"<a "
      ],
      "pumps": [
        "aa><a "
      ],
      "suffix": "'\\",
      "exampleString": "\"<a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20'\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 136
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "`{3,}(\\w+)?((?:\\n|.)+?)`{3,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```a"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "`a",
      "exampleString": "```a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a`a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^<([\\w:-]+)((?:\\s*[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "<$\t'\ta/\"\ta\t",
      "exampleString": "<aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa<$\\x09'\\x09a/\"\\x09a\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\\\.|\"\"|[^\"])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "\\a\"\\",
      "exampleString": "a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a\\a\"\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "([\\[\\|]?[A-Z]+\\|?)+\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[A"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "A|[|",
      "exampleString": "[AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|[|"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<ol( start=\\\"\\d+\\\")?\\s*>\\s*((<li>\\s*.*?\\s*</li>\\s*)*)</ol>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<ol><li>"
      ],
      "pumps": [
        "</li><li></li><li>"
      ],
      "suffix": "t",
      "exampleString": "<ol><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li>t"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 171
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[a-z_](?:[\\._-]?[a-z0-9_])*(?:\\/[a-z_](?:[\\._-]?[a-z0-9_])*)+\\.d\\.ts$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "-a_a"
      ],
      "suffix": "-a",
      "exampleString": "a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.+?)=(\\S+::\\S+(?::\\s*,\\s*\\S+::\\S+)*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a=a::a:,a:"
      ],
      "pumps": [
        ":a:,a::,:,a:"
      ],
      "suffix": ",\t",
      "exampleString": "a=a::a:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a::a:,a::,:,a:,\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 211
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.+\\/)*(.*)(\\.[^.]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "/a"
      ],
      "suffix": "/a.",
      "exampleString": "a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "/Encoding \\d+ array\\n(0 1 .*for\\n)?((dup \\d+\\s*/\\S+ put(.*)\\n)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/Encoding 0 array\n"
      ],
      "pumps": [
        "dup 0/a put put\n"
      ],
      "suffix": "up\t",
      "exampleString": "/Encoding\\x200\\x20array\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0adup\\x200/a\\x20put\\x20put\\x0aup\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 210
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d+\\.\\d+\\.\\d+)(\\-[^\\+]+)*(\\+.+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0.0.0-"
      ],
      "pumps": [
        "a-a-"
      ],
      "suffix": "+",
      "exampleString": "0.0.0-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-+"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 718
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "s%(\\\\\\\\|\\\\%|[^%])*%(\\\\\\\\|\\\\%|[^%])*%[msixpodualngc]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "s%"
      ],
      "pumps": [
        "a\\\\"
      ],
      "suffix": "s$%%$",
      "exampleString": "s%a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\s$%%$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s+((?:(?:CROSS|INNER|OUTER|LEFT|RIGHT)?\\s+)*?JOIN)\\s+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "O",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09O"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "require\\(['\"](..?\\/)+(utils|core|constants)['\"]\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "require(\""
      ],
      "pumps": [
        "a//a/"
      ],
      "suffix": "c",
      "exampleString": "require(\"a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/a//a/c"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 258
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^no[_-](\\w+(?:[-_]\\w+)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "no-a"
      ],
      "pumps": [
        "-a_a"
      ],
      "suffix": "--",
      "exampleString": "no-a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a-a_a--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(!--|[a-z]+(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^ >]+)?)*\\s*>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\ta=a"
      ],
      "pumps": [
        "\ta=a"
      ],
      "suffix": "\t>>",
      "exampleString": "a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09a=a\\x09>>"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 137
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "<key>aps-environment</key>(.|[\r",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<key>aps-environment</key>"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "r<strin",
      "exampleString": "<key>aps-environment</key>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ar<strin"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 185
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "vertex\t+0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0.E",
      "exampleString": "vertex\\x09+00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.E"
    },
    "pivot": {
      "num_nodes": 15,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 27,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 27,
      "exec_time": 1
    }
  },
  {
    "pattern": "<(?:(?:!--([\\w\\W]*?)-->)|(?:!\\[CDATA\\[([\\w\\W]*?)\\]\\]>)|(?:!DOCTYPE([\\w\\W]*?)>)|(?:\\?([^\\s\\/<>]+) ?([\\w\\W]*?)[?/]>)|(?:\\/([^>]+)>)|(?:([^\\s\\/<>]+)((?:\\s+[^\"'>]+(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>]*))*|\\/)>))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\ta\""
      ],
      "pumps": [
        "a\"\ta'\ta'\ta\""
      ],
      "suffix": "DO?\"-]'-]?\"-]/--",
      "exampleString": "<a\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"a\"\\x09a'\\x09a'\\x09a\"DO?\"-]'-]?\"-]/--"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 649
    },
    "indeg": {
      "num_nodes": 20,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 18,
      "exec_time": 1
    }
  },
  {
    "pattern": "either\\s+(?:[A-Z0-9_]+\\s*,?\\s*(?:or)?\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "either\t0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\tr",
      "exampleString": "either\\x090000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09r"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[^\\s]+(?:\\s*,\\s*[^\\s]+)*[^\\s]+\\s+from\\s+.+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        ",a,\t,a\t"
      ],
      "suffix": ",aa,\tfro",
      "exampleString": "a,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,a,\\x09,a\\x09,aa,\\x09fro"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 827
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "mxios\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0._",
      "exampleString": "mxios\\x090._00000000000000000000000000000000000000000000000000000000000000000000000000000000000000._"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\s*script[^>]*>((.|\\s)*?)<\\\\?\\/\\s*script\\s*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script>"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "<\\/s",
      "exampleString": "<script>\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09<\\/s"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 142
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([ \\t]*)\\/\\/-?\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/-?\\s*endbower)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//-bower"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": " ",
      "exampleString": "//-bower\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 214
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([A-Z]+\\s*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "#",
      "exampleString": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "imports: \\[(.|\\s)*Test3Module(.|\\s)*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "imports: ["
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "mpo",
      "exampleString": "imports:\\x20[\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09mpo"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 167
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(x+x+)+y",
    "exploitString": {
      "degree": 0,
      "separators": [
        "xx"
      ],
      "pumps": [
        "xx"
      ],
      "suffix": "yx",
      "exampleString": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxyx"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\d+[\\ ]+(\\w+)+(\\s+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0 a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " a\ta",
      "exampleString": "0\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20a\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[CDATA\\[((.|\\n|\\r)*)\\]\\]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[CDATA["
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "ATA",
      "exampleString": "[CDATA[\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0dATA"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^/*(\\w+)\\/(\\w+)\\?{0,1}(\\w*\\={1}(\\w|\\.)+\\&{0,1})*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a/a=.&"
      ],
      "pumps": [
        "=.a=.&"
      ],
      "suffix": "a.&&",
      "exampleString": "a/a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&=.a=.&a.&&"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 120
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n(\\d{4}-\\d{2}-\\d{2}.*\\n\\d{8}.*(?:\\n *\\[\\d+\\].*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n0000-00-00\n00000000\n["
      ],
      "pumps": [
        "0]\n[0]\n["
      ],
      "suffix": "a",
      "exampleString": "\\x0a0000-00-00\\x0a00000000\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[0]\\x0a[a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 797
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n +at .+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n at"
      ],
      "pumps": [
        " a\n at a\n at"
      ],
      "suffix": "a",
      "exampleString": "\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20at\\x20a\\x0a\\x20ata"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 595
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*this\\.\\$\\w+\\s*=(.|\\s)*?;",
    "exploitString": {
      "degree": 0,
      "separators": [
        "this.$a="
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\tthis",
      "exampleString": "this.$a=\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09this"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s|\\n|\\r)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\[\\s*'((?:\\\\'|.)*?)'\\s*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "['"
      ],
      "pumps": [
        "a\\'"
      ],
      "suffix": "[",
      "exampleString": "['a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'a\\'["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "[^\\r\\n]*(?:\\r|\\n|\\r\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "a\na",
      "exampleString": "\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0da\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^{}]+\\s*\\{[^{}]*\\}\\s*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a{"
      ],
      "pumps": [
        "}\t\t{"
      ],
      "suffix": "a",
      "exampleString": "a{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{}\\x09\\x09{a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*[^\\[]\\S+\\s*(\\S+=\\S+\\s*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aaa"
      ],
      "pumps": [
        "==aa"
      ],
      "suffix": "[\ta\t",
      "exampleString": "aaa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa==aa[\\x09a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "[^\\x00-\\xff](((.*)*)*x)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u0100"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\u0100",
      "exampleString": "\\x{100}aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x{100}"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\$(?:\\\\[\\\\\\$]|[^\\$])*\\$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$"
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": "$$a",
      "exampleString": "$\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$$a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\/\\/.*)*\\s*return isBindFast[^:]+:\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "//\t\t"
      ],
      "suffix": "nd\t/",
      "exampleString": "//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09nd\\x09/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 218
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\s+|#.*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "a",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 618
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "width=\"([^\"]+)*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "width=\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "=\"\"\"",
      "exampleString": "width=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(.|\\r|\\n)*?\\r?\\n\\r?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\r"
      ],
      "suffix": "\ra\n",
      "exampleString": "\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0da\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\r\\n)+(\\s)?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r\n"
      ],
      "pumps": [
        "\r\n\n"
      ],
      "suffix": "\t\t",
      "exampleString": "\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-0.0"
      ],
      "pumps": [
        "a.00"
      ],
      "suffix": "0..",
      "exampleString": "-0.0a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.00a.000.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "dolfin\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "dolfin/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "dolfin/0._00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^  Front Left: (Playback |Capture )?(\\d+)(\\s+|\\[[^\\]]+\\])*( Capture (\\d+))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "  Front Left: 0\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "p",
      "exampleString": "\\x20\\x20Front\\x20Left:\\x200\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09p"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 203
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^!:\\s]+)*\\s*:\\s*(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 628
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "class FooView extends Backbone.View(.|\\n)*app\\/scripts\\/templates\\/foo.ejs",
    "exploitString": {
      "degree": 0,
      "separators": [
        "class FooView extends BackboneaView"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "eVie",
      "exampleString": "class\\x20FooView\\x20extends\\x20BackboneaView\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aeVie"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 228
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:([A-Z][a-z]*)(\\d+-?\\d*)?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A0-"
      ],
      "pumps": [
        "0A00"
      ],
      "suffix": "-A0a",
      "exampleString": "A0-0A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A00-A0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "`(?:\\\\`|\\\\?[^`])*`",
    "exploitString": {
      "degree": 0,
      "separators": [
        "`\\"
      ],
      "pumps": [
        "a\\\\\\"
      ],
      "suffix": "``a",
      "exampleString": "`\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\``a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\<span class=\\\"w2ui\\-marker\\\"\\>((.|\\n|\\r)*)\\<\\/span\\>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<span class=\"w2ui-marker\">"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "-m\n",
      "exampleString": "<span\\x20class=\"w2ui-marker\">\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a-m\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 165
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "Registrar:\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Registrar:\na\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "a",
      "exampleString": "Registrar:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:global\\s+)?)((?:\\w+\\.?)+)(?:\\s+as\\s+(\\w+))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "as\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaas\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "w0sbrowser/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "00.",
      "exampleString": "w0sbrowser/0._000000000000000000000000000000000000000000000000000000000000000000000000000000000000000."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<([^>]|\\n)*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\n>>",
      "exampleString": "<\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a>>"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<meta name=\"description\"([^>]*)*>\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<meta name=\"description\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "p",
      "exampleString": "<meta\\x20name=\"description\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaap"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\$(([a-z0-9]{2,})(?:[._][a-z0-9]+|\\[\\s*['\"](?:[^\\/]*?)['\"]\\s*\\])*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$aa[\""
      ],
      "pumps": [
        "\"][\""
      ],
      "suffix": "$a",
      "exampleString": "$aa[\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"\"][\"$a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 128
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\S+)\\s+(\\S+\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "a\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 591
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*Uptime \\d+s?\\s*\\n\\n(Process\\s+[^\\s]+\\s+.*\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Uptime 0s\n\nProcess\ta\t\n"
      ],
      "pumps": [
        "Process\ta\t\nProcess\nProcess\ta\t\n"
      ],
      "suffix": "i",
      "exampleString": "Uptime\\x200s\\x0a\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0aProcess\\x09a\\x09\\x0aProcess\\x0aProcess\\x09a\\x09\\x0ai"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 163
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(snmp-server host \\S+( vrf \\S+)?( version (1|2c|3))?)\\s+\\S+((\\s+\\S*)*)\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "snmp-server host a\ta\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "a",
      "exampleString": "snmp-server\\x20host\\x20a\\x09a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 787
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:(?:\"|').*(?:\"|')(?:\\^\\^[^\\s]*)?|a|<[^\\s]*>|[^\\s]*:[^\\s]+|;|,|@prefix\\s*[^\\s]*\\s*:\\s*<[^\\s<>]+>|\\s*\r?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\r\r"
      ],
      "suffix": "x,<@.\":\n,<\":\":@",
      "exampleString": "\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0dx,<@.\":\\x0a,<\":\":@"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 901
    },
    "indeg": {
      "num_nodes": 19,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:.+/)*(.*)(\\.[^.]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "/a"
      ],
      "suffix": "/a.",
      "exampleString": "a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^.*<test(suite|case).* name=\\\"([^\\\"]+)\\\"(.* classname=\\\"([^\\\"]+)\\\")*.* time=\\\"([0-9.]+)\\\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<testcase name=\"a\" cla"
      ],
      "pumps": [
        "ssname=\"a\" classname=\"a\" cla"
      ],
      "suffix": "u name=\" <testcas",
      "exampleString": "<testcase\\x20name=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20classname=\"a\"\\x20clau\\x20name=\"\\x20<testcas"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 525
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[(.*) (.*) (.*) (.*):(.*):(.*)\\.(.*) (.*)\\] \\[(.*):(.*)\\] \\[pid (.*)\\] .*\\[client (.*):(.*)\\] (.*)(, referer: (.*))*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[   ::. ] [:] [pid ] [client :] , refere"
      ],
      "pumps": [
        "r: , referer: , refere"
      ],
      "suffix": "a",
      "exampleString": "[\\x20\\x20\\x20::.\\x20]\\x20[:]\\x20[pid\\x20]\\x20[client\\x20:]\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referer:\\x20,\\x20referea"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 2248
    },
    "indeg": {
      "num_nodes": 17,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 17,
      "exec_time": 1
    }
  },
  {
    "pattern": "^((\\s*)(@charset)\\s+([^;]+;\\s*))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@charset\ta"
      ],
      "pumps": [
        ";@charset\t\ta"
      ],
      "suffix": "s;@charset",
      "exampleString": "@charset\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09a;@charset\\x09\\x09as;@charset"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 130
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(unix)\\s?([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "unix\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "un\t",
      "exampleString": "unix\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaun\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"((?:\\\\[\\x00-\\x7f]|[^\\x00-\\x08\\x0a-\\x1f\\x7f\"])*)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\\"\u0000",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\"\\x00"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\{((.|\\n)*)\\}\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "}a",
      "exampleString": "{\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a}a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "CDN\\(((\\([^)]+\\)|[^)])+)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "CDN((a"
      ],
      "pumps": [
        ")((a"
      ],
      "suffix": "D",
      "exampleString": "CDN((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((aD"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\\\.|[^\"])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "\"\"",
      "exampleString": "a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*@charset [^;]+;\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@"
      ],
      "pumps": [
        "charset a;\t@"
      ],
      "suffix": "h",
      "exampleString": "@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@h"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 136
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([0-9a-zA-Z-]+\\.{0,1})*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a..",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(?:\\\\?[\\s\\S])*?'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "a",
      "exampleString": "'\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": ">Occupation(\\\\(s\\\\)|s)<?((.|\\n)*?)</tr>",
    "exploitString": {
      "degree": 0,
      "separators": [
        ">Occupations<"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "io",
      "exampleString": ">Occupations<\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aio"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " ",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 977
    },
    "indeg": {
      "num_nodes": 17,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 0
    }
  },
  {
    "pattern": "document\\.write\\('((\\\\.|[^\\'])*)'\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "document.write('"
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "d\\'",
      "exampleString": "document.write('a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\ad\\'"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\s|\\t)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s|\\t)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "too many redirects(\\n|.)*\\/a\\?b=x(\\n|.)*\\/b\\?b=x",
    "exploitString": {
      "degree": 0,
      "separators": [
        "too many redirects"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "r",
      "exampleString": "too\\x20many\\x20redirects\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ar"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 158
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\(*\"((.|\\\\|\\\")*?)\" *",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\"\""
      ],
      "suffix": "\\",
      "exampleString": "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\[]*)(\\[(\\d+)+\\])?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0[[",
      "exampleString": "[00000000000000000000000000000000000000000000000000000000000000000000000000000000000000[["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "lg[e;\\s\\/-]+(\\w+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "lg\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "lga\t",
      "exampleString": "lg\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaalga\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#"
      ],
      "pumps": [
        "\\aaa"
      ],
      "suffix": "a\t",
      "exampleString": "#\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 185
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r|a"
      ],
      "pumps": [
        "|\r|a|\n|a"
      ],
      "suffix": "\r",
      "exampleString": "\\x0d|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a|\\x0d|a|\\x0a|a\\x0d"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\\/\\/][\\/\\*]\\s*TODO:\\s*(?:\\(([^:]*)\\))*\\s*:?\\s*(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*TODO:("
      ],
      "pumps": [
        ")()("
      ],
      "suffix": "a",
      "exampleString": "/*TODO:()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()(a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 819
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(?:\\r\\n)?\\s)*([^:]+)(?::(\\d+))?(?:(?:\\r\\n)?\\s)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\t\r\n\t\r"
      ],
      "suffix": "0::",
      "exampleString": "\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d0::"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s{2,}|\\t)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t\t"
      ],
      "pumps": [
        "\t\t\t"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([a-z]+)+\\s+(\\d+\\.+\\d+.\\d.+\\d)+\\s+([a-zA-z]+)+\\s+(\\d+)+\\s+(\\d+)+\\s+([a-zA-Z]+\\d+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 20,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 20,
      "exec_time": 1
    }
  },
  {
    "pattern": "([=-]*)([^:=]+:[^\\(\\s]+)(\\(([^\\)]+)\\))?\\s*(?:(\\((<.+>)\\))*)\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:a"
      ],
      "pumps": [
        "(<a>)(<a>)"
      ],
      "suffix": "=-)(=",
      "exampleString": "a:a(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)(<a>)=-)(="
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 178
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "QStringList(?:[^\\w]+(?:.*?))+?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "QStringList$"
      ],
      "pumps": [
        "$$"
      ],
      "suffix": "a",
      "exampleString": "QStringList$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 686
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "={{"
      ],
      "pumps": [
        "a}{a{"
      ],
      "suffix": "}}a}{",
      "exampleString": "={{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{}}a}{"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s?(\\S+\\=\\S+;)*\\s(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\ta"
      ],
      "pumps": [
        "=a;a=;;a"
      ],
      "suffix": "a",
      "exampleString": "\\x09a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;a=a;a=;;aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 626
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(<<<([-\\d]+ [^ ]+ (.+)?;)+>>>)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "<<<- a ;- ;>>><<<- a ;>>>"
      ],
      "suffix": "<-;",
      "exampleString": "<<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><<<-\\x20a\\x20;-\\x20;>>><<<-\\x20a\\x20;>>><-;"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": " (?:<%.*?%>|[^>])* ",
    "exploitString": {
      "degree": 0,
      "separators": [
        " <%"
      ],
      "pumps": [
        "%><%<%"
      ],
      "suffix": ">% <>",
      "exampleString": "\\x20<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%%><%<%>%\\x20<>"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\s\\(\\/]+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "function/*a*/"
      ],
      "pumps": [
        "\t\t/*a*/"
      ],
      "suffix": "n/*",
      "exampleString": "function/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/\\x09\\x09/*a*/n/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s*[",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\n"
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<[a-zA-Z\\/](.|\\n)*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "<",
      "exampleString": "<a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^.*<head(\\s[^>]*)*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<head\t"
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "ea\t<h><h",
      "exampleString": "<head\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09ea\\x09<h><h"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "task migrate: :environment do\\n((\\n|\\s*.*\\n)*)\\s+end",
    "exploitString": {
      "degree": 0,
      "separators": [
        "task migrate: :environment do\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "t",
      "exampleString": "task\\x20migrate:\\x20:environment\\x20do\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0at"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 149
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(pgp_sym_(encrypt|decrypt))\\(((.|\\n)*?)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "pgp_sym_decrypt("
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "ec",
      "exampleString": "pgp_sym_decrypt(\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aec"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 128
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([A-Za-z]+,?\\s?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ",\t\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "on((([A-Z]*[a-z]*)*?)[A-Z]+[a-z]+)=\"#([^ \"':]+)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "on"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "o",
      "exampleString": "onaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaao"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:Domain:.+\\n)(?:.+:.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Domain:a\na"
      ],
      "pumps": [
        ":a\na:\n\na"
      ],
      "suffix": "in\n",
      "exampleString": "Domain:a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aa:a\\x0aa:\\x0a\\x0aain\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<w:body>)((.|\\n)*?)(<w:sectPr)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<w:body>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "ec",
      "exampleString": "<w:body>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aec"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<script(.*?)>(.*?[\\r\\n])*?(.*?)(.*?[\\r\\n])*?<\\/script>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script>"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "</s",
      "exampleString": "<script>\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa</s"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 190
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z][a-zA-Z0-9_]+)\\@((?:[a-zA-Z][a-zA-Z0-9\\-]*\\.)*[a-zA-Z][a-zA-Z0-9\\-]*)\\:((?:[A-Za-z0-9_\\-\\.]+\\/?)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa@a:a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0.:",
      "exampleString": "aa@a:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0.:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\n\\r|\\r\\n|\\r|\\n)[\\t\\s]*(?:\\n\\r|\\r\\n|\\r|\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\n\r"
      ],
      "suffix": "\r\t",
      "exampleString": "\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0d\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 128
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((set +\\w+ +\\d+) +p(o(l(y(g(o(n)?)?)?)?)?)? +from +-?\\d+(\\.\\d+)?([eE]?\\-?\\d+)?\\,-?\\d+(\\.\\d+)?([eE]?\\-?\\d+)?( +to +-?\\d+(\\.\\d+)?([eE]?\\-?\\d+)?\\,-?\\d+(\\.\\d+)?([eE]?\\-?\\d+)?)+ +)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "set a 0 p from -0,-0 to -0,-0E-"
      ],
      "pumps": [
        "0 to 0,0.00 to 0,0-"
      ],
      "suffix": "m -0-",
      "exampleString": "set\\x20a\\x200\\x20p\\x20from\\x20-0,-0\\x20to\\x20-0,-0E-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-0\\x20to\\x200,0.00\\x20to\\x200,0-m\\x20-0-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 510
    },
    "indeg": {
      "num_nodes": 49,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 49,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:'(\\\\\\\\|\\\\'|[^'])*')",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\'\\\\"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\<|\\[|\\{)((?:\\w+|\\:|\\||\\.\\.\\.| (?:[0-9]+))+)(?:\\>|\\]|\\})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "{",
      "exampleString": "[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa{"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a['"
      ],
      "pumps": [
        "'][\"\"].a[\"\"]['"
      ],
      "suffix": "0",
      "exampleString": "a[''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"]['0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 172
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(:?#\\d+\\W+)(:?0x(?:(?:\\d|[abcdefABCDEF]){0,2})+)(:? +in +)(:?.+?)(:? .+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":#0$:0xa"
      ],
      "pumps": [
        "aa0a"
      ],
      "suffix": "a ",
      "exampleString": ":#0$:0xaaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aa\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 761
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "(uniform|varying|in|out)[ \\t\\n\\r]+(float|int|bool|vec2|vec3|vec4|struct)([ \\t\\n\\r]+[^\\;]+[ \\t\\n\\r]*\\,*)+\\;",
    "exploitString": {
      "degree": 0,
      "separators": [
        "in\tvec3\ta"
      ],
      "pumps": [
        "\t\t,\ta"
      ],
      "suffix": "g\t",
      "exampleString": "in\\x09vec3\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09a\\x09\\x09,\\x09ag\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 220
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:(\\d+):)?(?:(\\d+)+:)?(\\d+(?:\\.\\d+)?)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "```package\\s+((.|\\s)+?)\\s*```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```package\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "k",
      "exampleString": "```package\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09k"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^==\\s*NAME\\s*==\\n(?:[\\w:]+)(?: - (.*))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "==NAME==\na"
      ],
      "pumps": [
        " -  - "
      ],
      "suffix": "a",
      "exampleString": "==NAME==\\x0aa\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20\\x20-\\x20a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 678
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z_][a-z0-9_]*(?:\\[(?:\\d*|[a-z0-9_]+)\\])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a["
      ],
      "pumps": [
        "0][0]["
      ],
      "suffix": "0[[",
      "exampleString": "a[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0[["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(\\w+)=(\\S+|\"(?:[^\\\\\"]+|\\\\\"|\\\\)*\")",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a=\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\ta",
      "exampleString": "a=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([A-Z][a-zA-Z\\d$]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "AaAa"
      ],
      "suffix": "#",
      "exampleString": "AaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAa#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(https?|ftp):\\/\\/(-\\.)?([^\\s\\/?\\.#]+\\.?)+(\\/[^\\s]*)?[^\\s\\.,]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ftp://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "tps..",
      "exampleString": "ftp://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaatps.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(https?|ftp):\\/\\/(-\\.)?([^\\s\\/?\\.#-]+\\.?)+(\\/[^\\s]*)?[^\\s\\.,]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ftp://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-.",
      "exampleString": "ftp://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "%\\{((@)?\\w+(.\\w+)*)\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%{@aa"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "${",
      "exampleString": "%{@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa${"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "slimerjs\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "slimerjs/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "imerjs",
      "exampleString": "slimerjs/0._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000imerjs"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(aa|aabaac|ba|b|c)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "baaabaac"
      ],
      "suffix": "acab",
      "exampleString": "baaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacbaaabaacacab"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(/\\*(.|[\\r\\n])*?\\*/)|(--(.*|[\\r\\n]))|(//(.*|[\\r\\n]))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 728
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "ATTENDEE(:|;)(.*?\\r?\\n)(\\s.*?\\r?\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ATTENDEE;\r\n"
      ],
      "pumps": [
        "\t\n\r\n"
      ],
      "suffix": "AT",
      "exampleString": "ATTENDEE;\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0aAT"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 159
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(\\r\\n|\\r|\\n)+\\s*\\+\\+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\r\n"
      ],
      "suffix": "\r\n+\t",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0a+\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<li([^>]*)>((.|\\n)*?)<\\/li>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<li>"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "</<></li",
      "exampleString": "<li>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a</<></li"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:X(['](\\\\.|[^']|\\\\')*?['])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "X'"
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "X\\'a'\\",
      "exampleString": "X'\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\aX\\'a'\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([^\\/\\s]*)(\\/)?([^\\/\\(\\)\\s]*)?)(\\s\\((([^\\)]*)*)\\))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/\t("
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "(/a)/",
      "exampleString": "/\\x09(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa(/a)/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(?:\\.|(\\\\\\')|[^\\''])*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "a."
      ],
      "suffix": ".\\''.",
      "exampleString": "'a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a..\\''."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "Linux ((\\d+|\\.)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Linux 0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "u",
      "exampleString": "Linux\\x200000000000000000000000000000000000000000000000000000000000000000000000000000000000000u"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^;]+|;;)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a;",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 70
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^typedef struct( \\S+)?\\s*\\{\\n(([^}\\n].*)?\\n)*\\}\\s*XSizeHints;\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "typedef struct{\na"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "\n\nX",
      "exampleString": "typedef\\x20struct{\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aX"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 197
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:([a-z])|([A-Z])|([0-9])|(.)){6,}|(.)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "00000"
      ],
      "pumps": [
        "Aa"
      ],
      "suffix": "a",
      "exampleString": "00000AaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 805
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "chromium\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "mium",
      "exampleString": "chromium\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000mium"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end",
    "exploitString": {
      "degree": 0,
      "separators": [
        "=begin\r"
      ],
      "pumps": [
        "\r\r"
      ],
      "suffix": "ia",
      "exampleString": "=begin\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0dia"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:[^\\s\"]+|\"[^\"]*\")+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\"\t\"\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\\x09\"\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "#(\\S+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "#aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\"(\\\\.|[^\"])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\"(?:[^\"\\\\]*(?:\\\\.)?)*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"a",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\"a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "((https?://)?([-\\w]+\\.[-\\w\\.]+)+\\w(:\\d+)?(/([-\\w/_\\.]*(\\?\\S+)?)?)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.aa/"
      ],
      "pumps": [
        "//"
      ],
      "suffix": "\t",
      "exampleString": "a.aa/////////////////////////////////////////////////////////////////////////////////////\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\xCF*[0-9]{2}\\xCF*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "00"
      ],
      "pumps": [
        "\u00cf00\u00cf"
      ],
      "suffix": "\u00cf0\u00cf",
      "exampleString": "00\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf0\\xcf"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{([A-Za-z0-9-_]+)(\\s*:\\s*([^{}][^{}]*))*\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{a:a"
      ],
      "pumps": [
        ":a"
      ],
      "suffix": "a:{",
      "exampleString": "{a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:aa:{"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "\"\"'\\",
      "exampleString": "\"\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\"\"'\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 136
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(https?)://[a-z0-9-]+(.[a-z0-9-]+)+(/?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://aa"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "ps/:",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaps/:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*\\n(?: {4}|\\t).*\\S.*\\n((?: {4}|\\t).*\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\ta\n    "
      ],
      "pumps": [
        "\n\t\n    "
      ],
      "suffix": " \n   ",
      "exampleString": "\\x0a\\x09a\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x0a\\x09\\x0a\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 162
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\\\\\.|[^.]+?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "..",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^```js((.*\\n)*?)```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```js"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "`\n",
      "exampleString": "```js\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a`\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^((?:\\w+|\\:\\:)+)=(\\w+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "=:",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--(?:(?:.|\\r|\\n)*?)-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "!--",
      "exampleString": "<!--\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a!--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "define\\(((?:.|\\n|\\r)+)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "define("
      ],
      "pumps": [
        "\r\r"
      ],
      "suffix": "ef",
      "exampleString": "define(\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0def"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(https?://)?(\\w*[.]\\w+)+([/?=&]+\\w+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a.aa"
      ],
      "suffix": "tps..",
      "exampleString": "a.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aatps.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "<script(\\s[^>]+)*>(.*?)</script>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script\t"
      ],
      "pumps": [
        "a\ta\t"
      ],
      "suffix": "scr<></scr",
      "exampleString": "<script\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09scr<></scr"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 130
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[\\[(?:.*?\\|)*?([^|]*?)\\]\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[["
      ],
      "pumps": [
        "|a"
      ],
      "suffix": "[",
      "exampleString": "[[|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a["
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(0|[1-9]\\d*)+(.\\d\\d?)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "110"
      ],
      "suffix": "1a",
      "exampleString": "01101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101101a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "https?:\\/\\/([-\\w\\.]+)+(:\\d+)?(\\/([^\\s]*(\\?\\S+)?)?)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "component\\s+(\\w+)\\s*(is)*\\s+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "component\ta\t\n                port(\n                a:\n          "
      ],
      "pumps": [
        "      inaa,a\t,a:\n          "
      ],
      "suffix": ";\n                \tend",
      "exampleString": "component\\x09a\\x09\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20port(\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20inaa,a\\x09,a:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x09end"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 1132
    },
    "indeg": {
      "num_nodes": 36,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 35,
      "exec_time": 1
    }
  },
  {
    "pattern": "^<([\\w\\:\\-]+)((?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a"
      ],
      "pumps": [
        "\ta='\ta='\ta='"
      ],
      "suffix": "\t",
      "exampleString": "<a\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 220
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:[^\"]|\\\\\")*\"|'(?:[^'])|(\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/)|(\\/\\/.*)|[{};]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "a*\n*"
      ],
      "suffix": "*",
      "exampleString": "/**a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a**"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 614
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "blackberry0/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "r",
      "exampleString": "blackberry0/0._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000r"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "<!--.*\\n(.*\\n)+?.*-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--\n\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "--",
      "exampleString": "<!--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a--"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*CREATE\\s+(?:UNIQUE\\s+)?INDEX\\s+(?:['\"`\\[]?\\w+['\"`\\]]?\\.)?['\"`\\[]?\\w+['\"`\\]]?\\s+(ON\\s+['\"`\\[]?\\w+['\"`\\]]?)\\s*(\\((\\s*(?:\\s*['\"`\\[]?\\w+['\"`\\]]?\\s*,\\s*)*['\"`\\[]?\\w+['\"`\\]]?\\s*)\\))\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "CREATE\tINDEX\t\"a\"\tON\t\"a\"(\"a\""
      ],
      "pumps": [
        "\t,\ta"
      ],
      "suffix": "IQ,\"a",
      "exampleString": "CREATE\\x09INDEX\\x09\"a\"\\x09ON\\x09\"a\"(\"a\"\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09aIQ,\"a"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 299
    },
    "indeg": {
      "num_nodes": 31,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 31,
      "exec_time": 1
    }
  },
  {
    "pattern": "([^A-Za-z_]|\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "$\n"
      ],
      "suffix": "A",
      "exampleString": "$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0a$\\x0aA"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!-- version -->(.|\\n)*<!-- versionstop -->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- version -->"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "sto",
      "exampleString": "<!--\\x20version\\x20-->\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0asto"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[\\w-]+(?:\\.[^ \\*]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a."
      ],
      "pumps": [
        "."
      ],
      "suffix": " ",
      "exampleString": "a...........................................\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s*\\/\\/.*\\s*|\\s*\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/\\s*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "a***"
      ],
      "suffix": "/",
      "exampleString": "/**a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 665
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^'(([^']*| \\\\')*)'$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " ",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<(([a-zA-Z])+((\\s+\\w+)=?(\"?\\w+\"?)?){0,})( (\\/)?)?\\s*>|<\\/([a-zA-Z])+\\s*>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\ta="
      ],
      "pumps": [
        "\taaa\""
      ],
      "suffix": "a",
      "exampleString": "<a\\x09a=\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"\\x09aaa\"a"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 160
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(\\/\\*((.|\\r?\\n)*?)\\*\\/)?\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "/*",
      "exampleString": "/*\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\[((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]:\\s*(.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        "\\[\\["
      ],
      "suffix": "\\[\\]",
      "exampleString": "[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\]"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 735
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\.?\\d+\\.\\d+(?:\\d+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".0.00"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": ".0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\s*;?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<li[^>]*>(.+)</li\\s*>)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<li>a</"
      ],
      "pumps": [
        "li><li>a</li><li</li><li>a</"
      ],
      "suffix": "</a",
      "exampleString": "<li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</li><li>a</li><li</li><li>a</</a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\*|(\\d+[,-]?)*\\d+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0,,",
      "exampleString": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000,,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^/(([a-zA-Z0-9\\.\\-_]+)/?)*?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "//",
      "exampleString": "/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa//"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\|(\\s*.+\\|)+\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "|"
      ],
      "pumps": [
        "a|a|\t"
      ],
      "suffix": "a",
      "exampleString": "|a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a|a|\\x09a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n(\\s*\\n*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+\\:.*\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        ":\na:\na"
      ],
      "suffix": "a",
      "exampleString": "a:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aaa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\\"]* )(\\\".*\\\"(?:, ?\\\".*\\\")*)([^\\\"]*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        " \"\", \""
      ],
      "pumps": [
        "\", \"\",\""
      ],
      "suffix": "a",
      "exampleString": "\\x20\"\",\\x20\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"\",\\x20\"\",\"a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 682
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+)=\"((?:\\\\\"|.)*?)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a=\""
      ],
      "pumps": [
        "\\\"\\\""
      ],
      "suffix": "$",
      "exampleString": "a=\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n\\r|\\r\\n|[\\r\\n])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:\"(\\\\\\\\|\\\\\"|[^\"])*\")",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\"\\\\"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\[.*\\]|\\{.*?\\}|\\S)+ ?",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a{}"
      ],
      "suffix": "[\t",
      "exampleString": "a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}a{}[\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 128
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "UIStrings = (.|\\s)*?\\};\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "UIStrings = "
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "UI",
      "exampleString": "UIStrings\\x20=\\x20\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09UI"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^\\s\"']+|\"[^\"]*\"|'[^']*')+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\"\t\"a\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\\x09\"a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(?:[0-9a-fA-F:]){1,4}(?:(?::(?:[0-9a-fA-F]){1,4}|:)){2,7})+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:::::::aa"
      ],
      "pumps": [
        "aa:::::::a:::::::aa"
      ],
      "suffix": "aaaaa:",
      "exampleString": "a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaa:::::::a:::::::aaaaaaa:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 2034
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(==.*?==|[^\\|])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "====="
      ],
      "suffix": "|",
      "exampleString": "==================================================================================================================================================================================================================|"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "Service Information \"create\"\\n(?:.*\\n)*?URL:\\s+(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Service Information \"create\"\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "UR",
      "exampleString": "Service\\x20Information\\x20\"create\"\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aUR"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 702
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "!(\\\\[\\\\!]|[^!])*![egimosx]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "!"
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": "!a\\",
      "exampleString": "!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\!a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[\\+\\-]*(\\d+(\\.\\d*)*|(\\d*\\.\\d+))+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0.+",
      "exampleString": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.+"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:\\\\?.)*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "a",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "/(\\\\.|\\\\\\n|.)*?/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/\\"
      ],
      "pumps": [
        "\n\\\n\\"
      ],
      "suffix": "\n\\",
      "exampleString": "/\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "( {2,})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "    "
      ],
      "suffix": "#",
      "exampleString": "\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "(sie)-(\\w+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "sie-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "sa-",
      "exampleString": "sie-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaasa-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-z0-9_:]*)\\s*(\\(([^\\)]+)*\\))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ")\t",
      "exampleString": "(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "f\\s+(((-[\\d]{1,}\\/-[\\d]{1,}\\/-[\\d]{1,}[\\s]?){3,})+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "f\t-0/-0/-0\t-0/"
      ],
      "pumps": [
        "-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/"
      ],
      "suffix": "\t\t-0/-0/-0-0/-0/-0-0/-0/-0-0/",
      "exampleString": "f\\x09-0/-0/-0\\x09-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/\\x09\\x09-0/-0/-0-0/-0/-0-0/-0/-0-0/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 181
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z]+=[^,\\]]+,*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "=aaa"
      ],
      "suffix": "$,$",
      "exampleString": "a=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa$,$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": ":container\\(\\s*\"*((?:[^()]+?|\\([^()]*\\))+?)\"*\\s*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":container(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "co",
      "exampleString": ":container(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaco"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "\u300c([^\u300c\u300d]*(?:\u300c.+\u300d)*[^\u300c\u300d]*)\u300d[\u306b\u306f\u306e](\u300c.+\u300d\u306e)*(.+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u300c"
      ],
      "pumps": [
        "\u300ca\u300d\u300ca\u300d"
      ],
      "suffix": "\u300ca\u300d\u300d\u306b",
      "exampleString": "\\x{300c}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300c}a\\x{300d}\\x{300d}\\x{306b}"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 744
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([[:alpha:]]{1}(([[:alnum:]]|[-])*[[:alnum:]]{1})*){1}([.][[:alpha:]]{1}(([[:alnum:]]|[-])*[[:alnum:]]{1})*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "hh",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaahh"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*.*?\\*\\/|'(?:\\\\.|[^'])*'|\"(?:\\\\.|[^\"])*\"|url\\([^)]*\\)|(\\.(?:public\\/)?[\\w-]*\\/{1,2}[\\w-]+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\a\\a"
      ],
      "suffix": "ur/'a",
      "exampleString": "\"\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\aur/'a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 212
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([A-Za-z0-9_]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"([^\"\\\\]+|\\\\{2}|\\\\.)*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\a",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?::(\\S+) )?([A-Z0-9]+)((?: (?:[^:\\s][^\\s]*))*)(?: :(.*))?\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        " a a"
      ],
      "suffix": "a",
      "exampleString": "0\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 796
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*!?\\s*(([0-9]+)(\\s*,\\s*)?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "!0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ",0!",
      "exampleString": "!0000000000000000000000000000000000000000000000000000000000000000000000000000000000000,0!"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "trident\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "trident/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "trident/0._00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(=(?:[a-zA-Z_][\\w\\.]*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "=a"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "=a=",
      "exampleString": "=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=a="
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([A-Z]+[a-z]+\\w+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Aa"
      ],
      "pumps": [
        "aAAa"
      ],
      "suffix": "#",
      "exampleString": "AaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAaaAAa#"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\t]\\",
      "exampleString": "[\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09]\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "browser/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "en",
      "exampleString": "browser/0._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000en"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\\(\\)\\[\\]\\*\\+\\?\\{\\}]|(\\\\[\\(\\)\\[\\]\\*\\+\\?\\{\\}]|[^\\s()])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "(\\*\\"
      ],
      "suffix": "\\((",
      "exampleString": "\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\(\\*\\\\(("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*\\.)+(.*\\.)+(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ".a"
      ],
      "suffix": ".a",
      "exampleString": ".a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 592
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[A-Z](?:_*[A-Z0-9]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0_",
      "exampleString": "A00000000000000000000000000000000000000000000000000000000000000000000000000000000000000_"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([a-zA-Z0-9_\\-\\+\\~\\^\\{\\}]+[\\.]?)+@{1}([a-zA-Z0-9_\\-\\+\\~\\^\\{\\}]+[\\.]?)+\\.[A-Za-z0-9]{2,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "@.",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@."
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "(.*[\\W].*){5,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$$$$"
      ],
      "pumps": [
        "a$a"
      ],
      "suffix": "a",
      "exampleString": "$$$$a$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa$aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 868
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^:\\s]+)*\\s*:\\s*(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 651
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w+[\\-']?\\w+\\s?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "''",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa''"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^ {0,3}\\|.+\\|[ \\t]*\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n( {0,3}\\|.+\\|[ \\t]*\\n)*(?:\\n|\u00a80)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "|a|\n|:--:|\n|a|"
      ],
      "pumps": [
        "\n|a|\n|a|"
      ],
      "suffix": " :-",
      "exampleString": "|a|\\x0a|:--:|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x20:-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 283
    },
    "indeg": {
      "num_nodes": 16,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\s*br(\\s+.*?)*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<br\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "<a",
      "exampleString": "<br\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09<a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\d|[^\\w.'-])+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "00"
      ],
      "suffix": "'",
      "exampleString": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000'"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\/\\*(.|\\s)*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\t",
      "exampleString": "/*\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:(\\w+):(\\w+))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        ":aaa"
      ],
      "suffix": "::",
      "exampleString": "a:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([A-Za-z0-9_]+|\\s)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:a*?|b*?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://"
      ],
      "pumps": [
        "$%00"
      ],
      "suffix": "#",
      "exampleString": "https://$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00$%00#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-"
      ],
      "pumps": [
        "0--"
      ],
      "suffix": "e-0.+",
      "exampleString": "a-0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--e-0.+"
    },
    "pivot": {
      "num_nodes": 8,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 1
    }
  },
  {
    "pattern": "((https?://)(www\\.|[-\\w\\.]+[-\\w])+(:\\d+)?(/([\\w/_\\.#-]*(\\?\\S+)?[^\\.\\s])?)?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://w"
      ],
      "pumps": [
        "ww.aawww.aaw"
      ],
      "suffix": "w/.",
      "exampleString": "https://www.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aawww.aaww/."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 158
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**a*"
      ],
      "pumps": [
        "**"
      ],
      "suffix": "*a",
      "exampleString": "/**a**************************************************************************************a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "return\\s*\\(?\"((?:\\\\\"|[^\"]+)+)\"\\)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "return(\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ")\\",
      "exampleString": "return(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\$foo(.|\\n)*\\$baz",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$foo"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a\n",
      "exampleString": "$foo\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(?:\\\\\\\\|\\\\\\]|[^\\]{])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\\\"
      ],
      "suffix": "a]",
      "exampleString": "a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a]"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "#include<(.+)>(\\((.*)\\))*(\\[(.*)\\])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#include<a>("
      ],
      "pumps": [
        "a)("
      ],
      "suffix": "#i",
      "exampleString": "#include<a>(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(#i"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 152
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "<(i|em)>([^<]*)+?<\\/(i|em)>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<i>"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ea",
      "exampleString": "<i>aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!-- BEGIN ([\\w\\-\\.\u3041-\u3093\u30a1-\u30f6\u4e9c-\u7199]+?):loop -->(([\\n\\r\\t]|.)*?)<!-- END ([\\w\\-\\.\u3041-\u3093\u30a1-\u30f6\u4e9c-\u7199]+?):loop -->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- BEGIN a:loop -->"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "p ",
      "exampleString": "<!--\\x20BEGIN\\x20a:loop\\x20-->\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09p\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 215
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 3
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 3
    }
  },
  {
    "pattern": "<script.*src=(s*?)*(.+).*?(s*?)></script>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<scriptsrc="
      ],
      "pumps": [
        "ss"
      ],
      "suffix": "</sc",
      "exampleString": "<scriptsrc=ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss</sc"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "/(?:(?:\\\\.)|(?:\\[(?:\\\\.|[^\\[\\]])+\\])|[^/\\\\])+/[a-z]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "a[\\a]"
      ],
      "suffix": "/]/[",
      "exampleString": "/a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]a[\\a]/]/["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 162
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*\\n)*(\\ *\\/\\*\\ *\\n)(\\ *\\*\\=\\ *require\\ +.*\\n)+(\\ *\\*\\/\\ *\\n)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "r",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ar"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 217
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "<select(\\r|\\t|\\n|.)*?<\\/select>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<select"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "<s",
      "exampleString": "<select\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09<s"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 132
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\S+)\\s*=\\s*[{\"(]((.|\\n)*)[}\")]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a=\""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "=a",
      "exampleString": "a=\"\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a=a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 120
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*SOURCES\\s*=\\s*((?:.*(?:\\\\\\r?\\n))*.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "SOURCES="
      ],
      "pumps": [
        "\\\r\n\\\n"
      ],
      "suffix": "a",
      "exampleString": "SOURCES=\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0a\\\\x0d\\x0a\\\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 646
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<pre>(?:\\s|.)*?<\\/pre>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<pre>"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "</p",
      "exampleString": "<pre>\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09</p"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.+=.+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "=aaa"
      ],
      "suffix": "a",
      "exampleString": "a=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaaa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 654
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\S+)((\\s*[<>=\\s]+)(\\S+))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\t"
      ],
      "pumps": [
        "a\t\t"
      ],
      "suffix": "<a\t",
      "exampleString": "a\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09<a\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\s*(&nbsp;)*\\s*)+|(\\s*(&nbsp;)*\\s*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "p;&nbb",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09p;&nbb"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[\\"
      ],
      "pumps": [
        "aaaaa\\"
      ],
      "suffix": "a$",
      "exampleString": "[\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\aaaaa\\a$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 208
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s+|\\d+\\.+\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\t.",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09."
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:HTTP\\/1.1 100 Continue.*?\\r\\n\\r\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "HTTP/"
      ],
      "pumps": [
        "1a1 100 Continue\r\n\r\nHTTP/1a1 100 Continue\r\n\r\nHTTP/"
      ],
      "suffix": "TP",
      "exampleString": "HTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/1a1\\x20100\\x20Continue\\x0d\\x0a\\x0d\\x0aHTTP/TP"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 142
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*([a-z0-9]+)\\s*=\\s*([a-z0-9]+(\\s*,\\s*[a-z0-9]+)*)+\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a=a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ",,",
      "exampleString": "a=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,,"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 1
    }
  },
  {
    "pattern": "<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!DOCTYPE["
      ],
      "pumps": [
        "a]["
      ],
      "suffix": "C",
      "exampleString": "<!DOCTYPE[a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][C"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": ":([^:]+)+:(.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ":",
      "exampleString": ":aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 630
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^( ?[\\-\\*_] ?){3,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        " *  *  *"
      ],
      "pumps": [
        "  * *"
      ],
      "suffix": "   ",
      "exampleString": "\\x20*\\x20\\x20*\\x20\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20*\\x20*\\x20\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]).)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aaaaa"
      ],
      "suffix": "$-",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:.+/)*(\\d{2,4}-\\d{1,2}-\\d{1,2})-([^/]*)(\\.[^.]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a/"
      ],
      "suffix": "0/0a./00-0-0-",
      "exampleString": "a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/0/0a./00-0-0-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 202
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\[0\\]drawtext=font=a((.|\\n)*)b:text=test\\[s0\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[0]drawtext=font=a"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "]dr\n",
      "exampleString": "[0]drawtext=font=a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a]dr\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 155
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<div><span class\\=\\\"gmail_quote\\\">(?:\\n|.)*<\\/div><br>$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<div><span class=\"gmail_quote\">"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "n ",
      "exampleString": "<div><span\\x20class=\"gmail_quote\">\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0an\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 169
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\r\\n|\\r|\\n){3,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r\r"
      ],
      "pumps": [
        "\n\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "GlobalSection\\(NestedProjects\\) = preSolution((?:.|\\n)*?)EndGlobalSection",
    "exploitString": {
      "degree": 0,
      "separators": [
        "GlobalSection(NestedProjects) = preSolution"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "uti",
      "exampleString": "GlobalSection(NestedProjects)\\x20=\\x20preSolution\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0auti"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 200
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\S+::){1,}(\\S+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "::a"
      ],
      "suffix": "\t",
      "exampleString": "a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+\\n{2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        ">a"
      ],
      "pumps": [
        "\n>a>a"
      ],
      "suffix": ">\n\na",
      "exampleString": ">a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a\\x0a>a>a>\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[\\t\\n\\r ]+|[\\t\\n\\r ]*((\\/\\/.*|\\/\\*(.|\\n|\\r)*?\\*\\/)[\\t\\n\\r ]*))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "a",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 663
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "spree_(\\w+_?)+_(\\d+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "spree_a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "p",
      "exampleString": "spree_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaap"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": " (.+)*::(.+) $",
    "exploitString": {
      "degree": 0,
      "separators": [
        " a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " a:",
      "exampleString": "\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20a:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[/][*](\\s|.)+?[*][/]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "/*",
      "exampleString": "/*a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z][a-z\\d]*([A-Z]+[a-z\\d]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aA"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "#",
      "exampleString": "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(iphone)(?:.*os\\s*([\\w]+)*\\slike\\smac|;\\sopera)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "iphoneosa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "i",
      "exampleString": "iphoneosaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaai"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": ".*?<H3>(<a.*a>)*[\\d\\.\\s]*(.*?)</H3>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<H3><a"
      ],
      "pumps": [
        "a><aa><a"
      ],
      "suffix": "<",
      "exampleString": "<H3><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><a<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 196
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[\\^((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[^"
      ],
      "pumps": [
        "\\]\\["
      ],
      "suffix": "[]^",
      "exampleString": "[^\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[[]^"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*?\\n){10,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\n\n\n\n\n\n\n\n\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 500
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{@link\\s+((?:.|",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{@link\t\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "{",
      "exampleString": "{@link\\x09\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a{"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r\\n|\\r|\\n){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "([achlmrqstvz])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?\\s*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-"
      ],
      "pumps": [
        "0--"
      ],
      "suffix": "-0.+",
      "exampleString": "a-0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0---0.+"
    },
    "pivot": {
      "num_nodes": 8,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:<script([^>]*)?>)((\\n|\\r|.)*?)(?:<\\/script>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script>"
      ],
      "pumps": [
        "a\r"
      ],
      "suffix": "scr<></script",
      "exampleString": "<script>a\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0dscr<></script"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z_]+(\\s*[a-zA-Z0-9_]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((gzip|deflate)\\s*,?\\s*)+|[X\\~\\-]{4,13}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "de"
      ],
      "pumps": [
        "flate\tde"
      ],
      "suffix": "e\tde",
      "exampleString": "deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09deflate\\x09dee\\x09de"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 146
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\s\\)\\(-]|-+[^\\s\\)\\(>])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-"
      ],
      "pumps": [
        "-a-"
      ],
      "suffix": ">->",
      "exampleString": "--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a->->"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:(.*[^\\\\])\\/(.*[^\\\\])*\\/){1,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a/"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\a",
      "exampleString": "a/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r?\\n\\s*\\r?\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\n\r\n\r\n"
      ],
      "suffix": "\r",
      "exampleString": "\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(<\\?.*?\\?>\\s*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<??>"
      ],
      "pumps": [
        "<??><??>"
      ],
      "suffix": "a",
      "exampleString": "<??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??><??>a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*,\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ","
      ],
      "pumps": [
        "\t,"
      ],
      "suffix": "#",
      "exampleString": ",\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\uff0a\\(KC\\) )?((?:\\((?:[\\w\\-\\,\\:]*)*\\)\\s*)*)(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "("
      ],
      "pumps": [
        ")(("
      ],
      "suffix": "a",
      "exampleString": "()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()(()((a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 662
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "/\\*(.|\\s)*?\\*/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\t",
      "exampleString": "/*\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^-?(?:[_a-z]|\\\\[\\da-f]+ ?)(?:[\\w-]|\\\\\\\\[\\da-f]+ ?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-a\\\\a"
      ],
      "pumps": [
        " \\\\aa\\\\a"
      ],
      "suffix": "\\_",
      "exampleString": "-a\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\x20\\\\aa\\\\a\\_"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n          \n              \n # line indented equal to 2 or more"
      ],
      "pumps": [
        " than 2\n          \n              \n      # empty line\n          \n              \n # line indented equal to 2 or more"
      ],
      "suffix": "i",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20more\\x20than\\x202\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20#\\x20empty\\x20line\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20#\\x20line\\x20indented\\x20equal\\x20to\\x202\\x20or\\x20morei"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 382
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/(\\\\\\n)?\\*(.|\\n)*?\\*(\\\\\\n)?\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "a",
      "exampleString": "/*a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<[a-zA-Z0-9]+)((\\s?[a-zA-Z0-9]+=[\\\"\\'][^\\\"\\']*[\\\"\\']\\s?)*)>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\t"
      ],
      "pumps": [
        "a=\"\"\t"
      ],
      "suffix": "<a\t",
      "exampleString": "<a\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09<a\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*[^*]*\\*+([^\\/][^*]*\\*+)*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**a*"
      ],
      "pumps": [
        "**"
      ],
      "suffix": "*a",
      "exampleString": "/**a**************************************************************************************a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "( *\\*\\n)( *\\*.*\\n)+( *\\* @ignore\\n)( *\\*.*\\n)*( )",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*\n*\n"
      ],
      "pumps": [
        "*\n*\n"
      ],
      "suffix": " *",
      "exampleString": "*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a\\x20*"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 167
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s([^\\/]+\\.)+.+\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\ta"
      ],
      "pumps": [
        ".a"
      ],
      "suffix": "/",
      "exampleString": "\\x09a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 724
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(((https|http|ftp|file):\\/\\/)|www\\.|\\.\\/|(\\.\\.\\/)+|(\\/{1,2})|(\\d{1,3}\\.){3}\\d{1,3})(((\\w+|-)(\\.?)(\\/?))+)(\\:\\d{1,5}){0,1}(((\\w+|-)(\\.?)(\\/?)(#?))+)((\\?)(\\w+=(\\w?)+(&?))+)?(\\w+#\\w+)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "p://",
      "exampleString": "/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaap://"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 200
    },
    "indeg": {
      "num_nodes": 29,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 25,
      "exec_time": 1
    }
  },
  {
    "pattern": "<meta name=\"generator\"([^>]*)*>\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<meta name=\"generator\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "era",
      "exampleString": "<meta\\x20name=\"generator\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaera"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "--TEST--\\s*(.*?)\\s*(?:--CONDITION--\\s*(.*))?\\s*((?:--TEMPLATE(?:\\(.*?\\))?--(?:.*?))+)\\s*(?:--DATA--\\s*(.*))?\\s*--EXCEPTION--\\s*(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "--TEST----"
      ],
      "pumps": [
        "TEMPLATE()--)----"
      ],
      "suffix": "TEMPLATE()----DATA---DAT",
      "exampleString
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 1982
    },
    "indeg": {
      "num_nodes": 21,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 21,
      "exec_time": 0
    }
  },
  {
    "pattern": "[A-Za-z](?:[A-Za-z0-9._-]|-)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "--"
      ],
      "suffix": "#",
      "exampleString": "a------------------------------------------------------------------------------------#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(\\n*\\s*(#[^\\n]*|(from [a-zA-Z0-9_\\.]+\\s+)?import\\s+.*))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"from "
      ],
      "pumps": [
        "a\timport\t#import\tfrom "
      ],
      "suffix": "a\ti",
      "exampleString": "\"from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09import\\x09#import\\x09from\\x20a\\x09i"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 909
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\[(([\\-]*[0-9\\. ]+[,]{0,1})+[;]{0,1})*\\]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[ ,"
      ],
      "pumps": [
        "- ,,"
      ],
      "suffix": ",; [",
      "exampleString": "[\\x20,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,-\\x20,,,;\\x20["
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([a-z_\\-0-9\\.]|[A-Z_\\-0-9\\.])+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a-"
      ],
      "suffix": "#",
      "exampleString": "a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(\\\\.|.)*?'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\a",
      "exampleString": "'\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": " *\\'((\\\\.|[^\\'])*)\\' *",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\a\\a"
      ],
      "suffix": " 'a''",
      "exampleString": "'\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\x20'a''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(%[-_0^#:]*(\\d+)*[EO]?d|%[-_0^#:]*(\\d+)*[EO]?e)(.*)(%B)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "%#",
      "exampleString": "%0000000000000000000000000000000000000000000000000000000000000000000000000000000000000%#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[ ]{0,3}\\=\\-\\-+\\s*(\\{([^{}]*?|\".*?\"|'.*?')*\\})?\\s*\\-*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "=--{"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "=-",
      "exampleString": "=--{aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\(gethash (\"(?:\\\\\\\\|\\\\\"|[^\\\\\"])*\\\"|'(?:\\\\.|.)*?) (.*)\\)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(gethash '"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "(g\\ )\\",
      "exampleString": "(gethash\\x20'\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a(g\\\\x20)\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 149
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:.+\\r?\\n)*)(\\r?\\n(?:.*\\s+)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r\n\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\r\ta",
      "exampleString": "\\x0d\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x0d\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^%\\{(.|\\n)*?%\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%{"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\n",
      "exampleString": "%{\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([^=]+=.+),?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "=aaa"
      ],
      "suffix": "=",
      "exampleString": "a=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa="
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 685
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\\"(.+)*\\\"$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": " *([^ ]+) +\\'((\\\\.|[^\\'])*)\\' *",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a '"
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": " \\' \\'a''",
      "exampleString": "a\\x20'\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\x20\\'\\x20\\'a''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[ \\t]*[\\r\\n]+[ \\t]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(?:.|\\n)*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\n",
      "exampleString": "<\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-zA-Z]:[\\/\\\\\\\\]+(?:[^:*?\\\"<>|;]+[\\/\\\\\\\\]*)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a::",
      "exampleString": "a:/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^macro\\s+([a-zA-Z0-9_]+)\\s*\\(\\s*((?:[a-zA-Z0-9_]+(?:\\s*=\\s*([\\s\\S]+))?(?:,\\s*)?)*)\\s*\\)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "macro\ta(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "o\t",
      "exampleString": "macro\\x09a(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaao\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 120
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\\\.|[^\\.])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "..",
      "exampleString": "a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^# yamllint enable( rule:\\S+)*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "# yamllint enable rul"
      ],
      "pumps": [
        "e:a rule:a rul"
      ],
      "suffix": "n\t:",
      "exampleString": "#\\x20yamllint\\x20enable\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20ruln\\x09:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 137
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\n1 CHAN(\\n[2-9].*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n1 CHAN\n"
      ],
      "pumps": [
        "2\n2\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a1\\x20CHAN\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 839
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([0-9]+[.,-]?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ",,",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000,,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": ">Children<(.|\\n)*?<td>\\\\s*([0-9]*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ">Children<"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "hi",
      "exampleString": ">Children<\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ahi"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "jig browser(?: web)?(?:\\D+([\\d.]+))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "jig browsera"
      ],
      "pumps": [
        ".a"
      ],
      "suffix": "er ",
      "exampleString": "jig\\x20browsera.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.aer\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 130
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": ".* start=(?:\"((?:\\\\.|[^\\\"])*)\"|([^;\\s]*))",
    "exploitString": {
      "degree": 0,
      "separators": [
        " start=\""
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "ar\" \t st",
      "exampleString": "\\x20start=\"\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\aar\"\\x20\\x09\\x20st"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 177
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r\\n?|\\n\\r?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\r\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z]+(.[a-zA-Z]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "$$",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z\\d\\._\\+-]+@([a-z\\d-]+\\.?[a-z\\d-]+)+\\.[a-z]{2,4}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a-.-.a",
      "exampleString": "a@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-.-.a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\|?(\\s*:?-[\\-\\s]*:?\\s*\\|?)*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "|:-:"
      ],
      "pumps": [
        "\t\t:-"
      ],
      "suffix": "-||",
      "exampleString": "|:-:\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:-\\x09\\x09:--||"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 155
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "s\\((\\\\\\\\|\\\\\\)|[^\\)])*\\)\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "s("
      ],
      "pumps": [
        "a\\\\"
      ],
      "suffix": "s)s",
      "exampleString": "s(a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\s)s"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4})*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a."
      ],
      "pumps": [
        "aaaaa@a."
      ],
      "suffix": "a@",
      "exampleString": "a@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.aaaaa@a.a@"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "subroutine (?:\\s|.)*?end subroutine.*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "subroutine "
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "end s",
      "exampleString": "subroutine\\x20\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09end\\x20s"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 742
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*(?:\\*/)?\\s*(?:/\\*.*?\\*/)*\\s*(\\*\\s*=\\s*require((?:_directory|_tree)?)\\s+(.+))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a*//*"
      ],
      "suffix": "a*/*\t",
      "exampleString": "/*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*/*\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 789
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 1
    }
  },
  {
    "pattern": "(<!--.+-->)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-"
      ],
      "pumps": [
        "-a--><!--a--><!-"
      ],
      "suffix": "<",
      "exampleString": "<!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!-<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([/]?[\\w-+.]+|[/]\\*\\*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a//",
      "exampleString": "/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa//"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[tcomb\\] Invalid argument name function (.|\\n)* supplied to declare\\(\\[name\\]\\) \\(expected a string\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[tcomb] Invalid argument name function "
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "clar",
      "exampleString": "[tcomb]\\x20Invalid\\x20argument\\x20name\\x20function\\x20\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aclar"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 269
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:\\\\?[\\s\\S])*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "a",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n        <meta\n        "
      ],
      "pumps": [
        "\ta=\"\"\ta=\"\""
      ],
      "suffix": "eta",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<meta\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"eta"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 286
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z0-9_\\.\\-])+\\@(([a-z0-9\\-])+\\.)+([a-z0-9]{2,4})+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a.aaa"
      ],
      "pumps": [
        "aaaaaaa"
      ],
      "suffix": "a.",
      "exampleString": "a@a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*(?:\\[(?:\\d*|[a-zA-Z0-9_-]+)\\])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a["
      ],
      "pumps": [
        "0][0]["
      ],
      "suffix": "0[[",
      "exampleString": "a[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0[["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(.*[-_:+ ])*lat",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        " a"
      ],
      "suffix": "ata ",
      "exampleString": "\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20aata\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(\\w+)(\\s[^>]*)+>(.*)((<[^>]+>)?[^>]*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "a",
      "exampleString": "<a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 637
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(:|\\s)\\+(\\d+)+\\.(\\d+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t+0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "\\x09+00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:<p><superfences>.*?</superfences></p>\\s*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<p><superfences></superf"
      ],
      "pumps": [
        "ences></p><p><superfences></superfences></p><p><superfences></superf"
      ],
      "suffix": "p><",
      "exampleString": "<p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfences></p><p><superfences></superfp><"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 160
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:[A-Za-z_-]+,?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ",,",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "# yamllint disable-line(( rule:\\S+)*)\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "# yamllint disable-line rule:"
      ],
      "pumps": [
        "a rule:"
      ],
      "suffix": "n\t:",
      "exampleString": "#\\x20yamllint\\x20disable-line\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:n\\x09:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 168
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\s*(class)\\s+((?:(?:::)?[A-Z]\\w*)+)(?:\\s+&lt;\\s+((?:(?:::)?[A-Z]\\w*)+))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "class\tA"
      ],
      "pumps": [
        "aA"
      ],
      "suffix": "\tclass\t",
      "exampleString": "class\\x09AaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaA\\x09class\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 141
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\$(?:\\\\?[\\w\\W])*?\\$|\\\\\\((?:\\\\?[\\w\\W])*?\\\\\\)|\\\\\\[(?:\\\\?[\\w\\W])*?\\\\\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\\\",
      "exampleString": "$\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": ">([0-9.]+?)% <\\/span>(.|\\n)+?Statements",
    "exploitString": {
      "degree": 0,
      "separators": [
        ">.% </span>\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "sSta",
      "exampleString": ">.%\\x20</span>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0asSta"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 174
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\/\\/.*)*\\s*lodash\\.prototype.+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//"
      ],
      "pumps": [
        "//"
      ],
      "suffix": "s",
      "exampleString": "//////////////////////////////////////////////////////////////////////////////////////s"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 180
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "f\\s+((([\\d]{1,}\\/\\/[\\d]{1,}[\\s]?){3,})+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "f\t0//0\t0//0\t0//0"
      ],
      "pumps": [
        "0//000//00//00//0"
      ],
      "suffix": "\t\t0//00//00",
      "exampleString": "f\\x090//0\\x090//0\\x090//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//00//000//00//00//0\\x09\\x090//00//00"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 205
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": " (?:[\\w]*) *= *\"(?:(?:(?:(?:(?:\\\\W)*\\\\W)*[^\"]*)\\\\W)*[^\"]*\")",
    "exploitString": {
      "degree": 0,
      "separators": [
        " =\""
      ],
      "pumps": [
        "\\W\\W\\W"
      ],
      "suffix": " a\\\"\"",
      "exampleString": "\\x20=\"\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\W\\x20a\\\"\""
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 149
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(index(\\..+)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "index"
      ],
      "pumps": [
        ".a.a"
      ],
      "suffix": "a",
      "exampleString": "index.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 734
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s(\\/)+(.*?)*php\\s",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t/"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a",
      "exampleString": "\\x09/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*(?:escape_char|comment_char)\\s*.\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "e"
      ],
      "pumps": [
        "scape_char\t\n\ne"
      ],
      "suffix": "h",
      "exampleString": "escape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aescape_char\\x09\\x0a\\x0aeh"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 223
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(r?\\\"(?:\\\\\\\"|.)*?\\\")|((\\$\\||\\$ |\\$:|[^ :|\\n])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "r\""
      ],
      "pumps": [
        "\\\""
      ],
      "suffix": "r\n\\",
      "exampleString": "r\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"r\\x0a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{\\{verbatim\\}\\}((.|\\n)*?)\\{\\{\\/verbatim\\}\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{{verbatim}}"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "{/ve",
      "exampleString": "{{verbatim}}\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a{/ve"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*\\n)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<a(\\s+[\\w:-]+=[\"'].*?[\"'])*>(.*?)</a>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\ta="
      ],
      "pumps": [
        "\"\"\ta=\"\"\ta="
      ],
      "suffix": "<",
      "exampleString": "<a\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=<"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^//\\s*(Copyright|This file is part of).*?\\n(?://.*?\\n)*\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//Copyright\n//"
      ],
      "pumps": [
        "a\n//"
      ],
      "suffix": "h",
      "exampleString": "//Copyright\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//a\\x0a//h"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 199
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "<html>(.|\\r|\\n)*<title>Title &quot; &#39; &amp; &lt; &gt; \\$ \\$\\$ \\$&#39; \\$` \\$&amp; \\$3<\\/title>(.|\\r|\\n)*<\\/html>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<html>"
      ],
      "pumps": [
        "\r"
      ],
      "suffix": ">Ti",
      "exampleString": "<html>\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d>Ti"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 464
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((.|[\\n\\r])+?)\\*\\*Signature",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "ig",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aig"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:.*:\\d{1,6}){1,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ":0000a"
      ],
      "suffix": "0:",
      "exampleString": ":0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a:0000a0:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n([ ]*)+(\\*|\\d+\\.) ",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "  "
      ],
      "suffix": "  *.",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20*."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*?)\\|(\\S+)\\{((?:\\\\.|[^}])+)\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "|a{a"
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "}{}a\t|",
      "exampleString": "|a{a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a}{}a\\x09|"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 130
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\d+,?)+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ",,",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000,,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.com.com)|(:\\/\\/.*){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "://:"
      ],
      "pumps": [
        "//://:"
      ],
      "suffix": "a",
      "exampleString": "://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://://:a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 796
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aaa"
      ],
      "suffix": "-",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[.#]?|:*)(?:[\\w-]|\\\\(?:[a-fA-F0-9]{1,6} ?|[^a-fA-F0-9]))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#\\"
      ],
      "pumps": [
        "$\\aa\\"
      ],
      "suffix": "::",
      "exampleString": "#\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\$\\aa\\::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 164
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "<a\\s[^>]+>(?:.|\\s)*?</a>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\ta>"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "</<",
      "exampleString": "<a\\x09a>\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09</<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[(\\d+;)?(\\d+)*m",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0;;",
      "exampleString": "[00000000000000000000000000000000000000000000000000000000000000000000000000000000000000;;"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[^-].+[\\r\\n]+)+|-.+-|[\\r\\n]| ",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "\naa"
      ],
      "suffix": " \na",
      "exampleString": "aa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x20\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([a-z]|[a-z][a-z0-9-]*[a-z0-9]).)*([a-z]|[a-z][a-z0-9-]*[a-z0-9])(:[0-9]*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "0::",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*CSOURCES\\s*=\\s*((?:.*(?:\\\\\\r?\\n))*.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "CSOURCES="
      ],
      "pumps": [
        "\\\na"
      ],
      "suffix": "\\",
      "exampleString": "CSOURCES=\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 740
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "[a-z]*://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "://%"
      ],
      "pumps": [
        "aaA%"
      ],
      "suffix": "#",
      "exampleString": "://%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:(?:\\r\\n)?[ \\t]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\r\n\n",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x0d\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d{1,4}(\\.)?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "00"
      ],
      "pumps": [
        "000000"
      ],
      "suffix": "..",
      "exampleString": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\+([A-Za-z_-]+\\w*)(\\((.+(,\\s)?)*\\))?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+a(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "+",
      "exampleString": "+a(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa+"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(a+|b)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "style=\"([^\"]+)*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "style=\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "=\"\"\"",
      "exampleString": "style=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-z0-9]+[A-Z]+[a-z0-9]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aA"
      ],
      "pumps": [
        "aaA"
      ],
      "suffix": "#",
      "exampleString": "aAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaAaaA#"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "var FooView = Backbone.View.extend\\(\\{(.|\\n)*app\\/scripts\\/templates\\/foo.ejs",
    "exploitString": {
      "degree": 0,
      "separators": [
        "var FooView = BackboneaViewaextend({"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "ewa",
      "exampleString": "var\\x20FooView\\x20=\\x20BackboneaViewaextend({\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aewa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 260
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([\\w]+)(\\(([\\d]+)*(,([\\d]+))*\\))*(.+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a(0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a",
      "exampleString": "a(0000000000000000000000000000000000000000000000000000000000000000000000000000000000000a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 682
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*::)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":"
      ],
      "pumps": [
        ":::::"
      ],
      "suffix": "a:",
      "exampleString": ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::a:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(gobrowser)\\/?([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "gobrowser/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ob/",
      "exampleString": "gobrowser/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaob/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "selagi( *|\\n*)*?\\(",
    "exploitString": {
      "degree": 0,
      "separators": [
        "selagi"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "el",
      "exampleString": "selagi\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ael"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\n\\s*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--((?:.|\\r?\\n)*?)-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\r\n\r\n"
      ],
      "suffix": "!--",
      "exampleString": "<!--\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a!--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\x00\\x21\\xF9\\x04.{4}\\x00\\x2C.*){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u0000!\u00f9\u0004aaaa\u0000,\u0000!\u00f9\u0004aaaa\u0000"
      ],
      "pumps": [
        ",\u0000!\u00f9\u0004aaaa\u0000,\u0000!\u00f9\u0004aaaa\u0000"
      ],
      "suffix": "a",
      "exampleString": "\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00,\\x00!\\xf9\\x04aaaa\\x00a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 800
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s|\\n)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*?)(\\[(.*?)\\])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "[][]"
      ],
      "suffix": "[",
      "exampleString": "[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\d+)(\\s*\\|(.*))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "||\t"
      ],
      "suffix": "a",
      "exampleString": "0||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09||\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 643
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z0-9A-Z]+[-|_|\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\.)+[a-zA-Z]{2,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "_",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\w+(?:::)?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a:::",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\/\\*[^*]*\\*+([^\\/][^*]*\\*+)*\\/)\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "a***"
      ],
      "suffix": "*/*//",
      "exampleString": "/**a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a****/*//"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 130
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(\\\\\\\\|\\\\\"|[^\"])*\"[cwd]?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\\"
      ],
      "pumps": [
        "\\\\\\\\\\"
      ],
      "suffix": "a\\\"\"\"",
      "exampleString": "\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\a\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": ".*?<H5>(<a.*a>)*[\\d\\.\\s]*(.*?)</H5>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<H5><a"
      ],
      "pumps": [
        "a><aa><a"
      ],
      "suffix": "<",
      "exampleString": "<H5><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><a<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 156
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "![@es"
      ],
      "pumps": [
        "capes@escapes@es"
      ],
      "suffix": "p",
      "exampleString": "![@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@esp"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:(?:\\d+-\\d+|\\d+),?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "-",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(class=\"Mso[^\"]*\")|(<!--(.|\\s){1,}?-->)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--\t"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "=\"M-a",
      "exampleString": "<!--\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09=\"M-a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:[^\"]*?#[^\"]*?)*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "#a"
      ],
      "suffix": "\"a\"",
      "exampleString": "\"#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a\"a\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "pimcore_disable_thumbnail=\"([^\"]+)*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "pimcore_disable_thumbnail=\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "=",
      "exampleString": "pimcore_disable_thumbnail=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa="
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 132
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^ |]+( +\\| +[^ |]*)+)|( +)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a "
      ],
      "pumps": [
        "|   "
      ],
      "suffix": " ||",
      "exampleString": "a\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20|\\x20\\x20\\x20\\x20||"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\u00e6|\u00f8|\u0100)(((.*)*)*x)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u00f8"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a",
      "exampleString": "\\xf8aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([\\$@%](\\w+|::)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ":$",
      "exampleString": "$aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": ".*\\.(Phone|Windows|Windows10)_((?:\\d*\\.)*\\d*)*((?:_(AnyCPU|x86|x64|ARM)){1,4})(?:(_Debug))?.(appx|appxbundle)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".Phone_"
      ],
      "pumps": [
        ".."
      ],
      "suffix": "ndow",
      "exampleString": ".Phone_....................................................................................ndow"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 212
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(<a.*\\/a>)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a/a"
      ],
      "pumps": [
        "><a/a><a/a"
      ],
      "suffix": "a",
      "exampleString": "<a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/a><a/aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "trailer[\\s]*<<(.*)>>[\\s]*[\\r\\n]+(?:[%].*[\\r\\n]+)*startxref[\\s]*[\\r\\n]+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "trailer<<>>\n%\n"
      ],
      "pumps": [
        "%\n%\n"
      ],
      "suffix": "r",
      "exampleString": "trailer<<>>\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0ar"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 186
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "[A-Z]'([^\\\\']+|\\\\.)*?'|'([^\\\\']+|\\\\.)*?'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "A'''",
      "exampleString": "A'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaA'''"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:[\\w|\\\\]+(?:\\[\\])*\\|?)+)(?:\\s+(\\$\\S+))?(?:\\s+(.*))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 811
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\/\\*((?:.|\\n|\\r)*?)\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\n",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "f\\s+(([\\d]{1,}[\\s]?){3,})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "f\t0\t0\t0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\tf",
      "exampleString": "f\\x090\\x090\\x090000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09f"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^%\\{(.|(?:\\r?\\n))*?%\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%{"
      ],
      "pumps": [
        "\r\n\r\n"
      ],
      "suffix": "%",
      "exampleString": "%{\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a%"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([0-9]+)*\\*[0-9]+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0**",
      "exampleString": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000**"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^\\x00-\\x08\\x0A-\\x1F\\x7F]|\\r\\n|\\n\\r|\\n)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\r\n\r\n\n"
      ],
      "suffix": "\ra\ra",
      "exampleString": "\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a\\x0da\\x0da"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:a*|b*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\/?(meta|link|style|o:|v:|x:)[^>]*>((?:.|\\n)*?<\\/(meta|link|style|o:|v:|x:)[^>]*>)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</v:>"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "o",
      "exampleString": "</v:>a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ao"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 277
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\/(\\/.*|\\*([^*]|\\*[^/])*\\*\\/)[\\t\\n\\r ]*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//"
      ],
      "pumps": [
        "\t////"
      ],
      "suffix": "a",
      "exampleString": "//\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 820
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[\\d\\w\\._\\-]+@([\\d\\w\\._\\-]+\\.)+[\\w]+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a"
      ],
      "pumps": [
        ".a.a"
      ],
      "suffix": "@@",
      "exampleString": "a@a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a@@"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^;\\s+SecureZT((?:\\s?\\d+\\.\\d+\\.\\d+\\.\\d+){0,})$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ";\tSecureZT\t0.0.0."
      ],
      "pumps": [
        "000.0.0."
      ],
      "suffix": "\t0.0",
      "exampleString": ";\\x09SecureZT\\x090.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.000.0.0.\\x090.0"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 142
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"((\\\\.|[^\"])*)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:INSERT|REPLACE)\\s+(?:IGNORE)?\\s*INTO `(.*)` \\((.*)\\) VALUES (\\(.*\\))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "INSERT\tINTO `` () VALUES "
      ],
      "pumps": [
        "()()"
      ],
      "suffix": "IGN",
      "exampleString": "INSERT\\x09INTO\\x20``\\x20()\\x20VALUES\\x20()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()IGN"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 201
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "`((?:\\\\`|[^`\\\\]+)*)`",
    "exploitString": {
      "degree": 0,
      "separators": [
        "`a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "``\\",
      "exampleString": "`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa``\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n\\n((    |\\t).*?\\n|\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\n\t"
      ],
      "pumps": [
        "\n\t"
      ],
      "suffix": "   ",
      "exampleString": "\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x20\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(%[A-Ba-z])?\"\"\"(?:.|\\n)*?\"\"\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\"\""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "%\n\"\"",
      "exampleString": "\"\"\"\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a%\\x0a\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([ \\t]*)<!--\\s*bower:*(\\S*)\\s*-->)(\\n|\\r|.)*?(<!--\\s*endbower\\s*-->)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--bower-->"
      ],
      "pumps": [
        "a\r"
      ],
      "suffix": "--<!",
      "exampleString": "<!--bower-->a\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0d--<!"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 275
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:[^\\\\\\@#]+|\\\\[\\@#])+|\\@[^!\\{a-z0-9_]|\\@@|#@|#[^\\{\\}a-zA-Z0-9#\\*]+|\\\\.)(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 676
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\r?\\n(?:\\s*))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\S+::\\w+)[.]?(\\S+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a::a.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "a::a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "Name\\sservers:\\s((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Name\tservers:\ta\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "ers",
      "exampleString": "Name\\x09servers:\\x09a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aers"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^/?([\\x01-\\xFF]+/?)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\u0000",
      "exampleString": "/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x00"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "([A-z]+?://([-\\w\\.]+[-\\w])+(:\\d+)?(/([\\w/_\\.#-]*(\\?\\S+)?[^\\.\\s])?)?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a://aa"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "-:.",
      "exampleString": "a://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-:."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 170
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n      :"
      ],
      "pumps": [
        "::"
      ],
      "suffix": "r\t",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::r\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "Parameters:\\*\\*((.|[\\n\\r])+?)\\*\\*Returns:",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Parameters:**\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "s",
      "exampleString": "Parameters:**\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0as"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 126
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--(.|\\s)*?-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "!-",
      "exampleString": "<!--\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09!-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(\\\\.|[^\"])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[;{},\\s]|\\/\\/.*|\\/\\*.*?\\*\\/)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "///*\t/**/"
      ],
      "suffix": "a",
      "exampleString": "///*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**////*\\x09/**/a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 748
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>)\\s*|([^\\s<]+\\s*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</a\ta"
      ],
      "pumps": [
        "=\"\"\ta=\"\"\ta\t"
      ],
      "suffix": "</\t",
      "exampleString": "</a\\x09a=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09</\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 217
    },
    "indeg": {
      "num_nodes": 21,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 19,
      "exec_time": 0
    }
  },
  {
    "pattern": "Terms weights:\\n((?:.|\\n)*)\\n+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Terms weights:\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "ms",
      "exampleString": "Terms\\x20weights:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ams"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\\\.|[^'])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "''",
      "exampleString": "a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^: ]+): (.+?(?:\\r\\n\\s(?:.+?))*)\\r\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a: a\r"
      ],
      "pumps": [
        "\n\ta\r\n\r\n\ta\r"
      ],
      "suffix": "\ra:",
      "exampleString": "a:\\x20a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x0d\\x0a\\x09a\\x0d\\x0da:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 140
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\d|\\s|\\W)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "$0"
      ],
      "suffix": "A",
      "exampleString": "$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0A"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:[[:blank:]]*[[:alpha:]]*[>|])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a>a"
      ],
      "suffix": "ahb",
      "exampleString": "a>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aa>aahb"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?\\s*,?\\s*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "m-"
      ],
      "pumps": [
        "0--"
      ],
      "suffix": "-0.+",
      "exampleString": "m-0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0---0.+"
    },
    "pivot": {
      "num_nodes": 8,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:([A-Z][a-z]*)(\\d+\\.?\\d*)?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A0."
      ],
      "pumps": [
        "0A00"
      ],
      "suffix": "a0..",
      "exampleString": "A0.0A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A000A00a0.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*::)*(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "::a"
      ],
      "suffix": ":",
      "exampleString": "::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 658
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(?:(?:!--([\\w\\W]*?)-->)|(?:!\\[CDATA\\[([\\w\\W]*?)\\]\\]>)|(?:!DOCTYPE([\\w\\W]*?)>)|(?:\\?([^\\s\\/<>]+) ?([\\w\\W]*?)[?/]>)|(?:\\/([^>]+)>)|(?:([A-Za-z0-9\\-\\:\\.]+)((?:\\s+[^\"'>]+(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>]*))*|\\/|\\s+)>))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\ta"
      ],
      "pumps": [
        "\"\"\ta'\ta'\ta"
      ],
      "suffix": "DO\"]-?']-?\ta]-/",
      "exampleString": "<a\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09a\"\"\\x09a'\\x09a'\\x09aDO\"]-?']-?\\x09a]-/"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 614
    },
    "indeg": {
      "num_nodes": 21,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 19,
      "exec_time": 1
    }
  },
  {
    "pattern": "<!--((.|\\s)*?)-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "!-",
      "exampleString": "<!--\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09!-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(http:\\/\\/|https:\\/\\/)([\\w]*(-?[\\w]*)*\\.)+[a-z]{2,4}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "http://."
      ],
      "pumps": [
        ".."
      ],
      "suffix": ":/",
      "exampleString": "http://.....................................................................................:/"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!\\-\\-(.|\\s)*?\\-\\->(\\s)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "a",
      "exampleString": "<!--\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 339
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "trailer[\\s]*<<(.*)>>[\\s]*[\\r\\n]+(?:[^\\r\\n]*[\\r\\n]+)*startxref[\\s]*[\\r\\n]+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "trailer<<>>\n\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "ail",
      "exampleString": "trailer<<>>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aail"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 205
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<ins[^>]*>((.|\\n)*?)<\\/ins>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<ins>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "<\n",
      "exampleString": "<ins>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 128
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "jquery(-(\\.?\\d+)+)?(\\.intellisense)?(\\.min)?\\.js$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "jquery-.0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "-",
      "exampleString": "jquery-.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "ActionController::Routing::Routes.draw do \\|map\\|((\\n|\\s*.*\\n)*)\\s+\\# end",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ActionController::Routing::Routesadraw do |map|"
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "Co",
      "exampleString": "ActionController::Routing::Routesadraw\\x20do\\x20|map|\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0aCo"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 196
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "define\\(\\s*'infinite-scroll\\/js\\/index'(.|\\n)+\\],\\s*factory",
    "exploitString": {
      "degree": 0,
      "separators": [
        "define('infinite-scroll/js/index'\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "ct",
      "exampleString": "define('infinite-scroll/js/index'\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0act"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 216
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r\\n|\\r|\\n)([\\t ]*(\\r\\n|\\r|\\n))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\r\n\r\n"
      ],
      "suffix": "\r\t",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(Main.*?)\\s=\\s(.*?(?:\\n\\s\\s.*?)*);",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Main\t=\t\n\t"
      ],
      "pumps": [
        "\t\n\t\t\n\t"
      ],
      "suffix": "a",
      "exampleString": "Main\\x09=\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*)://([^/]*)(/.*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "://"
      ],
      "pumps": [
        "//"
      ],
      "suffix": "a",
      "exampleString": "://////////////////////////////////////////////////////////////////////////////////////a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 1108
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:[^\\\\:]+|\\\\.)*)(?::(.*))$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ":",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 777
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*([\\-\\*]\\s+([^\\n]*)\\n)*([\\-\\*]\\s+([^\\n]*)\\n?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "*\t\n*\t\n"
      ],
      "suffix": "*a\n\n",
      "exampleString": "*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*\\x09\\x0a*a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 150
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "[A-Za-z0-9_]+([^A-Za-z0-9_]|\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "a\na",
      "exampleString": "a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:(?:.*)/)*([a-z][a-z0-9-]*))\\..+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "/a"
      ],
      "suffix": "/",
      "exampleString": "/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 835
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\d+(.\\d+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0a"
      ],
      "pumps": [
        "000a"
      ],
      "suffix": "0aa",
      "exampleString": "0a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<span>((.|\\n|\\r\\n)*?)<\\/span>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<span>\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "a\r",
      "exampleString": "<span>\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0da\\x0d"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(/\\*\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/***"
      ],
      "pumps": [
        "a*\n*"
      ],
      "suffix": "/**",
      "exampleString": "/***a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*a*\\x0a*/**"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\+|\\()?(\\d+[ \\+\\(\\)\\/-]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "#",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<script(.|\\s)*?\\/script>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "<scri",
      "exampleString": "<script\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09<scri"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</a\ta="
      ],
      "pumps": [
        "\t\"\"\ta=\t\"\"\ta="
      ],
      "suffix": "</\t",
      "exampleString": "</a\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=</\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 220
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\S+).([a|n|r|v]) (\\d+) ((\\d+ ?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aaa 0 0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": " 0\t$",
      "exampleString": "aaa\\x200\\x200000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x200\\x09$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\"(?:[^\"]+|\\\\\")*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\"\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:.|\\n)*?\\n  \\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": " ",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n\\n(.*(\\n.+)*:\\n\\n!\\[.*\\]\\((.*\\))(\\n\\n)?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\n\na"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "](\n:",
      "exampleString": "\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa](\\x0a:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 169
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?: *\\/\\/.*\\s*)* *lodash\\.forOwn *= *.+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "/////"
      ],
      "suffix": "h.fo",
      "exampleString": "///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////h.fo"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 201
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(((.*)*)*x)\u0100",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*options\\s*(([^\\s]+\\s*)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "optionsa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "optionsaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 636
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(@partial \".*\")+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@partial "
      ],
      "pumps": [
        "\"\"@partial \"\"@partial "
      ],
      "suffix": "@",
      "exampleString": "@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20\"\"@partial\\x20@"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:(?:\"(?:[^\\\\\"]|(\\\\\\\\)*\\\\\")*\")|(?:\\'(?:[^\\\\\"]|(\\\\\\\\)*\\\\\\')*\\')|[^#])*)(#.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "''''"
      ],
      "suffix": "''\\",
      "exampleString": "'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 1047
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "recipe\\[(.*::)*([^\\]]+)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "recipe["
      ],
      "pumps": [
        ":::::"
      ],
      "suffix": ":",
      "exampleString": "recipe[:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "seamonkey\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "seamonkey/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "ey/",
      "exampleString": "seamonkey/0._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000ey/"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<input(\\r|\\t|\\n|.)*?type=\\\"file\\\"(\\r|\\t|\\n|.)*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<input"
      ],
      "pumps": [
        "\t\r"
      ],
      "suffix": "e=",
      "exampleString": "<input\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0de="
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 179
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "/\\*[^*]*\\*+([^/*][^*]*\\*+)*/|//([^\\\\]|[^\\n][\\n]?)*?\\n|(\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'|.[^/\"'\\\\]*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "\\\\\"a'a\\\n\"a*\\",
      "exampleString": "//a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\\\\"a'a\\\\x0a\"a*\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 204
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "Registrar:\\s((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Registrar:\ta\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "a",
      "exampleString": "Registrar:\\x09a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:\\/\\*.*?\\*\\/|'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\((\\s*'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|[^)]*?)\\s*\\)|[^};])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "("
      ],
      "pumps": [
        ")(\"(\""
      ],
      "suffix": "\\(\t;\\",
      "exampleString": "()(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\")(\"(\"\\(\\x09;\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 405
    },
    "indeg": {
      "num_nodes": 20,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 15,
      "exec_time": 1
    }
  },
  {
    "pattern": "\"(\\\\\\\\|\\\\.|[^\"\\\\])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\a\\\\"
      ],
      "suffix": "\\\"\"a",
      "exampleString": "\"\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\\"\"a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^Version: v(\\d+)(?:[-\\.][-a-z0-9]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Version: v0-"
      ],
      "pumps": [
        "a-a-"
      ],
      "suffix": "s.",
      "exampleString": "Version:\\x20v0-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-s."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\/\\*-+\\*\\/\\s*){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*-*//*-"
      ],
      "pumps": [
        "*/\t/*-"
      ],
      "suffix": "**",
      "exampleString": "/*-*//*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-*/\\x09/*-**"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^:container\\(\"((?:[^()]+|\\([^()]*\\))+)\"\\)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":container(\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "e",
      "exampleString": ":container(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\n|.)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 577
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:",
    "exploitString": {
      "degree": 0,
      "separators": [
        " "
      ],
      "pumps": [
        "a_a_"
      ],
      "suffix": "mas  # foo_",
      "exampleString": "\\x20a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_mas\\x20\\x20#\\x20foo_"
    },
    "pivot": {
      "num_nodes": 10,
      "exec_time": 611
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 1
    }
  },
  {
    "pattern": "```(\\s|\\t)*gl",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "`g\n",
      "exampleString": "```\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09`g\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!-- BEGIN ([\\w\\-\\.\u3041-\u3093\u30a1-\u30f6\u4e9c-\u7199]+):with -->(([\\n\\r\\t]|.)*?)<!-- END ([\\w\\-\\.\u3041-\u3093\u30a1-\u30f6\u4e9c-\u7199]+):with -->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- BEGIN a:with -->"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "h ",
      "exampleString": "<!--\\x20BEGIN\\x20a:with\\x20-->\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09h\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 254
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 3
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 2
    }
  },
  {
    "pattern": "([ \\t]*\\r|[ \\t]*\\n|[ \\t]*\\r\\n){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\t\r\n"
      ],
      "suffix": "\t\n\r\t",
      "exampleString": "\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x0d\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 136
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "Version\\/(\\d+)(\\.(\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Version/0.0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "Version/0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n\\s?){3,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\t\n\t\n\t"
      ],
      "pumps": [
        "\n\n\n\t"
      ],
      "suffix": "\t\t",
      "exampleString": "\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 185
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(?:\\{(?:.|\\r\\n|\\n)*\\}|\\[(?:.|\\r\\n|\\n)*\\])\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{"
      ],
      "pumps": [
        "a\r\n"
      ],
      "suffix": "[",
      "exampleString": "{a\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0a["
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "f\\s+((([\\d]{1,}\\/[\\d]{1,}[\\s]?){3,})+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "f\t"
      ],
      "pumps": [
        "0/00/00/00/000/00/00/0"
      ],
      "suffix": "0/",
      "exampleString": "f\\x
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 181
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<html>(.|\\r|\\n)*<title class=\"klass\">Title &quot; &#39; &amp; &lt; &gt; \\$ \\$\\$ \\$&#39; \\$` \\$&amp; \\$3<\\/title>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<html>"
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "$&amp; ",
      "exampleString": "<html>\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d$&amp;\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 337
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:[\\w|\\\\]+(?:\\[\\])*\\|?)+)(?:\\s+(.*))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 823
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z]+(?:[a-z0-9-\\/]?[a-z0-9])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aaa"
      ],
      "suffix": "a0-",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([\\\\w]{1,}\\\\s?){1,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "\\\\\\\\"
      ],
      "suffix": "ss",
      "exampleString": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ss"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.|\\n)*<\\/html>",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "m",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0am"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\\"((.|\\n)*)\\\"\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "\"\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^.*<body(\\s[^>]*)*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<body\t"
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "d<b><b",
      "exampleString": "<body\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09d<b><b"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d+:?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "::",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(ContractDefinition \\\"(.+)\\\"(?:\\n\\s+Gas costs: \\d+)?\\n(?: +.+\\n)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ContractDefinition \"a\"\n "
      ],
      "pumps": [
        " a\n "
      ],
      "suffix": "sts",
      "exampleString": "ContractDefinition\\x20\"a\"\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20sts"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 234
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d+[\\-\\.]?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "--",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000--"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(array|hash|scalar)(?:_?ref)?\\s*(?:\\(\\s*(\\S+)\\s*\\))*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "hash"
      ],
      "pumps": [
        "(a)(a)"
      ],
      "suffix": "h(\t",
      "exampleString": "hash(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)h(\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 167
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "''"
      ],
      "pumps": [
        "''''"
      ],
      "suffix": "^'\u0000",
      "exampleString": "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''^'\\x00"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+)(&.+?;)+(\\w+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a&a"
      ],
      "pumps": [
        ";&a;&a"
      ],
      "suffix": "&;",
      "exampleString": "a&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a;&a&;"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:[0-9]* ?(?:\u2714|\u2718|\u279f) ?[0-9]*(?:, | \\| )?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        " \u2718"
      ],
      "pumps": [
        " \u2714"
      ],
      "suffix": "\u279f 0|",
      "exampleString": "\\x20\\x{2718}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x20\\x{2714}\\x{279f}\\x200|"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([+|-]*[0-9]*[.]*?[0-9]+)([a-z%]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "+0.a",
      "exampleString": "0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa+0.a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.+=)*(\\(+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "=a=a"
      ],
      "suffix": "=",
      "exampleString": "a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a=a="
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(button.*data-toggle=\"modal\".*data-target)*(aside)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "buttondata-toggle"
      ],
      "pumps": [
        "=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle"
      ],
      "suffix": "ard",
      "exampleString": "buttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggle=\"modal\"data-targetbuttondata-toggleard"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 184
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[[:punct:]](\\s+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "::",
      "exampleString": ":\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "nextval\\('(.+?)'(.+?)*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "nextval('a'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "(",
      "exampleString": "nextval('a'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\/[^\\s(<>]+)*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a"
      ],
      "pumps": [
        "/a"
      ],
      "suffix": "/a",
      "exampleString": "/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\{\\}]+[^\\}]|[\\}])+?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "{{",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa{{"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!\u00e2\u0080\u0093(.|\\n)*\u00e2\u0080\u0093>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!\u00e2\u0080\u0093"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "!",
      "exampleString": "<!\\xe2\\x80\\x93\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a!"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(!emoji)\\s*(\\d+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "!emoji0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "!emo",
      "exampleString": "!emoji0000000000000000000000000000000000000000000000000000000000000000000000000000000000000!emo"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "Domain Name Servers listed in order:\\n\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Domain Name Servers listed in order:\n\na\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "e",
      "exampleString": "Domain\\x20Name\\x20Servers\\x20listed\\x20in\\x20order:\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ae"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 142
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(__END__)\\n((?:.*\\n)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "__END__\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "D_",
      "exampleString": "__END__\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aD_"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^,\\s]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 61
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "import\\s+(.*)\\s+=\\s*require\\(((.|\\s)*)\\);",
    "exploitString": {
      "degree": 0,
      "separators": [
        "import\t\t=require("
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "t",
      "exampleString": "import\\x09\\x09=require(\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09t"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:.|\\n)*START OF TEST HELPER LOGS: IGNORE PREVIOUS.\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "EVIOU",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aEVIOU"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 183
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "[\\\\p{L}]([\\\\p{L}|[:space:]|-]*[\\\\p{L}])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "L"
      ],
      "pumps": [
        "La"
      ],
      "suffix": "La",
      "exampleString": "LLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLaLa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^((?:\"[^\"]*\"|'[^']*'|[^;])*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "'''''"
      ],
      "suffix": ";\";';",
      "exampleString": "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''';\";';"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "The physical processor has (?:([\\d]+) virtual processor \\(([\\d]+)\\)|([\\d]+) cores and ([\\d]+) virtual processors[^\\n]+)\\n(?:\\s+ The core has.+\\n)*\\s+.+ \\((\\w+) ([\\S]+) family (.+) model (.+) step (.+) clock (.+) MHz\\)\\n[\\s]*(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "The physical processor has 0 virtual processor (0)\n\t The"
      ],
      "pumps": [
        " core hasa\n\t The core has\n\n\t The"
      ],
      "suffix": " core hasa\n\n\t\n (a  ($ family  (\t\n model  ( step  s ",
      "exampleString": "The\\x20physical\\x20processor\\x20has\\x200\\x20virtual\\x20processor\\x20(0)\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x09\\x20The\\x20core\\x20has\\x0a\\x0a\\x09\\x20The\\x20core\\x20hasa\\x0a\\x0a\\x09\\x0a\\x20(a\\x20\\x20($\\x20family\\x20\\x20(\\x09\\x0a\\x20model\\x20\\x20(\\x20step\\x20\\x20s\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 1943
    },
    "indeg": {
      "num_nodes": 19,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 18,
      "exec_time": 1
    }
  },
  {
    "pattern": "^ {0,3}>.+(?:\\n[ \\t]*\\S.*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ">a\n"
      ],
      "pumps": [
        " a\n"
      ],
      "suffix": "\n",
      "exampleString": ">a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 644
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z][a-z0-9_]*\\\\?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\\aa"
      ],
      "suffix": "\\\\",
      "exampleString": "a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[^\\$]*\\$(\\w+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\u0000$\u0000",
      "exampleString": "$aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x00$\\x00"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(=\\s*)(?:\"(?:\\\\?.)*?\"|[^)\\s]+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "=\"\\"
      ],
      "pumps": [
        "a\\\\"
      ],
      "suffix": "=\t",
      "exampleString": "=\"\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\=\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "https?:\\/\\/([-\\w\\.]+)+(:\\d+)?(\\/([\\w\\/_\\.]*(\\?\\S+)?)?)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\da-zA-Z](\\-?\\w+)*\\.)*[\\da-zA-Z](\\-?\\w+)*\\.?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0..",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\\"([^\\\"]|.)*\\\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "a"
      ],
      "suffix": "a",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "`([a-z][-a-z]*[a-z])+`",
    "exploitString": {
      "degree": 0,
      "separators": [
        "`a"
      ],
      "pumps": [
        "aaa"
      ],
      "suffix": "``",
      "exampleString": "`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa``"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "Servidores de nombre \\(Domain servers\\):\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Servidores de nombre (Domain servers):\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "e nom",
      "exampleString": "Servidores\\x20de\\x20nombre\\x20(Domain\\x20servers):\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ae\\x20nom"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(/)((?:\\\\.|.)*?)(/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\a",
      "exampleString": "/\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "@a-a",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@a-a"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\\s;]*?(\\s*\\/\\/.*\\s*|\\s*\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/\\s*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**a"
      ],
      "pumps": [
        "**a"
      ],
      "suffix": "*//***",
      "exampleString": "/**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a*//***"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 814
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 1
    }
  },
  {
    "pattern": "^<!-- END TESTS -->(.|[",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- END TESTS -->"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "<!--\\x20END\\x20TESTS\\x20-->\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 727
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\/\\/\\.CommonJS(?:.|\\n)*?\\/\\/\\/CommonJS",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//.CommonJS"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "m",
      "exampleString": "//.CommonJS\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0am"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n>.*?)+(\\n[^>].*?)+(\\n>.*?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n>"
      ],
      "pumps": [
        "a\n>"
      ],
      "suffix": "a\n",
      "exampleString": "\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a>a\\x0a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 703
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?: *\\/\\/.*\\n)*( *)if *\\(typeof +define[\\s\\S]+?else ",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "//\n//\n"
      ],
      "suffix": "e",
      "exampleString": "//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0ae"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 183
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\$\\$?|\\\\(?:begin|end)\\{[a-z]*\\*?\\}|\\\\[{}$]|[{}]|(?:\\n\\s*)+|@@\\d+@@|\\\\\\\\(?:\\(|\\)|\\[|\\]))",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\\\\",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 180
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "Current Nameservers:\\n\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Current Nameservers:\n\na\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "s:",
      "exampleString": "Current\\x20Nameservers:\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0as:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(crop)(-top-left|-top|-top-right|-left|-center|-right|-bottom-left|-bottom|-bottom-right|-[\\d]{1,3}-[\\d]{1,3})*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "crop-bott"
      ],
      "pumps": [
        "om-bottom-right-bott"
      ],
      "suffix": "eft-00",
      "exampleString": "crop-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-bottom-bottom-right-botteft-00"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 254
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:runtime:.*\\n)*.*(?:panic: |fatal error: )(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "runtime:"
      ],
      "pumps": [
        "a\nruntime:"
      ],
      "suffix": "a\nru",
      "exampleString": "runtime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aruntime:a\\x0aru"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 706
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?((\\d+)?[\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "blazer\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "h0",
      "exampleString": "blazer\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaah0"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 132
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^<!-- END TESTS -->(.|[\\n])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- END TESTS -->"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "<!--\\x20END\\x20TESTS\\x20-->\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 727
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*Re:\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Re:"
      ],
      "pumps": [
        "\t\tRe:"
      ],
      "suffix": "e:R:",
      "exampleString": "Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:\\x09\\x09Re:e:R:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(?:[[:alnum:]]+|:vendor)\\\\?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "dorr",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadorr"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "Violation of (?:UNIQUE|PRIMARY) KEY constraint '((.|\\s)*)'. Cannot insert duplicate key in object '.*'.(:? The duplicate key value is \\((.*)\\).)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Violation of UNIQUE KEY constraint '"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "Y ",
      "exampleString": "Violation\\x20of\\x20UNIQUE\\x20KEY\\x20constraint\\x20'\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09Y\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 566
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "'(?:''|[^']+)*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a'a",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!(?:--(?:[^-]*|-[^-]+)*--\\s*)>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "!--a",
      "exampleString": "<!--aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa!--a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "((\\d+.\\d+|\\d+)(TB|GB|MB|KB|B)\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0B"
      ],
      "pumps": [
        "\t0B0KB"
      ],
      "suffix": "T",
      "exampleString": "0B\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KB\\x090B0KBT"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 145
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<html>(.|\\r|\\n)*<title class=\"klass\">Title<\\/title>(.|\\r|\\n)*<\\/html>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<html>"
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "m",
      "exampleString": "<html>\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0dm"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 262
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\'(\\\\.|[^\\'])*\\'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\w+\\((?:\\-?[0-9]+(?:\\.[0-9]*)?\\w*\\s*)?(?:\\s*,\\s*\\-?\\s*[0-9]*(?:\\.[0-9]+)?\\w*\\s*)*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a(,-"
      ],
      "pumps": [
        "\t,\t"
      ],
      "suffix": "(\t",
      "exampleString": "a(,-\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09(\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 183
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 18,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{\\{((?:.|\\n)+?)\\}\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{{"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "{",
      "exampleString": "{{\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a{"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?: *\\/\\/.*\\n)*(\\s*)' *<%.+?useStrict.+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//"
      ],
      "pumps": [
        "\n//\n//"
      ],
      "suffix": "\n //\n'<%a\nu",
      "exampleString": "//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a\\x20//\\x0a'<%a\\x0au"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 749
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\w+[^<>]+(?:<%.*?%>[^<>]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<aa<%"
      ],
      "pumps": [
        "%><%"
      ],
      "suffix": "<aa",
      "exampleString": "<aa<%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%%><%<aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\[0\\]drawtext=text=a((.|\\n)*)b\\[s0\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[0]drawtext=text=a"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "=te",
      "exampleString": "[0]drawtext=text=a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a=te"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\s\\n]*<align right><\\/align>[\\s\\n]*){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<align right></align><align right></align>"
      ],
      "pumps": [
        "\t\t<align right></align>"
      ],
      "suffix": "alig",
      "exampleString": "<align\\x20right></align><align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>\\x09\\x09<align\\x20right></align>alig"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 142
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "Involved parties:\\n\\n(((.+\\n){8}\\n|(.+\\n){2}\\n)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Involved parties:\n\na\na\na\na\na\n"
      ],
      "pumps": [
        "a\na\na\n\na\na\n\n\n\n\n\na\na\na\n"
      ],
      "suffix": "p",
      "exampleString": "Involved\\x20parties:\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0aa\\x0aa\\x0ap"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 418
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "a",
      "exampleString": "#\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 729
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "<pre>(<code class=\"php\">((.*\\n)*?).*\\</code></pre>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<pre><code class=\"php\">"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "<pre>",
      "exampleString": "<pre><code\\x20class=\"php\">\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<pre>"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 155
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:[\\n\\r]|.)*)(<meta name=\\\"generator\\\" content=\\\"JSDoc 3.*)((?:[\\n\\r]|.)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\n<meta name=",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<meta\\x20name="
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 859
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<html>(.|\\r|\\n)*<title class=\"klass\"><\\/title>(.|\\r|\\n)*<\\/html>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<html>"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "klass",
      "exampleString": "<html>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aklass"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 239
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+)='((?:\\\\'|.)*?)'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a='"
      ],
      "pumps": [
        "\\'\\'"
      ],
      "suffix": "=\\'a",
      "exampleString": "a='\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'=\\'a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": ".*?<H2>(<a.*a>)*[\\d\\.\\s]*(.*?)</H2>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<H2><a"
      ],
      "pumps": [
        "a><aa><a"
      ],
      "suffix": "<",
      "exampleString": "<H2><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><a<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 152
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": ":'(\\\\\\\\|\\\\'|[^'])*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":'"
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": "a",
      "exampleString": ":'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": ":container\\((?:[^()]+|\\([^()]*\\))+\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":container(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "t",
      "exampleString": ":container(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaat"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<p>([\\n\\r\\s]*(&nbsp;)[\\n\\r\\s]*)+<\\/p>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<p>&"
      ],
      "pumps": [
        "nbsp;\t&"
      ],
      "suffix": "</p",
      "exampleString": "<p>&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&nbsp;\\x09&</p"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\\"{3}|<nowiki>)((?:.|\\n)*?)(?:\\\"{3}|<\\/nowiki>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\"\""
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "i><\"",
      "exampleString": "\"\"\"a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ai><\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 141
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "name-59\\.99(?:.|\\n|\\r)*bg-danger(?:.|\\n|\\r)*text-danger(?:.|\\n|\\r)*59\\.99(?:.|\\n|\\r)*<th class=\"text-center\">5<\\/th><\\/tr>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "name-59.99"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "xt-da",
      "exampleString": "name-59.99a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0axt-da"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 737
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": ";(\\\\.|.)*?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        ";"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": ";",
      "exampleString": ";\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a;"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\s*<[^>]+>\\s*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a>"
      ],
      "pumps": [
        "\t<a>"
      ],
      "suffix": "a>>",
      "exampleString": "<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>\\x09<a>a>>"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\n+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\s*)((\\s*typedef\\s*.*?;)+)\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "typed"
      ],
      "pumps": [
        "ef;typedef;typed"
      ],
      "suffix": "ede",
      "exampleString": "typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedef;typedede"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^<([\\-A-Za-z0-9_]+)((?:\\s+[a-zA-Z0-9_\\-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|(?:[^>\\s]+)))?)*)\\s*(\\/?)>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a"
      ],
      "pumps": [
        "\ta='\ta='\ta='"
      ],
      "suffix": "\t",
      "exampleString": "<a\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09a='\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 205
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 1
    }
  },
  {
    "pattern": "bbs.hupu.com/(\\d+)+?[\\-\\d]*.html",
    "exploitString": {
      "degree": 0,
      "separators": [
        "bbsahupuacom/0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "b",
      "exampleString": "bbsahupuacom/0000000000000000000000000000000000000000000000000000000000000000000000000000000000000b"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 167
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\{\\},\\n]|, *\\n?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ", a"
      ],
      "suffix": "\n\n",
      "exampleString": ",\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z]+)+([0-9]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a0a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\@.*\\@)*\\t",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@"
      ],
      "pumps": [
        "@@"
      ],
      "suffix": "\t@",
      "exampleString": "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\x09@"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "/nifi-api/policies/(?:read|write)/(?:[\\w-]+?/?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/nifi-api/policies/read/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "pi//",
      "exampleString": "/nifi-api/policies/read/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaapi//"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d+)+\\.(\\d+)\\.(\\d+)\\.(\\d+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*\\s)*(.+\\@.+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\ta"
      ],
      "suffix": "\ta\t@",
      "exampleString": "\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09@"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 633
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": " *[^ ]+ +\\'(\\\\.|[^\\'])*\\' *$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a '"
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": " \\' \\'a''",
      "exampleString": "a\\x20'\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\x20\\'\\x20\\'a''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*([A-Za-z_$0-9\\['\\.\"\\]]+)*\\s*\\(\\s*(([A-Za-z_$0-9\\['\\.\"\\]]+)?(\\s*,\\s*([A-Za-z_$0-9\\['\\.\"\\]]+))*)\\s*\\)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "(,,",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa(,,"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([_a-zA-Z]\\w*)*:",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a::",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([\\$\\#])\\s+(((.+)\\n){1,})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$\ta\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "$\t",
      "exampleString": "$\\x09a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a$\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "Views.Foo = Backbone.View.extend\\(\\{(.|\\n)*foo-template",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ViewsaFoo = BackboneaViewaextend({"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "nef",
      "exampleString": "ViewsaFoo\\x20=\\x20BackboneaViewaextend({\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0anef"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 235
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<(\\/?)#(.*?(?:\\(.*?\\))*)>)|(')|([\\r\\n\\t])|(\\$\\{([^\\}]*?)\\})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</#"
      ],
      "pumps": [
        "()()"
      ],
      "suffix": "</",
      "exampleString": "</#()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()</"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^From: (.*(?:\\r?\\n\\s+.*)*\\r?\\n)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "From: \r\n\t"
      ],
      "pumps": [
        "a\n\r\n\t"
      ],
      "suffix": "\t",
      "exampleString": "From:\\x20\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09a\\x0a\\x0d\\x0a\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(\\r\\n|\\r|\\n)+\\s*--)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\r\n"
      ],
      "suffix": "\r\n-\t",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0a-\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<img(.|\\\\n)*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<img"
      ],
      "pumps": [
        "\\n"
      ],
      "suffix": "i",
      "exampleString": "<img\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ni"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n\\s+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\t\n\t"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\d+\\.?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "..",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:(?:[^\\s:/?#]+)://|www\\.)(?:[^\\s/?#]+\\.)*(?:[A-Za-z0-9][^\\s/?#]*\\.[A-Za-z]{2,6})(?:/[^\\s#\\?]+)?/?(?:\\?[^\\s#]*)?(?:#[^\\s]*)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "www."
      ],
      "pumps": [
        "a."
      ],
      "suffix": "\t",
      "exampleString": "www.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 254
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\/\\*(.|\\n|\\r)*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\n",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[a-z]+:(?:%[a-fA-F0-9]{2}|[-\\w.~:/?#\\[\\]\\@!$&'()*+,;=]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "g:0",
      "exampleString": "a:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag:0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<img ((.|\\n|\\r\\n)*?)>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<img "
      ],
      "pumps": [
        "\n\r\n"
      ],
      "suffix": "i",
      "exampleString": "<img\\x20\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0ai"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:open)?solaris)[\\/\\s-]?([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "solaris\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ar\t",
      "exampleString": "solaris\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaar\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "/\\*(.|[\\r\\n])*?\\*/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "a",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:[^\\r\\n]|[\\r\\n]+[^\\r\\n]|[~]{3,5})*?)((?:\\r?\\n)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "~"
      ],
      "pumps": [
        "~~~~~~~"
      ],
      "suffix": "\r\r",
      "exampleString": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\x0d\\x0d"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 170
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "Returns:\\*\\*((.|[\\n\\r])+?)\\n\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Returns:**"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "ur\n",
      "exampleString": "Returns:**a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aur\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^SELECT.*?FROM\\s*((?:`?\\w+`?\\s*\\.\\s*)?`?\\w+`?(?:(?:\\s*AS)?\\s*`?\\w+`?)?(?:\\s*,\\s*(?:`?\\w+`?\\s*\\.\\s*)?`?\\w+`?(?:(?:\\s*AS)?\\s*`?\\w+`?)?)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "SELECTFROM`a`,`a"
      ],
      "pumps": [
        "`.aa`,a"
      ],
      "suffix": "\tFA,`FaA`\tAS\t",
      "exampleString": "SELECTFROM`a`,`a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a`.aa`,a\\x09FA,`FaA`\\x09AS\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 1167
    },
    "indeg": {
      "num_nodes": 38,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 38,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\S* )*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a "
      ],
      "suffix": "a",
      "exampleString": "a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "Cluster(.|\\n)*topology=(.|\\n)*servers=",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Cluster"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "er\nts",
      "exampleString": "Cluster\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aer\\x0ats"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\(\\*(?:\\(\\*[\\w\\W]*?\\*\\)|[\\w\\W])*?\\*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(*(**"
      ],
      "pumps": [
        ")(**)(**"
      ],
      "suffix": "(a*(",
      "exampleString": "(*(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**(a*("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*\\[((?:[^\\]]|\\]|\\[)+?)\\]:\\s*(.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[]"
      ],
      "pumps": [
        "["
      ],
      "suffix": "]",
      "exampleString": "[][[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 684
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "Version ((?:\\d+.)+\\d+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Version 0a"
      ],
      "pumps": [
        "000a"
      ],
      "suffix": "a",
      "exampleString": "Version\\x200a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000a000aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "imports: \\[(.|\\s)*Test5Module(.|\\s)*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "imports: ["
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "mpo",
      "exampleString": "imports:\\x20[\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09mpo"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[???????????????????????????]+[??]?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "?"
      ],
      "pumps": [
        "??"
      ],
      "suffix": "#",
      "exampleString": "?????????????????????????????????????????????????????????????????????????????????????#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z0-9]+[\\w\\-]*([\\.]?[a-zA-Z0-9]+[\\w\\-]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0..",
      "exampleString": "a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "Nameservers:\\s((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Nameservers:\ta\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "N",
      "exampleString": "Nameservers:\\x09a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aN"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "you passed(.|\\n)*?the api calls for(.|\\n)*?object",
    "exploitString": {
      "degree": 0,
      "separators": [
        "you passed"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": " ca",
      "exampleString": "you\\x20passed\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20ca"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 184
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[-+]?(\\d*,\\d*)+(?:\\.)?\\d*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+,"
      ],
      "pumps": [
        "0,"
      ],
      "suffix": "++",
      "exampleString": "+,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,++"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\\\?\\[[^\\[]+?\\]\\\\?)+\\s+)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\[a"
      ],
      "pumps": [
        "]\\[a"
      ],
      "suffix": "a]\\",
      "exampleString": "\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[a]\\[aa]\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(b[^t]+)*b[bqeh]+t[et]*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "b"
      ],
      "pumps": [
        "abab"
      ],
      "suffix": "etb",
      "exampleString": "bababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababetb"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(http|https|ftp|ftps)\\:\\/\\/([a-zA-Z0-9\\-\\.]+\\.)+[a-zA-Z]{2,3}(\\/\\S*)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ftp://a."
      ],
      "pumps": [
        "a.a."
      ],
      "suffix": "\t",
      "exampleString": "ftp://a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 133
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "([\\w-]+)::([\\w\\(\\)\\=]+|\\*)(\\[.*?\\])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a::*["
      ],
      "pumps": [
        "][]["
      ],
      "suffix": "a:",
      "exampleString": "a::*[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][a:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "name-70\\.01(?:.|\\n|\\r)*bg-success(?:.|\\n|\\r)*text-success(?:.|\\n|\\r)*70\\.01(?:.|\\n|\\r)*<th class=\"text-center\">0<\\/th><\\/tr>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "name-70.01"
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "te",
      "exampleString": "name-70.01\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0dte"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 863
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "function\\s*\\((\\w+,\\s*\\w+,\\s*\\w+)\\)\\s*\\{(\\n?\\s*\\\"use strict\\\";?)*\\n?\\/\\*\\s*\\@preserve ASM BEGIN",
    "exploitString": {
      "degree": 0,
      "separators": [
        "function(a,a,a){\n\"use st"
      ],
      "pumps": [
        "rict\"\n\"use st"
      ],
      "suffix": "E",
      "exampleString": "function(a,a,a){\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20strict\"\\x0a\"use\\x20stE"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 418
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 1
    }
  },
  {
    "pattern": "(a|(((.*)*)*x)\u0103|(((.*)*)*x)\u0100)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\u0103x",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x{103}x"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\r\\n?|\\n\\r?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\r\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:<p class=\"(.*)+indent\">)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<p class=\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "s",
      "exampleString": "<p\\x20class=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaas"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\t"
      ],
      "pumps": [
        "\n\t"
      ],
      "suffix": "\t",
      "exampleString": "\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d+(-\\d+)?(:\\d+(-\\d+)?)*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "::",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000::"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "(/\\*([^*]|[\r",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "*\n"
      ],
      "suffix": "a",
      "exampleString": "/**\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 671
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "---------"
      ],
      "suffix": "<>-\"",
      "exampleString": "<!--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<>-\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 165
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "([[:lower:]\\d]+[\\.\\?:\\/])+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "0:"
      ],
      "suffix": "..",
      "exampleString": "0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n            --TEST----TEMP"
      ],
      "pumps": [
        "LATE()----TEMPLATE()----TEMP"
      ],
      "suffix": "LATE()----TEMPLAT",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 1122
    },
    "indeg": {
      "num_nodes": 16,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 1
    }
  },
  {
    "pattern": "(([a-zA-Z0-9]|[a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)+([A-Za-z]+)|([0-9]{1,3}\\.){3}[0-9]{1,3}",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a.a.a"
      ],
      "suffix": "0.00.",
      "exampleString": "a.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.aa.a.a0.00."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 168
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "-----BEGIN PGP SIGNATURE-----\\n(?:.+\\n)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-----BEGIN PGP SIGNATURE-----\na"
      ],
      "pumps": [
        "\na\na"
      ],
      "suffix": "G",
      "exampleString": "-----BEGIN\\x20PGP\\x20SIGNATURE-----\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaG"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\S+(\\..+)*)\\.(\\w*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a."
      ],
      "pumps": [
        "a.a."
      ],
      "suffix": "a\t",
      "exampleString": "a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^\\x00]+)*\\x00(.)([^\\x00]+)*\\x00(.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\u0000",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x00"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 582
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\n[ \\t]+[^\\n]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\t"
      ],
      "pumps": [
        "\ta\n\t"
      ],
      "suffix": "a\n\n",
      "exampleString": "\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09\\x09a\\x0a\\x09a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z]+(?:[a-z0-9-]?[a-z0-9])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aaa"
      ],
      "suffix": "-",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "m-"
      ],
      "pumps": [
        "0--"
      ],
      "suffix": "-0.+",
      "exampleString": "m-0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0---0.+"
    },
    "pivot": {
      "num_nodes": 8,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r?\\n|\\r)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:[^\\\\(\\[\\]$^]+|\\\\(?:[CM]-)*[^CMZA])*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-\\C$",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-\\C$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "='((\\\\.|[^'])*?)'|\\\"((\\\\.|[^\\\"])*?)\\\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "='"
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "=a\\\"\"\\a'\\",
      "exampleString": "='a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a=a\\\"\"\\a'\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\@docs-jsondesc-start(.|\\n|\\r)*\\@docs-jsondesc-end\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@docs-jsondesc-start"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "-\n",
      "exampleString": "@docs-jsondesc-start\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a-\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 157
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "([^\\s\\(\\)]+(\\.[^\\s\\(\\)]+)*)\\.(\\w*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a."
      ],
      "pumps": [
        "a.a."
      ],
      "suffix": "$",
      "exampleString": "a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[\\[(\\w+?)*\\]\\]*|\\$\\s*(\\w+?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\t",
      "exampleString": "$aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+)\\.*(?:\\t|\\s)*(\\d+)\\w*(?:\\t|\\s)*(?:\\-|to)(?:\\t|\\s)*(\\w+)\\.*(?:\\t|\\s)*(\\d+)\\w*,*(?:\\t|\\s)*(\\d*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\na",
      "exampleString": "a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x0aa"
    },
    "pivot": {
      "num_nodes": 5,
      "exec_time": 207
    },
    "indeg": {
      "num_nodes": 21,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 15,
      "exec_time": 1
    }
  },
  {
    "pattern": "webkit\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "webkit/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "webkit/0._00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(0*1*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "00"
      ],
      "suffix": "#",
      "exampleString": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 61
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\(([^\\(\\)\\\\]+|\\\\{2}|\\\\.)*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\a",
      "exampleString": "(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<uap:ApplicationContentUriRules>(.|\\n|\\r)*<\\/uap:ApplicationContentUriRules>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<uap:ApplicationContentUriRules>"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "<uap:ApplicationC",
      "exampleString": "<uap:ApplicationContentUriRules>\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a<uap:ApplicationC"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 210
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^'(\\\\\\\\|\\\\'|[^'])*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\'\\\\"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\*([^\\\\*]|@escapes)+\\*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*@es"
      ],
      "pumps": [
        "capes@escapes@es"
      ],
      "suffix": "apa",
      "exampleString": "*@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@esapa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s*<br.*?>\\s*){3,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<br><br><br"
      ],
      "pumps": [
        "><br><br"
      ],
      "suffix": "<b><b",
      "exampleString": "<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br<b><b"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 174
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([+-]?)((?:(?:\\w?\\d+,?)+|/)+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+a0,"
      ],
      "pumps": [
        "0,,"
      ],
      "suffix": ",0/a",
      "exampleString": "+a0,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,,0/a"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([\\.#]+)((?:\\w+|-)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#a#",
      "exampleString": "#aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#@e"
      ],
      "pumps": [
        "scapes@escapes@e"
      ],
      "suffix": "esc#\t",
      "exampleString": "#@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@eesc#\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "(openshift\\s)+(v\\d+.\\d+.\\d+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "openshift\tv0a"
      ],
      "pumps": [
        "0a0v000000v0a"
      ],
      "suffix": "o0v00v00",
      "exampleString": "openshift\\x09v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0a0a0v000000v0ao0v00v00"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 169
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "<style type=\"text\\/css\" id=\"branch-css\">((.|\\s)*?)<\\/style>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<style type=\"text/css\" id=\"branch-css\">"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "-css\"",
      "exampleString": "<style\\x20type=\"text/css\"\\x20id=\"branch-css\">\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09-css\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 212
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z](\\w|_)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a_"
      ],
      "pumps": [
        "_"
      ],
      "suffix": "#",
      "exampleString": "a___________________________________________#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s\\s*)*\\\\",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\\\t",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "-+BEGIN\\s+.*ENCRYPTED PRIVATE\\s+KEY[^-]*-+(?:\\s|\\r|\\n)+([a-z0-9+/=\\r\\n]+)-+END\\s+.*ENCRYPTED PRIVATE\\s+KEY[^-]*-+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-BEGIN\tENCRYPTED PRIVATE\tKEY-"
      ],
      "pumps": [
        "\n\r"
      ],
      "suffix": " ",
      "exampleString": "-BEGIN\\x09ENCRYPTED\\x20PRIVATE\\x09KEY-\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 400
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 1
    }
  },
  {
    "pattern": "Physical size: ([^\\r?\\n]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Physical size: a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\n",
      "exampleString": "Physical\\x20size:\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:\\w|_|-)+)\\s*=\\s*((?:\\w|\\d|_|-)+|\".*?\")",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a_"
      ],
      "suffix": "_$",
      "exampleString": "a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a__$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "(.*\\n)*(\\ *\\*\\=\\ *require\\ +.*\\n)+(\\ *\\*\\/\\ *\\n)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "=",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a="
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 172
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "(-{2,})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "----"
      ],
      "suffix": "#",
      "exampleString": "------------------------------------------------------------------------------------------------------------------------------------------------------------------------#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "([-\u2013]?[a-zA-Z\u0430-\u044f\u0451\u0410-\u042f\u04010-9]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "--",
      "exampleString": "-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa--"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 62
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^api-(\\w+-?)+\\.js$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "api-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "s..",
      "exampleString": "api-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaas.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^/(\\(+[^)]+\\)){1,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "((a)"
      ],
      "suffix": ")/",
      "exampleString": "/((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a)((a))/"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\"(?:[^\"]|\\\\.)*\")",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:\\\\{1,2}\\w+|\\w+\\\\{1,2})(?:\\w+\\\\{0,2})+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\\a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\\\\",
      "exampleString": "a\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\\\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*#EXTINF:(-?\\d+(?:\\.\\d+)?)(\\s+\\S+?=\\S+)*,\\s*(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#EXTINF:-0\ta="
      ],
      "pumps": [
        "a\ta==a\ta="
      ],
      "suffix": "a",
      "exampleString": "#EXTINF:-0\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a\\x09a==a\\x09a=a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 658
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s|\\W)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "A",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09A"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*\\/\\*.*\\*\\/|\\s*\\/\\/[^\\n]*|\\s*\"[^\"]+\"\\s*;?|\\s*'[^']+'\\s*;?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "///*\"*///\""
      ],
      "suffix": "\t\"\t\n'/",
      "exampleStringx09\"\\x09\\x0a'/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 415
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 0
    }
  },
  {
    "pattern": "('(?:\\\\.|.)*'|\"(?:\\\\.|.)*\"|\\S+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\a\\a"
      ],
      "suffix": "\\\"\t",
      "exampleString": "\"\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\\"\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\'\\\"#]+([\\'\\\"][^\\'\\\"]*[\\'\\\"])*)*(#.*)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\"",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 662
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\/(\\[.+\\])+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//[a"
      ],
      "pumps": [
        "][a"
      ],
      "suffix": "]a",
      "exampleString": "//[a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a]a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:regards)|(?:cheers\\,?)(?: *\\n*)*[^\\n]+(?: *\\n*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "cheers,"
      ],
      "pumps": [
        "  "
      ],
      "suffix": "r\nr",
      "exampleString": "cheers,\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20r\\x0ar"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<table(?:\\s+(?:class|style)=\"[^\"]*\"\\s*)*) summary=\"\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<table\tstyle"
      ],
      "pumps": [
        "=\"\"\t\tclass"
      ],
      "suffix": "y=",
      "exampleString": "<table\\x09style=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09class=\"\"\\x09\\x09classy="
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 210
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^\"\\@\u00ef\u00bc\u00a0]+|\"(?:(?:[^\"]|\\\\.)*[^\\\\])?\")(?:[\\@\u00ef\u00bc\u00a0]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\\"
      ],
      "pumps": [
        "a\\\\a\\"
      ],
      "suffix": "a[@\n  ",
      "exampleString": "\"\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a[@\\x0a\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--\\s*error code:\\s+((?:\\w+\\s?)+)\\s+-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--error code:\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "e:\t",
      "exampleString": "<!--error\\x20code:\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae:\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "version\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "version/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "version/0._00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\\w\\s=+-/]+\\((\\{(.|\\n)*\\})\\);?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a({"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "}",
      "exampleString": "a({a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a}"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:.*\\n){1}((?:.*\\n)*)(?:.+\\n?|\\n)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "\n",
      "exampleString": "\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 600
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(/\\*\\*)(?:\\n\\* @method.*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**\n* @"
      ],
      "pumps": [
        "method\n* @method\n* @"
      ],
      "suffix": "metho",
      "exampleString": "/**\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@method\\x0a*\\x20@metho"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 733
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "@(\\w+)*\\.",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "@a..",
      "exampleString": "@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@a.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^-]+)-([A-Za-z0-9+/=]{44,88})(\\?[\\x21-\\x7E]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa?"
      ],
      "pumps": [
        "?"
      ],
      "suffix": "a?\u0000-aaaaaaaaaaaaaaaaaaaaaaaaaaa",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa???????????????????????????????????????????a?\\x00-aaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 362
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\w\\-]+)?(#([\\w\\-]+))?((.([\\w\\-]+))*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "a##",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa##"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<script(.|\\n)*\\/script>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "<scri",
      "exampleString": "<script\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<scri"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\"[^\"]*\"|[^,])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\"\"\"\"\""
      ],
      "suffix": ",\",",
      "exampleString": "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",\","
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\/\\/.*)*\\s*mixin\\(lodash\\).+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t////"
      ],
      "suffix": "mi",
      "exampleString": "\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////mi"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 161
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\*\\s*?(\\<a name\\=\\\"(.*?)\\\"\\>\\<\\/a\\>)(\\<a name\\=\\\"(.*?)\\\"\\>\\<\\/a\\>)*(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*<a name=\"\"></a><a name"
      ],
      "pumps": [
        "=\"\"></a><a name=\"\"></a><a name"
      ],
      "suffix": "=\"\"",
      "exampleString": "*<a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\"></a><a\\x20name=\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 743
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:[^.\"]+|\"[^\"]*\")+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\".\".",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\".\"."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.|\\s)+?\\/\\*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\t/",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "/\\*(?:.|[\\r\\n])*?\\*/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "a",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^:([-\\w]+)(?:\\(['\"]?(.+)['\"]?\\))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":a"
      ],
      "pumps": [
        "(a)(\")"
      ],
      "suffix": "a(",
      "exampleString": ":a(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")(a)(\")a("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "((https?:)?//([-\\w\\.]+)+(:\\d+)?(/([\\w/_\\.]*(\\?\\S+)?)?)?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "//aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "//(\\\\.|.)*?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//"
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "a\\",
      "exampleString": "//a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\d+|\\d+..\\d+)(?:,(\\d+|\\d+..\\d+))*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0,"
      ],
      "pumps": [
        "0,00,0,"
      ],
      "suffix": ",00,",
      "exampleString": "0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,0,00,0,,00,"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^foreach(\\s+\\w+=.*?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "foreach\t"
      ],
      "pumps": [
        "a=\ta=\t"
      ],
      "suffix": "$",
      "exampleString": "foreach\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09a=\\x09$"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 687
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\w+(?: \\w+)?):\\s*([^",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:\n a"
      ],
      "pumps": [
        "\n  a"
      ],
      "suffix": "a\n",
      "exampleString": "a:\\x0a\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20a\\x0a\\x20\\x20aa\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "config\\.(.+)(\\.(.+))*\\=(.+)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "config.a."
      ],
      "pumps": [
        "a."
      ],
      "suffix": "a",
      "exampleString": "config.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 630
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\(:write-string \"ReferenceError: zzz is not defined(.|\\n)*\"\\)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(:write-string \"ReferenceError: zzz is not defined"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "efin",
      "exampleString": "(:write-string\\x20\"ReferenceError:\\x20zzz\\x20is\\x20not\\x20defined\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aefin"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 169
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[^%]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n             %#+0"
      ],
      "pumps": [
        ".%\n               %00"
      ],
      "suffix": "B\n%#%\n              ",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%#+0.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00.%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20%00B\\x0a%#%\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 192
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(?:(?:!--([\\w\\W]*?)-->)|(?:!\\[CDATA\\[([\\w\\W]*?)\\]\\]>)|(?:!DOCTYPE([\\w\\W]*?)>)|(?:\\?([^\\s\\/<>]+) ?([\\w\\W]*?)[?/]>)|(?:\\/([A-Za-z][A-Za-z0-9\\-_\\:\\.]*)>)|(?:([A-Za-z][A-Za-z0-9\\-_\\:\\.]*)((?:\\s+[^\"'>]+(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>]*))*|\\/|\\s+)>))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\t"
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "DO-]-\t]]",
      "exampleString": "<a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09DO-]-\\x09]]"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 450
    },
    "indeg": {
      "num_nodes": 21,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 19,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\(\\?(.*?)(-(.*?))*?:(.*)\\)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(?-"
      ],
      "pumps": [
        "-"
      ],
      "suffix": "(",
      "exampleString": "(?-------------------------------------------("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\/\\*\\*((?:.|\\n)+?)\\*\\/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "/\n",
      "exampleString": "/**\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?: {4}|\\t)[^\\n]+\\n*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "a\ta\t"
      ],
      "suffix": "a\na",
      "exampleString": "\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n          \\text\n          \n          {"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "  \n    ",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\text\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20{\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20\\x20\\x0a\\x20\\x20\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 188
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "```(\\w+)?\\n*((.|\\n)*?)```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "`a`",
      "exampleString": "```\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a`a`"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*(?:\\,| |\\t|-->|==>|=>|->|=|;|\\|)+\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-"
      ],
      "pumps": [
        ">==>-"
      ],
      "suffix": "\t\n;>",
      "exampleString": "->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>->==>-\\x09\\x0a;>"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 170
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s*\\r?\\n\\s*){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r\n"
      ],
      "pumps": [
        "\r\n\t"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0a\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09#"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\?>([ \t]*\r?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "?>\r\n"
      ],
      "pumps": [
        "\t\r\n"
      ],
      "suffix": "ph",
      "exampleString": "?>\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0aph"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\s*style(?:type\\s*=\\s*\"([^\"]*)\"|[^>]|\\n)*>((?:.|\\r?\\n)*?)<\\s*\\/style(?:[^>]|\\n)*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<style"
      ],
      "pumps": [
        "type=\"\""
      ],
      "suffix": "s>\n</style</styl",
      "exampleString": "<styletype=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"type=\"\"s>\\x0a</style</styl"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 301
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\(.*?\\)|[^,])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "("
      ],
      "pumps": [
        ")("
      ],
      "suffix": ",",
      "exampleString": "()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()(,"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(((::)?[A-Z][^:.\\(]*)+)::?([^:.]*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "A"
      ],
      "suffix": "a(:",
      "exampleString": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa(:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "([^']|\\\\.)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "a\\\\a\\"
      ],
      "suffix": "''",
      "exampleString": "\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\\\(\\\\|\")|[^\"])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "\"\\\\\\\\"
      ],
      "suffix": "\"\"",
      "exampleString": "\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\\\\\\\\\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\n?\\t?)+ *$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\t\n\n"
      ],
      "suffix": "\n \n",
      "exampleString": "\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x20\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "`(?:\\\\?[\\s\\S])*?`",
    "exploitString": {
      "degree": 0,
      "separators": [
        "`"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\",
      "exampleString": "`\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(#.*|\"use strict\";?|\\s)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"use strict\""
      ],
      "pumps": [
        ";#\"use strict\"\"use strict\""
      ],
      "suffix": ";\"use str",
      "exampleString": "\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";#\"use\\x20strict\"\"use\\x20strict\";\"use\\x20str"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 776
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\.u-(sm-|md-|lg-)?(?:[a-z0-9][a-zA-Z0-9]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".u-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "..",
      "exampleString": ".u-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*CREATE\\s+(UNIQUE\\s+)?INDEX\\s+(?:['\"`\\[]?\\w+['\"`\\]]?\\.)?['\"`\\[]?\\w+['\"`\\]]?\\s+(ON\\s+['\"`\\[]?\\w+['\"`\\]]?)\\s*(\\((\\s*(?:\\s*['\"`\\[]?\\w+['\"`\\]]?\\s*,\\s*)*['\"`\\[]?\\w+['\"`\\]]?\\s*)\\))\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "CREATE\tINDEX\t\"a\"\tON\t\"a\"(\"a\""
      ],
      "pumps": [
        "\t,\ta"
      ],
      "suffix": "IQ,\"a",
      "exampleString": "CREATE\\x09INDEX\\x09\"a\"\\x09ON\\x09\"a\"(\"a\"\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09a\\x09,\\x09aIQ,\"a"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 282
    },
    "indeg": {
      "num_nodes": 31,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 31,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s+?\\r?\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t\r"
      ],
      "pumps": [
        "\n\t\r"
      ],
      "suffix": "\t",
      "exampleString": "\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<style.*>(.|\\n)*?<\\/style>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<style>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "<s",
      "exampleString": "<style>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<s"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\\\s)*[A-Z]+(.|\\\\s)*:",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "\\s"
      ],
      "suffix": "a",
      "exampleString": "A\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\sa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "yabrowser\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\t",
      "exampleString": "yabrowser\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<label(\\r|\\t|\\n|.)*?<\\/label>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<label"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "e",
      "exampleString": "<label\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09e"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<body[^>]*>((.|[",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<body>"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "b<></bo",
      "exampleString": "<body>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ab<></bo"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 142
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": " *?\\/\\/ COMMENT_START.*?\\n((.|\\n|\\r)*?) *\\/\\/ COMMENT_END.*?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "// COMMENT_START\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "  /",
      "exampleString": "//\\x20COMMENT_START\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20\\x20/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 258
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\(|\\)|(;(\\s*[A-Z]+(\\s*((\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))))+)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ";A"
      ],
      "pumps": [
        "[][]\t"
      ],
      "suffix": "]\t",
      "exampleString": ";A[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09[][]\\x09]\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:list|array)\\s*(?:\\(\\s*(\\S+)\\s*\\))*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "list(a"
      ],
      "pumps": [
        "\t)(a)(\t)(a"
      ],
      "suffix": "a)(",
      "exampleString": "list(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(a\\x09)(a)(\\x09)(aa)("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!-- Start_Exclude(.|\\n|\\r)*?End_Exclude -->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- Start_Exclude"
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "Exc",
      "exampleString": "<!--\\x20Start_Exclude\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0dExc"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 159
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\\"((?:\\\\.|[^\\\"])*)\\\"$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^msgid_plural \"(((\\\\.)|[^\"])*)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "msgid_plural \"\\"
      ],
      "pumps": [
        "a\\a\\"
      ],
      "suffix": "l",
      "exampleString": "msgid_plural\\x20\"\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\l"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 130
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\.\\. raw\\:\\: html\\n)((\\n {2,4})([A-Za-z0-9<>\\ =\\\"\\/])*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".. raw:: html\n\n   "
      ],
      "pumps": [
        " \n    \n   "
      ],
      "suffix": ".",
      "exampleString": "..\\x20raw::\\x20html\\x0a\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*[\\r\\n])+|([\\r\\n]\\s*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(?:(?:!--([\\w\\W]*?)-->)|(?:!\\[CDATA\\[([\\w\\W]*?)\\]\\]>)|(?:!DOCTYPE([\\w\\W]*?)>)|(?:\\?([^\\s\\/<>]+) ?([\\w\\W]*?)[?/]>)|(?:\\/([^>]+)>)|(?:([^\\s\\/<>]+)\\s*((?:[^\"'>]+(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>]*))*)>))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "T\"']-a?\t",
      "exampleString": "<aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaT\"']-a?\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 401
    },
    "indeg": {
      "num_nodes": 19,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 18,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\((\\w|\\S)+\\) (>|#)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "("
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ")",
      "exampleString": "(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "HTTP/1.1 204 No Content\\r\\nX-Header: Works\\r\\nConnection: keep-alive\\r\\n(.*?\\r\\n)*?\\r\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "HTTP/1a1 204 No Content\r\nX-Header: Works\r\nConnection: keep-alive\r\n"
      ],
      "pumps": [
        "\r\n\r\n"
      ],
      "suffix": "P",
      "exampleString": "HTTP/1a1\\x20204\\x20No\\x20Content\\x0d\\x0aX-Header:\\x20Works\\x0d\\x0aConnection:\\x20keep-alive\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0aP"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 199
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<form.*>)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<for"
      ],
      "pumps": [
        "m><form><for"
      ],
      "suffix": "o",
      "exampleString": "<form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><form><foro"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z0-9\\-+~_%]+[a-zA-Z0-9\\-+~_%.]*@([a-z]+[a-z0-9\\\\-]*\\.)+[a-z][a-z]+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a."
      ],
      "pumps": [
        "aa."
      ],
      "suffix": "a-.\\",
      "exampleString": "a@a.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.a-.\\"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "stringField(.|\\n)*abcd",
    "exploitString": {
      "degree": 0,
      "separators": [
        "stringField"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "i",
      "exampleString": "stringField\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ai"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*\\/\\*((.|\\r?\\n)*?)\\*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "\na",
      "exampleString": "/*\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\/a-scene>((.|[\\r\\n])*)<!--endgithubcorner-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</a-scene>"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "c",
      "exampleString": "</a-scene>a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ac"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\\\]),(\\s*,\\s*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a,,"
      ],
      "pumps": [
        "\t\t,"
      ],
      "suffix": "a",
      "exampleString": "a,,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(#.*?\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#"
      ],
      "pumps": [
        "\n#\n#"
      ],
      "suffix": "a",
      "exampleString": "#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<div class=\\\"trans-container\\\">\\\\s*<ul>\\\\s*(<li>.*</li>\\\\s*)*\\\\s*</ul>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<div class=\"trans-container\">\\<ul>\\<li></l"
      ],
      "pumps": [
        "i>\\<li></li>\\s<li></l"
      ],
      "suffix": "i>\\",
      "exampleString": "<div\\x20class=\"trans-container\">\\<ul>\\<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\<li></li>\\s<li></li>\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 189
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:[^\"]+|\\\\\")*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^\\s\"']+|[\"'][^\"']*[\"'])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\"\t\"\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\\x09\"\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\"([^\"]|(\\\\.))*\")",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:\\\\.|[^'])*)'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "a\\\\a\\"
      ],
      "suffix": "a\\'''",
      "exampleString": "\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "Content-Disposition:.* filename=(?:\"((?:\\\\.|[^\\\"])*)\"|([^;\\s]*))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Content-Disposition: filename=\"\\"
      ],
      "pumps": [
        "a\\a\\"
      ],
      "suffix": "en\" \t fil",
      "exampleString": "Content-Disposition:\\x20filename=\"\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\en\"\\x20\\x09\\x20fil"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 213
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "-(\\s*-\\s*)+ ",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-"
      ],
      "pumps": [
        "-\t\t"
      ],
      "suffix": "\t",
      "exampleString": "--\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09-\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r\\n|\\r|\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^-----BEGIN PGP SIGNED MESSAGE-----\\n(?:.+\\n)*\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-----BEGIN PGP SIGNED MESSAGE-----\na"
      ],
      "pumps": [
        "\na\na"
      ],
      "suffix": "G",
      "exampleString": "-----BEGIN\\x20PGP\\x20SIGNED\\x20MESSAGE-----\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaG"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "Servers:\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Servers:\na"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "v",
      "exampleString": "Servers:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aav"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(?:.|\\s)*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "a",
      "exampleString": "<\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z0-9A-Z]+[-|\\\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\\\.)+[a-zA-Z]{2,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "this\\s+version\\s+.*\\s+was\\s+comp(iled|lied)\\s+for\\s+([^\\n]*)\\s+(.|\\n)*\\s+by\\s+([^\\n\\t]*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "this\tversion\t\twas\tcomplied\tfor\t\t"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "as\u000b\n",
      "exampleString": "this\\x09version\\x09\\x09was\\x09complied\\x09for\\x09\\x09\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aas\\x0b\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 436
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 0
    }
  },
  {
    "pattern": "(nokia)[\\s_-]?([\\w-]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "nokia\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "n\t",
      "exampleString": "nokia\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaan\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:\\$\\([^\\)]*\\)|[^\"]|`\"|\"\")*[^`]\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\"\"$(`\")"
      ],
      "suffix": ")",
      "exampleString": "\"\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\")\"\"$(`\"))"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s|\\t|\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(\\s*/?\\s*)textarea([^>]*)*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</textarea"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "e",
      "exampleString": "</textareaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:'[^']*'|[^:])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "'''''"
      ],
      "suffix": ":':",
      "exampleString": "''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''':':"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*(?:// [^'].*\\s+)?)(?:// )?(('(?:[^\\\\']+|\\\\.)*') => .*[^,",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "=>\t\n,",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=>\\x09\\x0a,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([$A-Za-z_]+[$A-Za-z_0-9]*)(\\.?([$A-Za-z_]+[$A-Za-z_0-9]*))*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a..",
      "exampleString": "a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[ \\t]*#[ \\t]*cmakedefine[ \\t]+(\\w+)+[ \\t]+\\@([^ \\t@]*)\\@",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#cmakedefine\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t#cmakedefine",
      "exampleString": "#cmakedefine\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09#cmakedefine"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s|;.*?\\n/)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        ";\n/;\n/"
      ],
      "suffix": "a",
      "exampleString": "\\x09;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/;\\x0a/a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z0-9_-]{4,32})+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aaaaaaaaa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 1625
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n(\\s*\\n){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\n"
      ],
      "pumps": [
        "\n\t"
      ],
      "suffix": "\t",
      "exampleString": "\\x0a\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": ".*layout:\\s*((\\w+,?)+).*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "layout:a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$",
      "exampleString": "layout:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 623
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\s*\\n(\\s*\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[_a-z]+\\.([_a-z]+\\.?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a..",
      "exampleString": "a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(#.*\\s*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "#\t"
      ],
      "suffix": "a",
      "exampleString": "#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 650
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "imports: \\[(.|\\s)*Test4RoutingModule(.|\\s)*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "imports: ["
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "m",
      "exampleString": "imports:\\x20[\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09m"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 197
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<[a-z0-9:-]+((s+[a-z0-9:-]+=\"[^\"]+\")*)?>.*<s*/s*[^>]+>)|(<[a-z0-9:-]+((s+[a-z0-9:-]+=\"[^\"]+\")*)?s*/s*>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<asa="
      ],
      "pumps": [
        "\"a\"ssa="
      ],
      "suffix": "=\"><a\"ss",
      "exampleString": "<asa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa=\"a\"ssa==\"><a\"ss"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 216
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 18,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[A-Z](?:_?[A-Z0-9]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A_0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0__",
      "exampleString": "A_00000000000000000000000000000000000000000000000000000000000000000000000000000000000000__"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n-+ *next *part *-+\\n(?:\\n|.)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n-nextpart-\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a-nextpart-\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 748
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:version|v)\\s*((?:[0-9]+\\.?)+)(?:-.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "v0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a",
      "exampleString": "v0000000000000000000000000000000000000000000000000000000000000000000000000000000000000a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 661
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s*\\n)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<[!][-][-](.|\\s)*?[-][-]>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "!-",
      "exampleString": "<!--\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09!-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(?:\\.|(\\\\\\')|[^\\''\\n])*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "a."
      ],
      "suffix": ".\\''a",
      "exampleString": "'a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a..\\''a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\\("
      ],
      "pumps": [
        ")\\(\\("
      ],
      "suffix": "\\\"\\",
      "exampleString": "\"\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\()\\(\\(\\\"\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([a-zA-Z]+\\s*)+)(latest)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "el",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaael"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\:)(?:\\|[^|]*\\||[-\\w.]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$|:",
      "exampleString": ":aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$|:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:[^,\\(\\[]+|\\(.*?\\)|\\[.*?\\])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "[",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa["
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^java\\.util\\..*(Set|List|Queue|Collection|Deque)(<.*>)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "java.util.Set<"
      ],
      "pumps": [
        "><><"
      ],
      "suffix": "le",
      "exampleString": "java.util.Set<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><le"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 242
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "@a-a",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@a-a"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "[\\{\\[]([^,\\s]+, ?)+[^,\\s]+ ?[\\}\\]]?@\\S+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a"
      ],
      "pumps": [
        ", a"
      ],
      "suffix": "\t",
      "exampleString": "[a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\"((?:[^\"\\\\]+|\\\\.)*)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"a",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\"a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^ ].*?[^ ],)*([^ ].*?[^ ])$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        ",aa,,aa"
      ],
      "suffix": "a ",
      "exampleString": "aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aa,aa,,aaa\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "([achlmrqstvz])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?\\s*,?\\s*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-"
      ],
      "pumps": [
        "0--"
      ],
      "suffix": "-0.+",
      "exampleString": "a-0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0--0---0.+"
    },
    "pivot": {
      "num_nodes": 8,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": ":25:([\\d\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":25:."
      ],
      "pumps": [
        ".."
      ],
      "suffix": "5::",
      "exampleString": ":25:.....................................................................................5::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[^*]*\\*+(?:[^/][^*]*\\*+)*/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*"
      ],
      "pumps": [
        "a***"
      ],
      "suffix": "/a*//",
      "exampleString": "*a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***/a*//"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([a-z])+.)+[A-Z]([a-z])+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a$$",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:\\|?(?:array\\([^\\)]*\\)|[\\\\a-z0-9\\[\\]]+))*)( .*)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "|a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$",
      "exampleString": "|aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 694
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*\\.(\\w{2}|(com|net|org|edu|int|mil|gov|arpa|biz|aero|name|coop|info|pro|museum))$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "s.mus",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaas.mus"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 205
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z0-9]+_?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "__",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa__"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^#?\\w+(?:[\\-_]\\w+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#a-a"
      ],
      "pumps": [
        "_a"
      ],
      "suffix": "#-",
      "exampleString": "#a-a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a#-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "U3\\/((\\d+|\\.){5,})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "U3/....0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "/.0..",
      "exampleString": "U3/....0000000000000000000000000000000000000000000000000000000000000000000000000000000000000/.0.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\d+(?:,?\\d+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0,0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ",,",
      "exampleString": "0,0000000000000000000000000000000000000000000000000000000000000000000000000000000000000,,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<project(.|\\s)*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<project"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "<",
      "exampleString": "<project\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "[a-zA-Z]+(_*[a-zA-Z0-9]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a0_",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0_"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "<script type=\"application\\/json\">((.|\\s)*?)<\\/script>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script type=\"application/json\">"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "pl",
      "exampleString": "<script\\x20type=\"application/json\">\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09pl"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 153
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[^\\n\\r]*(\\r\\n|\\n|\\r)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\r\n"
      ],
      "suffix": "a\na",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*array\\[([\\s\\w\\.]+(?:\\s*,\\s*[\\s\\w\\.]+)*)\\]\\s+of\\s+(.+)\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "array[a,"
      ],
      "pumps": [
        "\t\t\t,"
      ],
      "suffix": "$",
      "exampleString": "array[a,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,\\x09\\x09\\x09,$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 648
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([-/:,#%.'\"\\sa-zA-Z0-9!]|\\w-\\w|'[\\s\\w]+'\\s*|\"[\\s\\w]+\"|\\([\\d,%\\.\\s]+\\))*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'a"
      ],
      "pumps": [
        "'\"a\"a\"'a"
      ],
      "suffix": "_(\t",
      "exampleString": "'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a'\"a\"a\"'a_(\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 162
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "return\\s*'((?:\\\\'|[^']+)+)'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "return'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "rn''",
      "exampleString": "return'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaarn''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "QString(?:[^\\w]+(?:.*?))+?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "QString$"
      ],
      "pumps": [
        "$$"
      ],
      "suffix": "a",
      "exampleString": "QString$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 642
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\W*\\{\\{.*?\\}\\} ?.?\\/?.?(bps)?\\W*)+(\\.stignore)?|[^a-zA-Z]+.?[^a-zA-Z]*|[kMGT]?B|Twitter|JS\\W?|DEV|https?://\\S+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{{}} a"
      ],
      "pumps": [
        "/{{}}{{}}"
      ],
      "suffix": "} bp}${\t}{.stign",
      "exampleString": "{{}}\\x20a/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}/{{}}{{}}}\\x20bp}${\\x09}{.stign"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 624
    },
    "indeg": {
      "num_nodes": 19,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 18,
      "exec_time": 1
    }
  },
  {
    "pattern": ".*(?:\\n\\-.*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n-\n-"
      ],
      "suffix": "a",
      "exampleString": "\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-\\x0a-a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 663
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*\\*(\\n|.)+?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "/\n",
      "exampleString": "/**a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a/\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "define\\(\\s*'packery\\/packery'(.|\\n)+factory\\s*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "define('packery/packery'"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "\n'pa",
      "exampleString": "define('packery/packery'a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0a'pa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 146
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!\\s*(--([^-]|[\\r\\n]|-[^-])*--\\s*)>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\t>--a",
      "exampleString": "<!--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x09>--a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^/]*/:([^/]+))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "/:aaa"
      ],
      "suffix": "/",
      "exampleString": "/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/:aaa/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":host("
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ")a(",
      "exampleString": ":host(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)a("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(0[0-9]{2,3}\\-)?([2-9][0-9]{6,7})+(\\-[0-9]{1,4})?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "2"
      ],
      "pumps": [
        "000000220000002"
      ],
      "suffix": "2222200000202",
      "exampleString
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 188
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\w+):\\/\\/)?([^\\s]?[^\\s]+\\.)*[^\\s]+\\-?[^\\s]+\\.[^\\s]{2,}(\\/.*)*\\/?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "a.aa.a"
      ],
      "suffix": "a..",
      "exampleString": "aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.."
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 773
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 1
    }
  },
  {
    "pattern": "(#(.*?)#)+?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#"
      ],
      "pumps": [
        "####"
      ],
      "suffix": "a",
      "exampleString": "#########################################################################################################################################################################a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "-+BEGIN\\s+.*CERTIFICATE[^-]*-+(?:\\s|\\r|\\n)+([a-z0-9+/=\\r\\n]+)-+END\\s+.*CERTIFICATE[^-]*-+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-BEGIN\tCERTIFICATE-"
      ],
      "pumps": [
        "\r\r"
      ],
      "suffix": "-END",
      "exampleString": "-BEGIN\\x09CERTIFICATE-\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d-END"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 271
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(:?#\\d+\\W+)(:?0x(?:(?:\\d|[abcdefABCDEF]){0,2})+)(:? +in +)(:?.+?)(:? +at +)(:?.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":#0$:0x"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0 in ",
      "exampleString": ":#0$:0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x20in\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 649
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 17,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\d+,?\\s?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ",\t\t",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000,\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*)\\n\\n((?:.*\\t.*\\t.*\\n)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\n\t"
      ],
      "pumps": [
        "\t\n\t\t\n\t"
      ],
      "suffix": "a",
      "exampleString": "\\x0a\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": ".*?<H4>(<a.*a>)*[\\d\\.\\s]*(.*?)</H4>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<H4><a"
      ],
      "pumps": [
        "a><aa><a"
      ],
      "suffix": "<",
      "exampleString": "<H4><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><a<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "</?[a-z]+( *[a-z_-]+=[\"'].*?[\"'])* */?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</aa="
      ],
      "pumps": [
        "\"\"a=\"\"a="
      ],
      "suffix": "/",
      "exampleString": "</aa=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=\"\"a=/"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(@(.+))*\\s+(.+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@"
      ],
      "pumps": [
        "a@a@"
      ],
      "suffix": "a",
      "exampleString": "@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 727
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z_]+[0-9]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^---\\n(.|\\n)*\\n---",
    "exploitString": {
      "degree": 0,
      "separators": [
        "---\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "-a",
      "exampleString": "---\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a-a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\/\\{.*?\\})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "{}/{}/"
      ],
      "suffix": "}/",
      "exampleString": "/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/{}/}/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z]+[a-zA-Z0-9_]*(::[a-zA-Z]+[a-zA-Z0-9_]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "::aa"
      ],
      "suffix": "a:a",
      "exampleString": "a::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aaa:a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "Registrant's address:\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Registrant's address:\na\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "ess",
      "exampleString": "Registrant's\\x20address:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aess"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\*([^*]|[\\r\\n]|(\\*+([^*\\/]|[\\r\\n])))*\\*+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*"
      ],
      "pumps": [
        "*\n"
      ],
      "suffix": "**/",
      "exampleString": "**\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a**/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-a\\\\a"
      ],
      "pumps": [
        "a\\\\a"
      ],
      "suffix": "\\a\\",
      "exampleString": "-a\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\a\\a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:\\|(?:@?[a-z0-9_]+(?::.*)*))+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "|@a"
      ],
      "pumps": [
        ":|@a"
      ],
      "suffix": "a",
      "exampleString": "|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@a:|@aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 688
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^>]|<.*?>)*>\\s*\\(",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<"
      ],
      "pumps": [
        "><><"
      ],
      "suffix": "(>",
      "exampleString": "<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><(>"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "class ActiveSupport::TestCase\\n((\\n|\\s*.*\\n)*)end",
    "exploitString": {
      "degree": 0,
      "separators": [
        "class ActiveSupport::TestCase\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": " ",
      "exampleString": "class\\x20ActiveSupport::TestCase\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 142
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<style(?:\\s+[^>]*)?>(?:.|\\r|\\n)*?<\\/style>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<style>"
      ],
      "pumps": [
        "\n\r"
      ],
      "suffix": "</\n<></st",
      "exampleString": "<style>\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d</\\x0a<></st"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\\\"'](?:[^\\\"'\\\\]*(?:\\\\.)?)*[\\\"']",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\"\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*\\\\?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\\aa"
      ],
      "suffix": "\\\\",
      "exampleString": "a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\s*Dataset\\s*\\{\\s*((?:[^;]+;\\s*)*)\\s*\\}\\s*[\\w.]+\\s*;\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Dataset{a;"
      ],
      "pumps": [
        "\ta;"
      ],
      "suffix": "as",
      "exampleString": "Dataset{a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;\\x09a;as"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 151
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*a:"
      ],
      "pumps": [
        "'\\''"
      ],
      "suffix": "\t;)\\;\\",
      "exampleString": "*a:'\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\''\\x09;)\\;\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 179
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 1
    }
  },
  {
    "pattern": "<!--(.|\\n)*?-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "!-",
      "exampleString": "<!--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a!-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^UPSTREAM: ([\\w/-]+): (\\d+)+:(.+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "UPSTREAM: a: 0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a",
      "exampleString": "UPSTREAM:\\x20a:\\x200000000000000000000000000000000000000000000000000000000000000000000000000000000000000a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 671
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "@import\\s+([^;]+)*;",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@import\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "t",
      "exampleString": "@import\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaat"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "'[^'\\n\\r\\\\]*(?:\\\\(?:\\r\\n?|[\\S\\s])[^'\\n\\r\\\\]*)*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'\\"
      ],
      "pumps": [
        "\r\\"
      ],
      "suffix": "\\\n\n",
      "exampleString": "'\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\x0d\\\\\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n|\\r|\\s)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "lakukan( *|\\n*)*?\\{",
    "exploitString": {
      "degree": 0,
      "separators": [
        "lakukan"
      ],
      "pumps": [
        "  "
      ],
      "suffix": "an{\n",
      "exampleString": "lakukan\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20an{\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^\\(\\s\\/]*)\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "function"
      ],
      "pumps": [
        "/**/\t/**/\t"
      ],
      "suffix": "n*\t*",
      "exampleString": "function/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09n*\\x09*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 160
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\/\\*-{5}StaticCompressor-{5}\\n((.+\\n)+?)-{10}\\*\\/\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*-----StaticCompressor-----\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "essor----",
      "exampleString": "/*-----StaticCompressor-----\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aessor----"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 170
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([^\\w(-] ?)+|([^\\w).!?] ?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$ "
      ],
      "pumps": [
        "$ $ "
      ],
      "suffix": " (!",
      "exampleString": "$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20$\\x20\\x20(!"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:[A-Z]\\w*[a-z]\\w+\\:\\:)*[A-Z]\\w*[a-z]\\w+) \\((.*)\\)(?: on line #(\\d+) of (.+))?\\:",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Aaa"
      ],
      "pumps": [
        "::Aaaaa"
      ],
      "suffix": "f",
      "exampleString": "Aaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaa::Aaaaaf"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 200
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:    [^\\n]+\\n*)+(?:\\n *)+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "  "
      ],
      "pumps": [
        "  a    a  "
      ],
      "suffix": " a \n  \n ",
      "exampleString": "\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20a\\x20\\x0a\\x20\\x20\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "/(\\\\[\\\\/]|[^/])*/[egimosx]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": "/\\",
      "exampleString": "/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\/\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z0-9.+#-]+)((\\s+\\w+(=((\\w|[0-9_-])+|\"([0-9]+\\s)*[0-9]+\"))?)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\ta=\"0"
      ],
      "pumps": [
        "\"\ta=_\ta=\"0"
      ],
      "suffix": "\"\"",
      "exampleString": "a\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\\x09a=_\\x09a=\"0\"\""
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "<text>((.|",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<text>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "<te",
      "exampleString": "<text>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<te"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(([-+]?[,.]\\d+)\\s*(\\w+))(\\s*,?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+,0a"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "++",
      "exampleString": "+,0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09++"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s*[,]\\s*){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        ",,"
      ],
      "pumps": [
        "\t,"
      ],
      "suffix": "#",
      "exampleString": ",,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.+/)*(\\d+-\\d+-\\d+)-(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "/a"
      ],
      "suffix": "/0",
      "exampleString": "a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/0"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 621
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\<\\?php(?:\\r?\\n)+?(\\/\\*\\*(?:.|\\r?\\n)+?\\*\\/(\\r?\\n)+?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<?php\r\n/**\r"
      ],
      "pumps": [
        "\n\r"
      ],
      "suffix": "\r",
      "exampleString": "<?php\\x0d\\x0a/**\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0d"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[0-9a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?(\\.[0-9a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.a"
      ],
      "pumps": [
        "a.aa"
      ],
      "suffix": "a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-",
      "exampleString": "a.aa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 406
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\u0107\u0103\u0100](((.*)*)*x)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u0100"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\u0100",
      "exampleString": "\\x{100}aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x{100}"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "playstation portable(?:\\D+([\\d.]+))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "playstation portablea"
      ],
      "pumps": [
        ".."
      ],
      "suffix": "st",
      "exampleString": "playstation\\x20portablea....................................................................................st"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "Technical:\\s((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Technical:\ta\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "a",
      "exampleString": "Technical:\\x09a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((https?|ftp|file):\\/\\/|((www|ftp)\\.)|(\\/|.*\\/)*)[a-z0-9-]+((\\.|\\/)[a-z0-9-]+)+([/?].*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "//a"
      ],
      "suffix": "/",
      "exampleString": "//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a//a/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 703
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "Hardware\\n  cisco (([^(\\n]+|\\(\\d+ Slot\\))+\\w+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Hardware\n  cisco a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " (",
      "exampleString": "Hardware\\x0a\\x20\\x20cisco\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20("
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 203
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "<label (.|",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<label "
      ],
      "pumps": [
        "\n\t"
      ],
      "suffix": "</la",
      "exampleString": "<label\\x20\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09</la"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "([\\s]|[^\\\\]|\\\\\\\\)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\t\\\t",
      "exampleString": "a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<style(.*)>((\\n|.)*?)<\\/style>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<style>"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "<s",
      "exampleString": "<style>a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a<s"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\<Slider(?:.|\\n)*?\\>((.|\\n)*?)\\<\\/Slider\\>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<Slider"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "<",
      "exampleString": "<Slider\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 131
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\{\\s*((\\\".*\\\"|\\'.*\\'|\\S*)\\s*,\\s*)*(\\\".*\\\"|\\'.*\\'|\\S*)\\s*\\}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{"
      ],
      "pumps": [
        ",a"
      ],
      "suffix": "\"}\t",
      "exampleString": "{,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a\"}\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 253
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[([^\\s~|^$*=]+)(?:([~|^$*]?=)\"((?:\\\\\"|.)*?)\")?\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a$=\""
      ],
      "pumps": [
        "\\\"\\\""
      ],
      "suffix": "]\\a$a\\\"",
      "exampleString": "[a$=\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"]\\a$a\\\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "'''((?:(?:'|'')?(?:[^'\\\\])+)*)'''",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'''a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a''''",
      "exampleString": "'''aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa''''"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[((\\(.*?\\)|[0-9\\.\\-\\s]*)*)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\t]a",
      "exampleString": "[\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09]a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "s<(\\\\\\\\|\\\\>|[^>])*>\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "s<"
      ],
      "pumps": [
        "a\\\\"
      ],
      "suffix": "\\>>>",
      "exampleString": "s<a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\\\>>>"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\{.*(\\,.*)+\\}\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{"
      ],
      "pumps": [
        ",,"
      ],
      "suffix": "},",
      "exampleString": "{,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,},"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": ".+:(([^=]+=.[^=;]*;?)+|\\/[^;,=]+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:a=a"
      ],
      "pumps": [
        "aa=a"
      ],
      "suffix": "==:;a:",
      "exampleString": "a:a=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=a==:;a:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 140
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n\\s*\\n?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\t|\\s|\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ucbrowser\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\t",
      "exampleString": "ucbrowser\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\t*error\\((.*\\n)*?.*\\);\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "error("
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\te)",
      "exampleString": "error(\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x09e)"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "s/(\\\\\\\\|\\\\/|[^/])*/(\\\\\\\\|\\\\/|[^/])*/[msixpodualngc]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "s/"
      ],
      "pumps": [
        "a\\\\"
      ],
      "suffix": "/\\a/\\a//",
      "exampleString": "s/a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\/\\a/\\a//"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 130
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^WEBVTT.*\\n(?:.*: .*\\n)*\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "WEBVTT\n: "
      ],
      "pumps": [
        "\n: "
      ],
      "suffix": "EB",
      "exampleString": "WEBVTT\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20\\x0a:\\x20EB"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[_a-z0-9-]+)(\\.[_a-z0-9-]+)*@([a-z0-9-]+)(\\.[a-zA-Z0-9\\-\\.]+)*(\\.[a-z]{2,4})$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a"
      ],
      "pumps": [
        ".a.a"
      ],
      "suffix": "a-.a-_",
      "exampleString": "a@a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.aa-.a-_"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^<([a-z]+)([^<]+)*(?:>(.*)<\\/\u0001>|\\s+\\/>)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "/>\t</\u0001",
      "exampleString": "<aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/>\\x09</\\x01"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^'(?:\\\\'|.)*?'$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\'"
      ],
      "suffix": "\\a",
      "exampleString": "'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "([^\\[]+)((\\[.*\\])*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "[][]"
      ],
      "suffix": "][",
      "exampleString": "a[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]]["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(?:\\d+|\\d+\\:\\d+)(?:\\,\\d+|\\d+\\:\\d+)*|\\d+:\\*|\\*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "00:"
      ],
      "pumps": [
        "000:"
      ],
      "suffix": "0:**",
      "exampleString": "00:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:000:0:**"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 172
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "m?/(\\\\\\\\|\\\\/|[^/\\n])*/[msixpodualngc]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "m/"
      ],
      "pumps": [
        "a\\\\"
      ],
      "suffix": "m$",
      "exampleString": "m/a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\m$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:;)/\\*[^*]*\\*+([^/][^*]*\\*+)*/",
    "exploitString": {
      "degree": 0,
      "separators": [
        ";/**a"
      ],
      "pumps": [
        "a**a"
      ],
      "suffix": ";/*",
      "exampleString": ";/**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**aa**a;/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(\\\\.|\\\\\\n|.)*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\\"
      ],
      "pumps": [
        "\n\\\n\\"
      ],
      "suffix": "\\",
      "exampleString": "\"\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "--+(\\n|[^\\-])*john cowan\\n(\\n|[^\\-])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "--"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "-\nj-",
      "exampleString": "--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a-\\x0aj-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 155
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\x1b\\[40m\\s*\\x1b\\[m\\s*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u001b[4"
      ],
      "pumps": [
        "0m\u001b[m\t\u001b[4"
      ],
      "suffix": "\t\u001b[",
      "exampleString": "\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m\\x09\\x1b[4\\x09\\x1b["
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:['\"](?:\\\\.|[^'\"])*['\"]|[^'\" ])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\"\\\"\"\\\"\""
      ],
      "suffix": " \\",
      "exampleString": "ax20\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.|(?:\\r?\\n))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\r\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 661
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(lg)[-e;\\s\\/]+(\\w+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "lg\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "lga\t",
      "exampleString": "lg\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaalga\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\\\\\\"([^\\\\]+|\\\\[^\\\"])*\\\\\\\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\\\"\"",
      "exampleString": "\\\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\\\"\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?: \"((?:\"\"|[^\"]+)+)\" | ([^\"]+) ) \\. (?: \"((?:\"\"|[^\"]+)+)\" | ([^\"]+) )$",
    "exploitString": {
      "degree": 0,
      "separators": [
        " \"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "  \"  .  a",
      "exampleString": "\\x20\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20\\x20\"\\x20\\x20.\\x20\\x20a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:'((?:[^\\']|\\.)*)'|\"((?:[^\\\"]|\\.)*)\"|;)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "a."
      ],
      "suffix": "\"'.\".",
      "exampleString": "\"a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.\"'.\"."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n|\\s)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^env",
    "exploitString": {
      "degree": 0,
      "separators": [
        "env\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "env\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s|[^A-Za-z0-9\\-])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "-",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "[^\\w$\\.]([A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\])*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u0000a[\""
      ],
      "pumps": [
        "a\"][\""
      ],
      "suffix": "\"",
      "exampleString": "\\x00a[\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"a\"][\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 158
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\d+(\\.\\d+)+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0."
      ],
      "pumps": [
        "00."
      ],
      "suffix": "..",
      "exampleString": "0.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00..."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\"\\r\\n?|\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\r\n\""
      ],
      "suffix": "\r\n\r",
      "exampleString": "\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\"\\x0d\\x0a\\x0d"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[\\r\\n]+[ \\t]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?: *\\/\\/.*\\s*)* *lodash\\.assign *= *.+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "/////"
      ],
      "suffix": "h.as",
      "exampleString": "///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////h.as"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 192
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\r|\\n|\\s|\\t)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "# yamllint disable(( rule:\\S+)*)\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "# yamllint disable r"
      ],
      "pumps": [
        "ule:a rule:a r"
      ],
      "suffix": "n\t:",
      "exampleString": "#\\x20yamllint\\x20disable\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rn\\x09:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 137
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "name-60(?:.|\\n|\\r)*bg-warning(?:.|\\n|\\r)*text-warning(?:.|\\n|\\r)*60\\.00(?:.|\\n|\\r)*<th class=\"text-center\">4<\\/th><\\/tr>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "name-60"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "ntex",
      "exampleString": "name-60\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0antex"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 812
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "([A-Z]{3,8})\\s(?:(http\\w*):\\/\\/)*(?:(\\w*):*(\\d{2,5})*)(\\/{0,1}.*)\\sHTTP",
    "exploitString": {
      "degree": 0,
      "separators": [
        "AAA\t0"
      ],
      "pumps": [
        "00000"
      ],
      "suffix": "T://",
      "exampleString": "AAA\\x090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000T://"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 227
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\.([a-zA-Z_$]([\\w:$*]*-+[\\w:$*]*)+|[1-9][0-9]*|0)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".a-"
      ],
      "pumps": [
        "--"
      ],
      "suffix": "..",
      "exampleString": ".a-------------------------------------------------------------------------------------.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(mot)[\\s-]?(\\w+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "mot\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "moa\t",
      "exampleString": "mot\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaamoa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[ ]{0,3}\\+\\-\\-+\\s*(\\{([^{}]*?|\".*?\"|'.*?')*\\})?\\s*\\-*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+--{"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " +-",
      "exampleString": "+--{aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20+-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:\\\\.|[^.#\\s\\[<>])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "\t\t",
      "exampleString": "a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:::){0,1}(?:[a-z_](?:[\\w-]*[\\w])?))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aaa"
      ],
      "suffix": ":A",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:A"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "<!-- Authors:\\n((?:\\* .*\\n)*)-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- Authors:\n*"
      ],
      "pumps": [
        " \n* \n*"
      ],
      "suffix": "!-",
      "exampleString": "<!--\\x20Authors:\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*\\x20\\x0a*!-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[^ ]*=(?:\"[^\"]*\"|'[^']*')\\s*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "=''\t"
      ],
      "suffix": "=\"'a= \" ",
      "exampleString": "=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=''\\x09=\"'a=\\x20\"\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 120
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\[((?:[^\\[\\]\\\\]|\\\\\\[|\\\\\\]|\\\\.)*?)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        "\\["
      ],
      "suffix": "\\a[",
      "exampleString": "[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\a["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\d+[\\.-](?:\\d+[\\.-]?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0-0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0--",
      "exampleString": "0-00000000000000000000000000000000000000000000000000000000000000000000000000000000000000--"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "[A-Za-z]+[0-9A-Za-z]*(\\\\.[A-Za-z]+[0-9A-Za-z]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\\aaa"
      ],
      "suffix": "\\$0",
      "exampleString": "a\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\$0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z\\\\d]+(\\\\.[a-zA-Z\\\\d]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\\"
      ],
      "pumps": [
        "aa\\\\aa\\"
      ],
      "suffix": "a\\$",
      "exampleString": "a\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\aa\\\\aa\\a\\$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "#\\*\\*([\\w_]+)(,([\\w,]+))*\\*\\*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#**a,a"
      ],
      "pumps": [
        ",a"
      ],
      "suffix": "a",
      "exampleString": "#**a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^\\s\"]|\"(?:\\.|[^\"])*\")+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\".\""
      ],
      "suffix": "\t\"\t",
      "exampleString": "a\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\".\"\\x09\"\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(?:\\w+:)?svg(?:( alt=\".*?\")|( class=\".*?\")|( title=\".*?\")|(?:.*?))+>.*</(?:\\w+:)?svg>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<svg"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a",
      "exampleString": "<svgaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 207
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "<i>((.|\\n|\\r\\n)*?)<\\/i>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<i>"
      ],
      "pumps": [
        "\n\r\n"
      ],
      "suffix": "</i",
      "exampleString": "<i>\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a</i"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:(?:.*)/)*([0-9A-Z][0-9a-zA-Z_]*))Controller\\..+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "/a"
      ],
      "suffix": "/0Contr",
      "exampleString": "/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/0Contr"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 746
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\[(.*)\\]((\\.[a-zA-Z]{1}.*?\\))+))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[].a)"
      ],
      "pumps": [
        ".a).a)"
      ],
      "suffix": "]",
      "exampleString": "[].a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a).a)]"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"\"\"(?:(?:\"|\"\")?(?:[^\"\\\\]|#))*\"\"\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\"\""
      ],
      "pumps": [
        "#\""
      ],
      "suffix": "a\"\"\"\"",
      "exampleString": "\"\"\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"#\"a\"\"\"\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "[a-zA-Z0-9\\-+~_%]+[a-zA-Z0-9\\-+~_%.]*@([a-z0-9]+[a-z0-9\\-]*\\.)+[a-z][a-z]+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a."
      ],
      "pumps": [
        "aa."
      ],
      "suffix": "a0.a0-",
      "exampleString": "a@a.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.a0.a0-"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(ipad)(?:.*os\\s*([\\w]+)*\\slike\\smac|;\\sopera)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ipadosa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\tl",
      "exampleString": "ipadosaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09l"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[\\d.\\s]*The (?:\\w+, )*(?:(?:\\w+ )?and )*\\w+ elements?\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "The a"
      ],
      "pumps": [
        " and and and and a"
      ],
      "suffix": "e",
      "exampleString": "The\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20a\\x20and\\x20and\\x20and\\x20and\\x20ae"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 182
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z]+(_*[a-zA-Z0-9]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a0_",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0_"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n(>[^\\n]*\\n?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n>"
      ],
      "pumps": [
        ">"
      ],
      "suffix": ">\n\n",
      "exampleString": "\\x0a>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\s+([\\w.-]+)\\s+\\((.+)\\)\\n){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\ta\t(a)\n\ta\t("
      ],
      "pumps": [
        "a)\n\ta\t(a)\n\ta\t("
      ],
      "suffix": "a",
      "exampleString": "\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a)\\x0a\\x09a\\x09(a"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^---\\n((?:.*\\n)*)---",
    "exploitString": {
      "degree": 0,
      "separators": [
        "---\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "-a",
      "exampleString": "---\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a-a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s<((\\/[^>]+?){2,})>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t</a/"
      ],
      "pumps": [
        "a/a/"
      ],
      "suffix": "<a>>",
      "exampleString": "\\x09</a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/<a>>"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z]{1}([_]{0,1}[a-zA-Z0-9]{1,})+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "aa_",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^UID:.*\\r\\n(?: .*\\r\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "UID:\r\n "
      ],
      "pumps": [
        "\r\n \r\n "
      ],
      "suffix": "U\r",
      "exampleString": "UID:\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20\\x0d\\x0a\\x20U\\x0d"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(https?://([-\\w\\.]+)+(:\\d+)?(/([\\S+]*(\\?\\S+)?)?)?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*-\\w+\\s+[\\d\\.]+\\s*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-a"
      ],
      "pumps": [
        "\t.\t-a"
      ],
      "suffix": "-a.",
      "exampleString": "-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a\\x09.\\x09-a-a."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "DESCRIPTION:.*?\\n(?:\\s+.*?\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "DESCRIPTION:\n"
      ],
      "pumps": [
        "\t\n\t\n"
      ],
      "suffix": "ESCa",
      "exampleString": "DESCRIPTION:\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0aESCa"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 151
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n.*object-model(.|\\n)*object-model.*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\nobject-model"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\nobject-mod",
      "exampleString": "\\x0aobject-model\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aobject-mod"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 781
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\s*[\\n]+)+?([ \\t]*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\t\u000b ",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x09\\x0b\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^# yamllint disable( rule:\\S+)*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "# yamllint disable r"
      ],
      "pumps": [
        "ule:a rule:a r"
      ],
      "suffix": "n\t:",
      "exampleString": "#\\x20yamllint\\x20disable\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rn\\x09:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(\\@.*\\@)*\\s*\\$\\(mkinstalldirs\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "@@@@@"
      ],
      "suffix": "n",
      "exampleString": "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@n"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:isa = PBXProject;(.|[\r",
    "exploitString": {
      "degree": 0,
      "separators": [
        "isa = PBXProject;"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "us",
      "exampleString": "isa\\x20=\\x20PBXProject;\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aus"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 391
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\\/\\s-]?([\\w\\.-]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "linpus\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "b\t",
      "exampleString": "linpus\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 178
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^crop-([\\d]{1,3})-([\\d]{1,3})*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "crop-0-00"
      ],
      "pumps": [
        "00000"
      ],
      "suffix": "p-00",
      "exampleString": "crop-0-00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000p-00"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(specify|it)\\s+('(.*)'|\"(.*)\")+\\s*(\\{|do)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "it\t'"
      ],
      "pumps": [
        "'\"\"\"\"'"
      ],
      "suffix": "\t",
      "exampleString": "it\\x09''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"'\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "([[:cntrl:]]|[[:space:]])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "::"
      ],
      "suffix": "#",
      "exampleString": "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "function ([^( ]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "function a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "f ",
      "exampleString": "function\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaf\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d+(?:\\.\\d+)?)\\s*([^\\d]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0\t0",
      "exampleString": "0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0\\x090"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*((.|\\n)*)\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "/\n",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z_][a-zA-Z0-9_]*|\"[^\"]*\"|'[^']*'|[0-9]+|\\*|\\?|\\||&|\\(|\\)|\\{|\\}|::|:|,|=>|->|\\.\\.\\.|\\s+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "$",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 244
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "([ \\t,]+|and)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\tann",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09ann"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^'(\\\\[\\\\']|.+)+'\\s*.*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\\",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 624
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[([0-9]*(\\.[0-9]+)?)?(\\s*,\\s*[0-9]*(\\.[0-9]+)?)*\\]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[,"
      ],
      "pumps": [
        "\t\t,"
      ],
      "suffix": "[0",
      "exampleString": "[,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,[0"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "gpgsig -----BEGIN PGP SIGNATURE-----[\\n\\r](.*[\\n\\r])*? -----END PGP SIGNATURE-----[\\n\\r]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "gpgsig -----BEGIN PGP SIGNATURE-----\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "N PG",
      "exampleString": "gpgsig\\x20-----BEGIN\\x20PGP\\x20SIGNATURE-----\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aN\\x20PG"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 214
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:\\s*\\/\\/.*)*\\s*mixin\\(lodash\\).+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "////"
      ],
      "suffix": "//mixin",
      "exampleString": "//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////mixin"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 739
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<meta name=\"title\"([^>]*)*>\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<meta name=\"title\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "tl",
      "exampleString": "<meta\\x20name=\"title\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaatl"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "(http|https|socket)://([0-9a-zA-Z]+\\.?)+:\\d+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "http://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0a",
      "exampleString": "http://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": ":\\[([^:]+:[^:]+)+\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":[a"
      ],
      "pumps": [
        ":aaa"
      ],
      "suffix": "]a::",
      "exampleString": ":[a:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa]a::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\{+((?:.|\\n)*?)\\}+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "{",
      "exampleString": "{\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a{"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\r\\n?|\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\033\\[(\\d+)*m",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u001b[0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\u001b[[",
      "exampleString": "\\x1b[0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x1b[["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": ".*(((y{1,4}|m{1,5}|d{1,4}|h{1,2}|s{1,2}).*)+).*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "s"
      ],
      "pumps": [
        "ssss"
      ],
      "suffix": "a",
      "exampleString": "sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssa"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 1423
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":a:  +\r"
      ],
      "pumps": [
        "\n +\r\n +"
      ],
      "suffix": "a",
      "exampleString": ":a:\\x20\\x20+\\x0d\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+\\x0a\\x20+\\x0d\\x0a\\x20+a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 724
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "Views.Foo = Backbone.View.extend\\(\\{(.|\\n)*public\\/scripts\\/templates\\/foo.ejs",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ViewsaFoo = BackboneaViewaextend({"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "ie",
      "exampleString": "ViewsaFoo\\x20=\\x20BackboneaViewaextend({a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aie"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 259
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(?:\\s|\\n)+'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "'\n",
      "exampleString": "'\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a'\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\n *\\/\\/.*\\s*)* *lodash\\.forOwn *= *.+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n//"
      ],
      "pumps": [
        "\n//\n //\t"
      ],
      "suffix": " /",
      "exampleString": "\\x0a//\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x20/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 191
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d+.)*\\d+:\\d+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0a:",
      "exampleString": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000a:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(@element.*?\\{([^}]*?\\{[^}]*?\\}[^}]*?)*\\}).*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@element{{"
      ],
      "pumps": [
        "a}{a{"
      ],
      "suffix": "}",
      "exampleString": "@element{{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{a}{a{}"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 750
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*(module)\\s+((?:(?:::)?[A-Z]\\w*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "module\t:"
      ],
      "pumps": [
        ":AA:"
      ],
      "suffix": ":a",
      "exampleString": "module\\x09::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::AA::a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\u0100(((.*)*)*x)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u0100"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\u0100",
      "exampleString": "\\x{100}aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x{100}"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "< *(\\w+) *((?: *:?\\w+ *= *\\\"[^\\\"]*\\\" *)*) *(/)? *>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a:a=\"\""
      ],
      "pumps": [
        " a=\"\""
      ],
      "suffix": " a>\"/",
      "exampleString": "<a:a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a=\"\"\\x20a>\"/"
    },
    "pivot": {
      "num_nodes": 5,
      "exec_time": 221
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\\\(.|\\n))|([^\"\\\\]))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "\n\\"
      ],
      "suffix": "\n\"",
      "exampleString": "\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([0-9a-z]+[0-9a-z\\-]+\\.)+[0-9a-z]+[0-9a-z\\-]+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa.a"
      ],
      "suffix": "a..",
      "exampleString": "aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aa.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "#\\s*([a-zA-Z0-9_]+)\\s*\\{(\\s*(((\"([^\"\\\\]|\\\\\")*\")|\\[\\s*((\"([^\"\\\\]|\\\\\")*\"\\s*),?)*\\])\\s*,?\\s*)*\\s*)\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#a{"
      ],
      "pumps": [
        "[]\t"
      ],
      "suffix": "#",
      "exampleString": "#a{[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09[]\\x09#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 188
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 15,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^';]*|('[^']*')*)+;",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "#EXT-X-STREAM-INF:(\\w+=\\w+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#EXT-X-STREAM-INF:a="
      ],
      "pumps": [
        "aaa="
      ],
      "suffix": "-I",
      "exampleString": "#EXT-X-STREAM-INF:a=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=-I"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 150
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n(([^|\\n]+ *\\| *)+([^|\\n]+\\n))((:?\\-+:?\\|)+(:?\\-+:?)*\\n)((([^|\\n]+ *\\| *)+([^|\\n]+)\\n)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\na|a\n:-:|:-"
      ],
      "pumps": [
        "--"
      ],
      "suffix": "-|\n",
      "exampleString": "\\x0aa|a\\x0a:-:|:--------------------------------------------------------------------------------------|\\x0a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 19,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 19,
      "exec_time": 0
    }
  },
  {
    "pattern": "QChar(?:[^\\w]+(?:.*?))+?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "QChar$"
      ],
      "pumps": [
        "$$"
      ],
      "suffix": "a",
      "exampleString": "QChar$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 677
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([ \\t\\r]*(#.*)?\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "#\n\t\n\t"
      ],
      "suffix": "\t",
      "exampleString": "#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09#\\x0a\\x09\\x0a\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\'((\\\\.|[^\\'])*)\\'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w|.)+@\\w+(\\.\\w+){1,2}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "$@a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$@a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 151
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<('[^']*'|'[^']*'|[^''>])*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<"
      ],
      "pumps": [
        "''"
      ],
      "suffix": "'>a",
      "exampleString": "<'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''>a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\*\\s*(\\w+\\s*)+\\s*\\(at.*coffee.coffee:[0-9]+\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "e:0coffee",
      "exampleString": "*aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae:0coffee"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 145
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(__[a-zA-Z0-9-_]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "__a"
      ],
      "pumps": [
        "__a"
      ],
      "suffix": "#",
      "exampleString": "__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a__a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*\\*((.*|\\s*)*?)\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "/**",
      "exampleString": "/**aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/**"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.+:)?\\/(([^=]+=.[^=;]*;?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a="
      ],
      "pumps": [
        "aaa="
      ],
      "suffix": "===:",
      "exampleString": "/a=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa=aaa====:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(\\@.*\\@)*\\s*(-?rm.*) \\S*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "@@@@@"
      ],
      "suffix": "-@\t-@",
      "exampleString": "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@\\x09-@"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 172
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(https?:\\/\\/|www\\.)([-\\w\\.]+)+(:\\d+)?(\\/([\\w\\/_\\.]*(\\?\\S+)?)?)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "www.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "www.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 131
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "s*\\\"((?:\\\\.|.)*?)\\\"|\\s*(.+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "\\",
      "exampleString": "\"\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 654
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:\\s*\\/\\*(?:.*)\\*\\/)*\\s*(\\w+)\\(\\{",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t/**//**/"
      ],
      "suffix": "({*",
      "exampleString": "\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/\\x09/**//**/({*"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[?(?:[a-zA-Z0-9-:\\]_]+\\.?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "[",
      "exampleString": "[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa["
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "jika( *|\\n*)*?\\((.*?)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "jika"
      ],
      "pumps": [
        "  "
      ],
      "suffix": "(",
      "exampleString": "jika\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20("
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(((\\w|_)+(\\.|::))+)((\\w|_)+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "_"
      ],
      "pumps": [
        "::_"
      ],
      "suffix": "_:.",
      "exampleString": "_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::_::__:."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 137
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*(\"(\\\\\\\\|[^\\\"])*\"|'(\\\\\\\\|[^\\'])*'|[;}{:])\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\\"
      ],
      "pumps": [
        "\\\\\\\\"
      ],
      "suffix": "\"\\'\\\"\\",
      "exampleString": "\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\'\\\"\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 156
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:\\r?\\n|\\r)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([\\s\\t]*)\\/\\/\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/\\s*endbower)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//bower"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "\n///",
      "exampleString": "//bower\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0a///"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 181
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "imports: \\[(.|\\s)*Test4Module(.|\\s)*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "imports: ["
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "mpo",
      "exampleString": "imports:\\x20[\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09mpo"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[[:blank:]]*(\\\\r?\\\\n)[[:blank:]]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\r"
      ],
      "pumps": [
        "\\na\\"
      ],
      "suffix": "\\",
      "exampleString": "\\r\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\na\\\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*!START_DEBUG(?:.|[\\n\\r])*?END_DEBUG\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*!START_DEBUG"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "E",
      "exampleString": "/*!START_DEBUG\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aE"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\\\s|\\\\+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "\\\\"
      ],
      "suffix": "ss",
      "exampleString": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ss"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<style>(\\n|.)*?(<\\/style>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<style>"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "<styl",
      "exampleString": "<style>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<styl"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\\/\\/][\\/\\*]\\s*NOTE:\\s*(?:\\(([^:]*)\\))*\\s*:?\\s*(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*NOTE:("
      ],
      "pumps": [
        ")()("
      ],
      "suffix": "a",
      "exampleString": "/*NOTE:()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()(a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 798
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{\\{tr\\}\\}((.|\\n)*?)\\{\\{\\/tr\\}\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{{tr}}"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "tr}",
      "exampleString": "{{tr}}\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0atr}"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(.|\\n)*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\n",
      "exampleString": "<\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*?)\\s*<-\\s*(.*?)(?:\\s*\\[upto\\s+(.*)\\])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<-[upto\t"
      ],
      "pumps": [
        "\t][upto\t"
      ],
      "suffix": "][up",
      "exampleString": "<-[upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09\\x09][upto\\x09][up"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 952
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^# VAGRANT-BEGIN(.|\\s)*# VAGRANT-END\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "# VAGRANT-BEGIN"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "-E# VAG",
      "exampleString": "#\\x20VAGRANT-BEGIN\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09-E#\\x20VAG"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 172
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\s*script([^>]*)(?:\\/>|>((?:.|\\r?\\n)*?)<\\s*\\/script[^<>]*>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script>\r"
      ],
      "pumps": [
        "\n\n\r"
      ],
      "suffix": "\ns/",
      "exampleString": "<script>\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0as/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 173
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(?:\\s*?)(\\r\\n|\\n|\\r)+([^\\S\\n\\r])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\r\n"
      ],
      "suffix": "\r\t\n",
      "exampleString": "\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0d\\x09\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "trailer[\\s]*<<(.*)>>[\\s\\r\\n]+(?:[%].*[\\r\\n]+)*startxref[\\s\\r\\n]+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "trailer<<>>\t%"
      ],
      "pumps": [
        "\n%\n%"
      ],
      "suffix": "r\t\n",
      "exampleString": "trailer<<>>\\x09%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%\\x0a%r\\x09\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 186
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^arn:(\\w|-)*:iam::\\d+:role\\/?(\\w+|-|\\/|\\.)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "arn::iam::0:role/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "::",
      "exampleString": "arn::iam::0:role/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "((\\s*(\\w+)\\s*\\:\\s*((\\w+\\.*)+)\\s*);?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\ta.:",
      "exampleString": "a:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09a.:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "([/\\w\\.-]*)+\\(([\\d]+),([\\d]+)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0(",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((http[s]?:\\/\\/)([a-zA-Z0-9_.-]+)(\\:(d+))?)?([\\/]?[~]?(\\.?[^.]+[~]?)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/~.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "/.:.",
      "exampleString": "/~.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/.:."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+){1,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<!-- node types -->\\n+)((?:\\s|.)*?)(\\n+<!-- \\/node types -->)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- node types -->\n"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "-- node types --",
      "exampleString": "<!--\\x20node\\x20types\\x20-->\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09--\\x20node\\x20types\\x20--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 180
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "'((\\\\.|[^'])*)'|(\\d+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\",
      "exampleString": "'\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "/\\*(?:\\s|.)*?\\*/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\t",
      "exampleString": "/*\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([\\\\w-]{1,}\\\\s?){1,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-"
      ],
      "pumps": [
        "\\-\\-"
      ],
      "suffix": "s-s",
      "exampleString": "-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-s-s"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\u0001.*?\u0002)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u0001"
      ],
      "pumps": [
        "\u0002\u0001\u0002\u0001"
      ],
      "suffix": "a",
      "exampleString": "\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01\\x02\\x01a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "((-?\\w*)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-"
      ],
      "pumps": [
        "a--"
      ],
      "suffix": "#",
      "exampleString": "-a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--a--#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\s*(\\w+)\\s*((\\w+)?\\s*=\\s*(\\\"[^\\\"]*\\\"|\\((\\s*\\\"[^\\\"]*\\\"\\s*,?)*\\)|(\\w+)\\s+JOINING\\s+(\\*?)(\\w+)\\.(\\w+)|\\w+))?,?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a=(\"\""
      ],
      "pumps": [
        "\t\t\"\""
      ],
      "suffix": "NG\ta",
      "exampleString": "a=(\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"\\x09\\x09\"\"NG\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 256
    },
    "indeg": {
      "num_nodes": 23,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 22,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:<!--[\\S\\s]*?-->|<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<\""
      ],
      "pumps": [
        "\"\"\"\""
      ],
      "suffix": "\"a>-\"'a",
      "exampleString": "<\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"a>-\"'a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 183
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "sie-(\\w+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "sie-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "sa-",
      "exampleString": "sie-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaasa-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*%node_var%((?:.|[\\s\\S])*?)%(.*?)%(\\d+)%\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*%node_var%"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "v",
      "exampleString": "/*%node_var%aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaav"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 152
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^method.request.header.((?:\\w+-?)+\\w+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "methodarequestaheaderaa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$",
      "exampleString": "methodarequestaheaderaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 161
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\x0b((:?.|\\r|\\n)+)\\x1c\\r",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u000b\r"
      ],
      "pumps": [
        ":a"
      ],
      "suffix": "\r\u001c",
      "exampleString": "\\x0b\\x0d:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a\\x0d\\x1c"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s\\/]*)\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "function"
      ],
      "pumps": [
        "/**/\t/**/\t"
      ],
      "suffix": "n*\t*",
      "exampleString": "function/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09/**/\\x09n*\\x09*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 152
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "s@(\\\\\\\\|\\\\@|[^@])*@(\\\\\\\\|\\\\@|[^@])*@[msixpodualngc]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "s@"
      ],
      "pumps": [
        "a\\\\"
      ],
      "suffix": "@$@$@$",
      "exampleString": "s@a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\@$@$@$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\(([-a-zA-Z]+):(([^()]*(\\([^()]*\\))?)*)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(a:"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "()((",
      "exampleString": "(a:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa()(("
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:\\d+\\.?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "..",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\[\\w+@\\S+(\\s?\\S+)*\\]\\s?>\\s?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a@a\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "[a\t\t",
      "exampleString": "[a@a\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa[a\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{\\{([^\\}\\}]+)+\\}\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{{a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "{}{",
      "exampleString": "{{aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa{}{"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^test/(.+?/)*test_.+?\\.rb$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "test/a"
      ],
      "pumps": [
        "/a"
      ],
      "suffix": "t_/te",
      "exampleString": "test/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/at_/te"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*%node_textline%(.*?)%\\*\\/((?:.|[\\s\\S])*?)\\/\\*%node_textline_end%(\\d+)%\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*%node_textline%%*/"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "e",
      "exampleString": "/*%node_textline%%*/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 201
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^Compile[\\w]+\\s.+?\\s((?:\\\\.|[^ ])+\\/((?:\\\\.|[^ ])+\\.(?:m|mm|c|cc|cpp|cxx|swift)))\\s.*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Compilea\ta\ta"
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "\\/\\/",
      "exampleString": "Compilea\\x09a\\x09a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\/\\/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 776
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(https?:\\/\\/)?((([a-z0-9]-*)*[a-z0-9]+\\.?)*([a-z0-9]+))(\\/[\\w?=\\.-]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-0-",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-0-"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\\\([a-zA-Z]:[^*,\\\\]*[,]?)+\\*[0-9A-Fa-f]{2}(\\\\.*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\a:"
      ],
      "pumps": [
        "a:"
      ],
      "suffix": "\\",
      "exampleString": "\\a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 696
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:---(?:\\s+~?)?\\s+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "---\t"
      ],
      "pumps": [
        "\t\t---\t"
      ],
      "suffix": "-\t~",
      "exampleString": "---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09\\x09\\x09---\\x09-\\x09~"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d+)+\\s(\\w+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0\ta\t",
      "exampleString": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09a\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\>(\\n|\\r|\\r\\n| |\\t)*\\<",
    "exploitString": {
      "degree": 0,
      "separators": [
        ">"
      ],
      "pumps": [
        "\r\r\n"
      ],
      "suffix": "\r\n<\n",
      "exampleString": ">\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0d\\x0a\\x0d\\x0a<\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(a+|b)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:[^\"\\\\]*|\\\\.)*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"a",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\"a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<div class=\"revision\">((.|\\n)*?)<\\/div>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<div class=\"revision\">"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "</div",
      "exampleString": "<div\\x20class=\"revision\">a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a</div"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 136
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*(>=|>|<|<=|!=|\\^|~)?\\d+(\\.(\\*|(\\d+(\\.(\\d+|\\*))?)))?((\\s*\\|\\|)?\\s*(>=|>|<|<=|!=|\\^|~)?\\d+(\\.(\\*|(\\d+(\\.(\\d+|\\*))?)))?)*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "00"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "|\t0.00.",
      "exampleString": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000|\\x090.00."
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 132
    },
    "indeg": {
      "num_nodes": 22,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 18,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(*(**"
      ],
      "pumps": [
        ")(**)(**"
      ],
      "suffix": "(a*(",
      "exampleString": "(*(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**)(**(a*("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([()\\n]|.)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 549
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "^( *\\@charset [^;]+; *)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@"
      ],
      "pumps": [
        "charset a; @"
      ],
      "suffix": "h",
      "exampleString": "@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@charset\\x20a;\\x20@h"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.|\\n)+\\s+at new.+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\n\nat new",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aat\\x20new"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 756
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\/\\*(?:.|\\r|\\n)*\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\r\r"
      ],
      "suffix": "\n",
      "exampleString": "/*\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^---(.*\\n)*---$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "---"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "-a\n--",
      "exampleString": "---a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a-a\\x0a--"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(\\s*<br[^>]*>\\s*)+\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<br"
      ],
      "pumps": [
        ">\t<br"
      ],
      "suffix": "<b>>",
      "exampleString": "<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br>\\x09<br<b>>"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<''"
      ],
      "pumps": [
        "\"\"\"\"''"
      ],
      "suffix": "\">'a",
      "exampleString": "<''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\">'a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "a(?:.|\\n)+a",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "a\n",
      "exampleString": "a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:.*::)*(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "::a"
      ],
      "suffix": ":",
      "exampleString": "::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 667
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([ \\t]*)#\\s*bower:*(\\S*))(\\n|\\r|.)*?(#\\s*endbower)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#bower"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\tendb",
      "exampleString": "#bower\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x09endb"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 197
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.|\\n)*Running (.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "aRu",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaRu"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 720
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "(TYPE_\\S+\\s*=\\s*(('[^",
    "exploitString": {
      "degree": 0,
      "separators": [
        "TYPE_a='a',"
      ],
      "pumps": [
        "\t'a','a',"
      ],
      "suffix": "YP",
      "exampleString": "TYPE_a='a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',\\x09'a','a',YP"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 170
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(.+\\/)*(\\d+-\\d+-\\d+)-(.*)(\\.[^.]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a/"
      ],
      "suffix": "0/.",
      "exampleString": "a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/0/."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 141
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(?:\\r\\n)?\\s)*(\\[[^\\]]+\\])(?::(\\d+))?(?:(?:\\r\\n)?\\s)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\n\t\r\n\t"
      ],
      "suffix": "][",
      "exampleString": "\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09]["
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^\\\\=]+|\\\\.)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\a=",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\a="
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 70
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\/\\*(.|\\s)*\\*\\/$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\t",
      "exampleString": "/*\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[\"((?:\\\\\"|.)*)\"\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[\"\\"
      ],
      "pumps": [
        "\"\\\"\\"
      ],
      "suffix": "]\\a",
      "exampleString": "[\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\]\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "(<a.*?https?:\\/\\/.*?[^a]>)+?",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "<ahttp://$><ahttps://$>"
      ],
      "suffix": "tph$",
      "exampleString": "<ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$><ahttp://$><ahttps://$>tph$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "<.?a(.|\\n)*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<aa"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "<>\n",
      "exampleString": "<aaa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a<>\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*// Rollbar Snippet)[",
    "exploitString": {
      "degree": 0,
      "separators": [
        "// Rollbar Snippet\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "/ Rollbar ",
      "exampleString": "//\\x20Rollbar\\x20Snippet\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/\\x20Rollbar\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 260
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^#[^\\n]*\\n+(?:- .+\\n)*\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#\n- "
      ],
      "pumps": [
        "a\n- "
      ],
      "suffix": "-a",
      "exampleString": "#\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20a\\x0a-\\x20-a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": ".*\\[(\\d*[^\\d\\[\\]]+\\d*)+\\].*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0",
      "exampleString": "[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 693
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "DECRYPT\\((?:\\s*\\w*\\s*\\,?)*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "DECRYPT("
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "E",
      "exampleString": "DECRYPT(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaE"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\"(?:[^\"]|\\\\.)*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\/.*?[\\r\\n]|\\/\\*(?:.|[\\r\\n])*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "/a*",
      "exampleString": "/*a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a/a*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:\\\\.|[^\"])*)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "a\\\\a\\"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.+(\\d|.){1,}\\ )\\-(.+(\\d|.){1,})\\ per\\ item",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "0"
      ],
      "suffix": "e",
      "exampleString": "aa000000000000000000000000000000000000000000e"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 190
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\W|[_-])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "$-"
      ],
      "suffix": "A",
      "exampleString": "$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-A"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "L--"
      ],
      "pumps": [
        "--"
      ],
      "suffix": "\tL",
      "exampleString": "L--------------------------------------------------------------------------------------\\x09L"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w|[-_])+\\s*\\??=",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-"
      ],
      "pumps": [
        "_"
      ],
      "suffix": "_\t-",
      "exampleString": "-___________________________________________\\x09-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s+(,|:\\s+)?|struct\\s+)(\\w+)\\s*<((\\s*(typename\\s+)?\\w+\\s*(=\\s*.*|<(\\s*\\w+\\s*,?)+>\\s*)?,?)+)\\s*>\\s+((struct|class).*?)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\ta<a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a=,atypename",
      "exampleString": "\\x09a<aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=,atypename"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 921
    },
    "indeg": {
      "num_nodes": 31,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 27,
      "exec_time": 1
    }
  },
  {
    "pattern": "([^\"]|\\\\.)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "a\\\\a\\"
      ],
      "suffix": "\"\"",
      "exampleString": "\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "func3(.|\\n)*func2(.|\\n)*func1",
    "exploitString": {
      "degree": 0,
      "separators": [
        "func3"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "1\n",
      "exampleString": "func3\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a1\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "<script(\\n|\\r|.)*?<\\/script>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script"
      ],
      "pumps": [
        "a\r"
      ],
      "suffix": "i",
      "exampleString": "<scripta\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0di"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 120
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<project([^>]|\\n)*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<project"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "pr>>",
      "exampleString": "<project\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0apr>>"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0.0."
      ],
      "pumps": [
        "0.0e+0."
      ],
      "suffix": "e++",
      "exampleString": "0.0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.0.0e+0.e++"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^\\n,]+, *\\n|[^\\n]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ",\n,\n",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\\x0a,\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*[dyms])+(\\s*[xX]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "da"
      ],
      "suffix": "d",
      "exampleString": "dadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadad"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*%(node_in|node_out|node_param)%\\*\\/\\s*((?:.|[\\s\\S])*?);\\s*\\/\\*%(?:node_in_end|node_out_end|node_param_end)%(.*?)%(.*?)%(\\d+)%\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*%node_in%*/"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t/*%nod",
      "exampleString": "/*%node_in%*/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09/*%nod"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 393
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*?)([0-9]*)*?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a",
      "exampleString": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 765
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "-=.0+=00"
      ],
      "suffix": "-=0+",
      "exampleString": "-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=.0+=00-=0+"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[-+]?\\$\\s*(\\d*,\\d*)+(?:\\.)?\\d*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+$,"
      ],
      "pumps": [
        "00,"
      ],
      "suffix": "++",
      "exampleString": "+$,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,++"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "[a-z0-9!#$%&*+/=?^_`{|}~-]+(?:[\\.a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-@a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-@a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "[a-zA-Z]:\\\\([^\\\\]+\\\\?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:\\a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\\\\",
      "exampleString": "a:\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\[([\\w-!]+(=\"?([^\"]|\\\\\")+\"?)? {0,})+\\])",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "=]a\\ $\"\"",
      "exampleString": "[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=]a\\\\x20$\"\""
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\s*(\\/\\*+|\\/\\/|\\*+\\/|\\*)+\\s?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "*/*/*"
      ],
      "suffix": "\t/\t",
      "exampleString": "*/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/**/*/*\\x09/\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 136
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n        "
      ],
      "pumps": [
        "                   a\n                          \n                           \"\"\n                           a\n                          \n                           \"\"\n        "
      ],
      "suffix": " \"\\\"\n         ",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\\\"\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 517
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:\\w+:.*\\n)*\\w+:.*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:"
      ],
      "pumps": [
        "\na:"
      ],
      "suffix": "\n",
      "exampleString": "a:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0aa:\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 701
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\n){3,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\n\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^<script>((?:.|\\n)*?)<\\/script>$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "ipt",
      "exampleString": "<script>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aipt"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s|\\/\\*.*?\\*\\/)*[\\(\\w]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a*//*"
      ],
      "suffix": "/$*//",
      "exampleString": "/*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*/$*//"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(%[-_0^#:]*(\\d+)*[EO]?d|%[-_0^#:]*(\\d+)*[EO]?e)(.*)(%b)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "%#",
      "exampleString": "%0000000000000000000000000000000000000000000000000000000000000000000000000000000000000%#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s|[#][^\\n]*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#"
      ],
      "pumps": [
        "\t#"
      ],
      "suffix": "\na",
      "exampleString": "#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:&amp;|[$@%*]|\\$#)\\$?[a-zA-Z_](\\w+|::)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$$aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ":&",
      "exampleString": "$$aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:&"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "<s>((.|\\n|\\r\\n)*?)<\\/s>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<s>"
      ],
      "pumps": [
        "\n\r\n"
      ],
      "suffix": "</s",
      "exampleString": "<s>\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a</s"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\.]*)*\\.json",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "soa.n",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaasoa.n"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:\\\\,|.)+?)(?:,(.+))?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        ",\\,\\"
      ],
      "suffix": "a",
      "exampleString": "\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 688
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*,\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ","
      ],
      "pumps": [
        "\t,"
      ],
      "suffix": "#",
      "exampleString": ",\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a.aaa"
      ],
      "pumps": [
        "aaaaaaa"
      ],
      "suffix": "a.",
      "exampleString": "a@a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "([ ]*[a-z0-9&#*=?@>\\\\<:\\-,()$\\[\\]_.{}!+%^]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " ",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:.+\\#)*)(.+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "#a#a"
      ],
      "suffix": "a",
      "exampleString": "a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#a#aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 667
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/#\"(?:\\.|(?:\")|[^\"\\n])*\"\\/g",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/#\""
      ],
      "pumps": [
        "."
      ],
      "suffix": "/g\"",
      "exampleString": "/#\"........................................../g\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^'\\\\]+|\\\\.)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\''",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\''"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([A-Z][^.\\s]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "\t",
      "exampleString": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\?a=cid-for-abc\\&b=amp-([a-zA-Z0-9_-]+){10,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "?a=cid-for-abc&b=amp-aaaaaaaaaa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "=amp-",
      "exampleString": "?a=cid-for-abc&b=amp-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=amp-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 243
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<html>(.|\\r|\\n)*<title>Default Title<\\/title>(.|\\r|\\n)*<\\/html>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<html>"
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "ti",
      "exampleString": "<html>\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0dti"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 310
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\r",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w|\\d|_|-)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "_"
      ],
      "suffix": "#",
      "exampleString": "__________________________________________#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.+,)*.+[^,]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        ",a"
      ],
      "suffix": ",",
      "exampleString": "a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z_][a-z0-9_]*([A-Z_][a-z0-9_]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "A_"
      ],
      "suffix": "#",
      "exampleString": "aA_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_A_#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "enum\\(('.+?'(?:,'.+?')*)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "enum('a','a"
      ],
      "pumps": [
        "','a',','a"
      ],
      "suffix": ",a",
      "exampleString": "enum('a','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a','a',','a,a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 158
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"([^\"\\\\]|\\\\\"|\\\\\\\\|\\\\[^\"])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:@[^ @]+)(?:\\s+@[^ @]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@a\t"
      ],
      "pumps": [
        "@a\t\t"
      ],
      "suffix": "@a@",
      "exampleString": "@a\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a\\x09\\x09@a@"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "a",
      "exampleString": "/*a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\n(?:\\s*))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^v?(([0-9]+\\.?)+)(-(([a-zA-Z]+)([0-9]+)))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "v0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "v.",
      "exampleString": "v0000000000000000000000000000000000000000000000000000000000000000000000000000000000000v."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:\\\\[rn]|[\\r\\n]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\n\\nn",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\nn"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:\\s*(?:(;[^\\n]*\\n))?)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": ";\na",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09;\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<<\\s*([\\w\\.]+)\\s*(?:=([^>]*))*>>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<<a="
      ],
      "pumps": [
        "="
      ],
      "suffix": "\ta>a",
      "exampleString": "<<a===========================================\\x09a>a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\\\e\\[(?:\\d+;?)+m",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\e[0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0;;",
      "exampleString": "\\e[00000000000000000000000000000000000000000000000000000000000000000000000000000000000000;;"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[0-9]* ?(?:\ud83d\udc83|\ud83e\udd26\u200d\u2640\ufe0f|\ud83e\udd37) ?[0-9]*(?:, | \\| )?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        " \ud83d\udc83"
      ],
      "pumps": [
        " \ud83e\udd37 \ud83e\udd37"
      ],
      "suffix": "\ufe0f 0??",
      "exampleString": "\\x20\\x{d83d}\\x{dc83}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x20\\x{d83e}\\x{dd37}\\x{fe0f}\\x200\\x{d83d}\\x{d83d}"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 171
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\t*debug_dump_data\\((.*\\n)*?.*\\);\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "debug_dump_data("
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "u",
      "exampleString": "debug_dump_data(\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0au"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--(.|\\t|\\n|\\r)*?-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n\r"
      ],
      "suffix": "!-",
      "exampleString": "<!--\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d!-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([ \\t]*)\\/!?\\s*bower:(\\S*))(\\n|\\r|.)*?(\\/!?\\s*endbower)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/!bower:"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": " a",
      "exampleString": "/!bower:\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x20a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 205
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?: *\\n *){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\n"
      ],
      "pumps": [
        " \n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a\\x20\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:,.+?)*,\\s*(\\S+)\\s*:",
    "exploitString": {
      "degree": 0,
      "separators": [
        ","
      ],
      "pumps": [
        "a,a,"
      ],
      "suffix": ",\t",
      "exampleString": ",a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,,\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:http|ftp|https)?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "://"
      ],
      "pumps": [
        "!A"
      ],
      "suffix": "#",
      "exampleString": "://!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A!A#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^HZ_([A-Z]+([_]?[A-Z]+)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "HZ_A_A"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "H__",
      "exampleString": "HZ_A_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH__"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[\\w-]*-(\\d+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "-a0",
      "exampleString": "-0000000000000000000000000000000000000000000000000000000000000000000000000000000000000-a0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^ \\s*                     # leading space",
    "exploitString": {
      "degree": 0,
      "separators": [
        "                      # leading space\n                                  # Optional leading path to\n                           aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "# \n   \n ",
      "exampleString": "\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20#\\x20leading\\x20space\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20#\\x20Optional\\x20leading\\x20path\\x20to\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#\\x20\\x0a\\x20\\x20\\x20\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 3743
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 2
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "<(?:.|",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\n",
      "exampleString": "<\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([0-9]+[^0-9]?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "aa",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:.|[\\n\\r])*:\\*\\*(?:.|[\\n\\r])+?\\n\\n?((?:.|[\\n\\r])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "a:**a:\n",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa:**a:\\x0a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 670
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "file:/{2,}(-\\.)?([^\\s/?\\.#-]+\\.?)+(/[^\\s]*)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "file://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "file://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "name-70(?:.|\\n|\\r)*bg-success(?:.|\\n|\\r)*text-success(?:.|\\n|\\r)*70\\.00(?:.|\\n|\\r)*<th class=\"text-center\">1<\\/th><\\/tr>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "name-70"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "ntex",
      "exampleString": "name-70\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0antex"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 998
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\"(<a .+?a>|[^\"\\\\]|\\\\.)*\"|'([^'\\\\]|\\\\.)*')",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"<a "
      ],
      "pumps": [
        "aa><a "
      ],
      "suffix": "\\\"a\\",
      "exampleString": "\"<a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20aa><a\\x20\\\"a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 141
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^'(.|\\s)*?'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\t",
      "exampleString": "'\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--EXAMPLE-USAGE-->((?:.|[\\r\\n])*)<!--END-EXAMPLE-USAGE-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--EXAMPLE-USAGE-->"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "!--",
      "exampleString": "<!--EXAMPLE-USAGE-->\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a!--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 208
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*(;.*?)*,\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ";;"
      ],
      "suffix": ",a",
      "exampleString": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;,a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\/ -- BEGIN UMD WRAPPER AFTERWORD --(\\n|.)*\\/\\/ -- END UMD WRAPPER AFTERWORD --",
    "exploitString": {
      "degree": 0,
      "separators": [
        "// -- BEGIN UMD WRAPPER AFTERWORD --"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "END UMD WRAPPER AFTERWO",
      "exampleString": "//\\x20--\\x20BEGIN\\x20UMD\\x20WRAPPER\\x20AFTERWORD\\x20--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aEND\\x20UMD\\x20WRAPPER\\x20AFTERWO"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 284
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\[\\s*\"((?:\\\\\"|.)*?)\"\\s*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[\""
      ],
      "pumps": [
        "a\\\""
      ],
      "suffix": "[",
      "exampleString": "[\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"a\\\"["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*\\.?\\s*(([\\w_]+)(\\(\\s*(,?\\s*([\\d\\.]+|\\\".+\\\"|\\'.+\\'|\\{\\d+\\}))*\\s*\\))?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".a(,."
      ],
      "pumps": [
        ".."
      ],
      "suffix": "\",",
      "exampleString": ".a(,.....................................................................................\","
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([^\\\\{}\\s]+|\\\\[\\\\{}])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\{{",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\{{"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/%((?:.|\\n)*?)%\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/%"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "/\n",
      "exampleString": "/%\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^https?://([\\S]+\\.)*[\\S]+(:[\\d]{2,})*(/+[\\S+]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://a/"
      ],
      "pumps": [
        "//"
      ],
      "suffix": "\t",
      "exampleString": "https://a/////////////////////////////////////////////////////////////////////////////////////\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^( (?:\\$shell)? ( (?:->|->|\\xA3) (?:\\S+->)* (?:[\\[\\{].*?[\\]\\}])* )) (\\S*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "   \u00a3 a"
      ],
      "pumps": [
        "->a"
      ],
      "suffix": " \u00a3\t",
      "exampleString": "\\x20\\x20\\x20\\xa3\\x20a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a->a\\x20\\xa3\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 149
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:((([0]|(([1-9])([0-9]+)*))\\.([0-9]+)*(([eE])([+-]?[0-9]+))?)|(\\.([0-9]+)(([eE])([+-]?[0-9]+))?)|(([0]|(([1-9])([0-9]+)*))(([eE])([+-]?[0-9]+))?)))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "10"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "1E++",
      "exampleString": "100000000000000000000000000000000000000000000000000000000000000000000000000000000000001E++"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n        \n            # tag\n            </\n            a                                     # tag name\n            \ta='"
      ],
      "pumps": [
        "'\ta=\"\"\ta:a='\"\ta='"
      ],
      "suffix": "/",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20#\\x20tag\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20</\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20#\\x20tag\\x20name\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a=''\\x09a=\"\"\\x09a:a='\"\\x09a='/"
    },
    "pivot": {
      "num_nodes": 5,
      "exec_time": 1431
    },
    "indeg": {
      "num_nodes": 21,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 19,
      "exec_time": 2
    }
  },
  {
    "pattern": "(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "puffin\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "f",
      "exampleString": "puffin\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000f"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(?:\\*/)?\\s*(?:/\\*.*?\\*/)*\\s*((?:\\*|//)\\s*=\\s*require((?:_directory|_tree)?)\\s+(.+))",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "/**//**/"
      ],
      "suffix": "/**/*\t",
      "exampleString": "/**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**/*\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 754
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--(.|\\s){1,}?-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "!",
      "exampleString": "<!--\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09!"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(https?:)?//((\\w+).)+(\\w+)/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ps:",
      "exampleString": "//aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaps:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s|(?:#[^\\n\\r]*))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#"
      ],
      "pumps": [
        "\t#"
      ],
      "suffix": "\na",
      "exampleString": "#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x09#\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w+(=\\'?\\\"?[\\w-]?\\'?\\\"?)?(&\\w+(=\\'?\\\"?[\\w-]*\\'?\\\"?)?)*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "='\"&&",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa='\"&&"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 16,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 0
    }
  },
  {
    "pattern": ":global\\(((?:[^\\(\\)\\[\\]]*|\\[.*\\]|\\([^\\(\\)]*\\))*)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":global("
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "lo[))a",
      "exampleString": ":global(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaalo[))a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[_a-z0-9-]+((\\.|\\+)[_a-z0-9-]+)*@([\\w]*-?[\\w]*\\.)+[a-z]{2,4}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@-."
      ],
      "pumps": [
        "a."
      ],
      "suffix": "a@-.a",
      "exampleString": "a@-.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a@-.a"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 154
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\s*)\\n)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\\\w\\\\d_-]+\\\\.[\\\\w\\\\d_-]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-"
      ],
      "pumps": [
        "\\-\\---"
      ],
      "suffix": "a",
      "exampleString": "-\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---\\-\\---a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "\n:\n",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a:\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 621
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([#.](?:[\\w-]|\\\\(?:[a-fA-F0-9]{1,6} ?|[^a-fA-F0-9]))+)\\s*\\(",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#"
      ],
      "pumps": [
        "\\aaa"
      ],
      "suffix": "a\t",
      "exampleString": "#\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 173
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "[ers]*([-+]?[\\ddwmy]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "e+0e",
      "exampleString": "+0000000000000000000000000000000000000000000000000000000000000000000000000000000000000e+0e"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "\"((?:[^\"\\\\]+|\\\\.)*)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"a",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\"a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+)\\.*(?:\\t|\\s)*(\\d{1,2})\\w*,*(?:\\t|\\s)*(\\d{4})(?:\\t|\\s)*(?:\\-|to)(?:\\t|\\s)*(\\w+)\\.*(?:\\t|\\s)*(\\d+)\\w*,*(?:\\t|\\s)*(\\d{4})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "-",
      "exampleString": "a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09-"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 226
    },
    "indeg": {
      "num_nodes": 25,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 18,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\((\\\\[\\\\\\)]|[^\\)])*\\)[egimosx]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "("
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": ")a\\",
      "exampleString": "(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\)a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(.*)\\.fileName = \"(.*\\/)*(.*\\.vmdk)\"$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".fileName = \""
      ],
      "pumps": [
        "//"
      ],
      "suffix": "= ",
      "exampleString": ".fileName\\x20=\\x20\"////////////////////////////////////////////////////////////////////////////////////=\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 198
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "((\\s\\w)|(\\w+)|\\?{0,2})\\s([\\w\\+\\-\\/\\\\\\.]+)(\\s->\\s)?([\\w\\+\\-\\/\\\\\\.]+)*\\n{0,1}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\taa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\na\t",
      "exampleString": "\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x0aa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "```javascript(.|\\n|\\r)*?```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```javascript"
      ],
      "pumps": [
        "\n\r"
      ],
      "suffix": "`j``",
      "exampleString": "```javascript\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d`j``"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 161
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\".*?\"|[^#\"])*)#.*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\"\"\"\"\""
      ],
      "suffix": "\"",
      "exampleString": "a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"a\"\"\"\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 631
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "MSIE\\s+([^;)]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "MSIE\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ")",
      "exampleString": "MSIE\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<([\\$\\&\\#])([a-zA-Z_0-9]+)(\\s*[^>]*)*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<$a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "<>>",
      "exampleString": "<$aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa<>>"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<[Hh][Tt][Mm][Ll]>((?:.|\\n)*?)<\\/[Hh][Tt][Mm][Ll]>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<HTML>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "ML",
      "exampleString": "<HTML>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aML"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*\\$\\{.*\\}.*(\\$\\{.*\\}.*)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "${}${"
      ],
      "pumps": [
        "}${}}${"
      ],
      "suffix": "a",
      "exampleString": "${}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${}${}}${a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 668
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\"(([^\"\\\\]+|\\\\([\\\\\"nt]))+)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\"\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{(?:([^{}]+):)*([a-zA-Z][a-zA-Z0-9_]*)\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{"
      ],
      "pumps": [
        "a:a:"
      ],
      "suffix": "{$:{",
      "exampleString": "{a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:{$:{"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(\\\\[\\\\\"]|[^\"])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^( {4}[^\\n]+(?: *\\n)*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "    a"
      ],
      "pumps": [
        "    a      \n"
      ],
      "suffix": "a\na",
      "exampleString": "\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20\\x20\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\$[wnoitsgz><]|\\$[lh]\\[.+\\]|\\$[lh]|\\$[0-9a-f]{3})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "$aaa$h[a]$<$h[a]"
      ],
      "suffix": "<$$",
      "exampleString": "$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]$aaa$h[a]$<$h[a]<$$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 141
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^@]+?)@(([a-z0-9]-*)*[a-z0-9]+\\.)+([a-z0-9]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a"
      ],
      "pumps": [
        "-aa.a"
      ],
      "suffix": "-$@.",
      "exampleString": "a@a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-aa.a-$@."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*?)((\\[(.*?)\\])+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "[][]"
      ],
      "suffix": "[",
      "exampleString": "[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:[^\\\\\\/]*|\\\\.)*)\\/(?:\\(([mygi]+)\\))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(\\S+)(\\s*)([^\\[]*)(\\[.*\\]\\s*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "[][]"
      ],
      "suffix": "][\t]a[",
      "exampleString": "a[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]][\\x09]a["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 131
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:\\s*[\\r\\n]){3,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\n\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\n\t",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\|@?[a-z0-9_]+(:.*)?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "|@a"
      ],
      "pumps": [
        ":|@a|a"
      ],
      "suffix": "a",
      "exampleString": "|@a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|a:|@a|aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 735
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{\\{html\\s+([\\w\\$\\-]+(\\.|\\s)?[\\w\\$\\-]*)+\\}\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{{html\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "m",
      "exampleString": "{{html\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaam"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "Name servers:\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Name servers:\na\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "ers",
      "exampleString": "Name\\x20servers:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aers"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.+\\\\/)*(.+)\\\\.(.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\\"
      ],
      "pumps": [
        "/a\\/a\\"
      ],
      "suffix": "a",
      "exampleString": "a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\/a\\a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 628
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "([A-z]+?:\\/\\/([-\\w\\.]+[-\\w])+(:\\d+)?(\\/([\\w\\/_\\.#-]*(\\?\\S+)?[^\\.\\s])?)?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a://aa"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "-:.",
      "exampleString": "a://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-:."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 131
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*)(>.*)*#",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ">>"
      ],
      "suffix": "#a",
      "exampleString": ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "Object\\.create\\(\\s+((THREE.)?(\\w+)\\.prototype[,]?\\s*)+\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Object.create(\ta.prototype,"
      ],
      "pumps": [
        "THREE.prototypea.prototype,"
      ],
      "suffix": "o",
      "exampleString": "Object.create(\\x09a.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,THREE.prototypea.prototype,o"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 315
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\nfrom (.|\\n)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\nfrom "
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0afrom\\x20\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 637
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\"(((\\\\.)|[^\"])*)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "(a|b|(((.*)*)*x))\u0100",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "b\u0100a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab\\x{100}a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\r|\\t| ]*\\n[\\r|\\t| ]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\$bar(.|\\n)*\\$baz",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$bar"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "$bar\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(a+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[0-9]+(?:[\\._]?[0-9]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0.0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w+)(?::((?:[\\w\\.]+,?)+))?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a.:",
      "exampleString": "a:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:insert_object|text_editor|texteditor|page_list|pagelist|snippet)\\()((?:\\(.*?\\)|[^()]*?)*)(\\))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "snippet("
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "p",
      "exampleString": "snippet(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaap"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 168
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\t|\\x0a|\\x0d|\\s)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\.?[^.]+)+)\\.([^.]*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a..",
      "exampleString": ".aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"((?:\\\\.|.)*?)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\a",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^url\\((\"([^\\\\\"]|\\.)*\")\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "url(\""
      ],
      "pumps": [
        ".."
      ],
      "suffix": "ur\"",
      "exampleString": "url(\"....................................................................................ur\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "@\"(?:\\.|(\\\\\\\")|[^\\\"\"\\n])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@\""
      ],
      "pumps": [
        "\\\"."
      ],
      "suffix": "@\\\"\".",
      "exampleString": "@\"\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".\\\".@\\\"\"."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(?:\\{(?:.|\\n)*\\}|\\[(?:.|\\n)*\\])\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "[",
      "exampleString": "{\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a["
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 142
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^# \\d+ \"/usr/lib/.*\\n(([^#\\n].*)?\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "# 0 \"/usr/lib/\n"
      ],
      "pumps": [
        "\na\n"
      ],
      "suffix": "usr",
      "exampleString": "#\\x200\\x20\"/usr/lib/\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0ausr"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--(.|\\s|\\n)*?-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "!--",
      "exampleString": "<!--\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a!--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z_$][a-zA-Z_$0-9]*(\\[([1-9]\\d*)*\\])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a["
      ],
      "pumps": [
        "11"
      ],
      "suffix": "1a[[",
      "exampleString": "a[1111111111111111111111111111111111111111111111111111111111111111111111111111111111111a[["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "class\\s*=\\s*((\\\").*?\\\"|(\\{.*?\\}|\\S)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "class=a"
      ],
      "pumps": [
        "{}"
      ],
      "suffix": "ass\t",
      "exampleString": "class=a{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}ass\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 169
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\\\/?\\\\w+((\\\\s+\\\\w+(\\\\s*=\\\\s*(?:\\\".*?\\\"|'.*?'|[\\\\^'\\\">\\\\s]+))?)+\\\\s*|\\\\s*)\\\\/?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<\\/\\w"
      ],
      "pumps": [
        "\\s\\w\\=\\'\\s\\w\\=\\'"
      ],
      "suffix": "=\\s",
      "exampleString": "<\\/\\w\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'\\s\\w\\=\\'=\\s"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 316
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([\\w\\d]*[-_]*[\\w\\d]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\r\\n|\\r|\\n){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:%\\s+%|%\"|.)*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"%"
      ],
      "pumps": [
        "\t%%\t%%"
      ],
      "suffix": "%\t",
      "exampleString": "\"%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%\\x09%%%\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\$([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*((.|\\n)+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$a="
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "$a=\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 802
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(and|or)\\s+(.*?)([<>=!]+)(.*?)\\s*((and |or ).*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "or\t!"
      ],
      "pumps": [
        "or or "
      ],
      "suffix": "a",
      "exampleString": "or\\x09!or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20or\\x20a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 797
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "(gnu)\\s?([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "gnu\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "gn\t",
      "exampleString": "gnu\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagn\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.+?)=(\\S+::\\S*(?::\\s*,\\s*\\S+::\\S*)*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a=a:::,a::"
      ],
      "pumps": [
        ":,a::"
      ],
      "suffix": "\t,:",
      "exampleString": "a=a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a:::,a::\\x09,:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 251
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "[^+\\-0-9:\\s\\/\\]\"'`\\.]([^:\\s\\/\\]\"'`]*[^:\\s\\/\\]\"'`\\.])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "+.",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa+."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(([a-zA-Z0-9]*)(\\.[a-zA-Z0-9]+)?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "..",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(?:[^\\n\\r%][^\\n\\r]*(\\r\\n|\\n|\\r)+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\n"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "a\r\n%",
      "exampleString": "a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0aa\\x0d\\x0a%"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*(context|describe)\\s+('(.*)'|\"(.*)\")+\\s*(\\{|do)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "context\t"
      ],
      "pumps": [
        "''''"
      ],
      "suffix": "c",
      "exampleString": "context\\x09''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''c"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 151
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "<\\s*/*\\s*script(.*?)*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\tsc",
      "exampleString": "<scriptaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09sc"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "Views.Foo = Backbone.View.extend\\(\\{(.|\\n)*app\\/scripts\\/templates\\/foo.ejs",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ViewsaFoo = BackboneaViewaextend({"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "mpla",
      "exampleString": "ViewsaFoo\\x20=\\x20BackboneaViewaextend({\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ampla"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 251
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "-+(?: *\\n*)*rediscover the web(?:\\n|.)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-"
      ],
      "pumps": [
        "  "
      ],
      "suffix": " rediscov",
      "exampleString": "-\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20rediscov"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 881
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "version (1\\.([0-9]{2})\\.([0-9]*\\.*)*)* ",
    "exploitString": {
      "degree": 0,
      "separators": [
        "version 1.00."
      ],
      "pumps": [
        ".."
      ],
      "suffix": "0",
      "exampleString": "version\\x201.00.....................................................................................0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "((.+\\n)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "a",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([A-Z]+[a-z\\d\\$]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "#",
      "exampleString": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^# \\d+ \"/usr/X11R6/include/.*P[.]h\".*\\n(([^#\\n].*)?\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "# 0 \"/usr/X11R6/include/P.h\"\n"
      ],
      "pumps": [
        "\na\n"
      ],
      "suffix": "c",
      "exampleString": "#\\x200\\x20\"/usr/X11R6/include/P.h\"\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0ac"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 176
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w|\\d|_|-)*=$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "_"
      ],
      "suffix": "_=a",
      "exampleString": "___________________________________________=a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\)([\\s\\n\\t]+?|\\/\\/*.*?\\*\\/|\\/\\/[^\\n]*\\n)*?\\{",
    "exploitString": {
      "degree": 0,
      "separators": [
        ")\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "/\t/\n/",
      "exampleString": ")\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09/\\x09/\\x0a/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\]\\]\\>)(\\n|\\s)*(\\<\\/programlisting\\>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "]]>"
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "]>",
      "exampleString": "]]>\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a]>"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a.aaa"
      ],
      "pumps": [
        "aaaaaaa"
      ],
      "suffix": "a.",
      "exampleString": "a@a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "phantomjs\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "phantomjs/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "s/",
      "exampleString": "phantomjs/0._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000s/"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\?|!|:|,|\\.|\u3010|\u3011|\uff3b|\uff3d|\uff08|\uff09|\uff1a|\uff1b|\uff0c|\uff1f|\u3002|\u300d|\uff01|\ufe42|\u201d|\"|_|\ufe4f|\u300a|\u300b|\u3008|\u3009|\u2027|\u3001|\u300c|\u300d|\ufe41|\ufe42|\"|\"|\uff5e|\u2014|\u2014)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\ufe42\""
      ],
      "suffix": "#",
      "exampleString": "\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"\\x{fe42}\"#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 749
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*((?:[^\\\\:]+|\\\\.)*):(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ":",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 723
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "presto\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "presto/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "presto/0._00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:\\/\\w+)+)\\/-\\/(\\w+(?:.\\w+)+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a/-/aa"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "//",
      "exampleString": "/a/-/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa//"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "AnyJobber(.|\\n)+YetAnotherJobber",
    "exploitString": {
      "degree": 0,
      "separators": [
        "AnyJobber\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "nyJob",
      "exampleString": "AnyJobber\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0anyJob"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 141
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^( {4}[^\\n]+\\n*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        " "
      ],
      "pumps": [
        "   a     a "
      ],
      "suffix": "a\na",
      "exampleString": "\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20\\x20a\\x20a\\x0aa"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z_][a-zA-Z0-9_]*|\"[^\"]*\"|'[^']*'|[0-9]+|:|,|\\{|\\}|\\*|\\?|\\||&|\\(|\\)|\\s+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "*$'$",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000*$'$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 182
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\[([^\\]]+)*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "[][",
      "exampleString": "[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa[]["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\/(.*)\\/([a-z]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a/$",
      "exampleString": "//aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": ":not\\((([^()]*(\\([^()]*\\))?)*)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":not("
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ")a((",
      "exampleString": ":not(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)a(("
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^%\\{(.|\\r|\\n)*?%\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%{"
      ],
      "pumps": [
        "\r\r"
      ],
      "suffix": "%",
      "exampleString": "%{\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d%"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^<!--\\s*([\\/]{0,1})sol_([a-z]+)+\\s*([\\w\\W]*)\\s*-->$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--sol_a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "l",
      "exampleString": "<!--sol_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaal"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "function (?:\\s|.)*?end function.*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "function "
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\tend fu",
      "exampleString": "function\\x20\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09end\\x20fu"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 882
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\\\.|[^\\\\*]+)*\\*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\**a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\**a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(?:''|\"\")?\\s*(?:,\\s*(?:''|\"\")?\\s*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ",\""
      ],
      "pumps": [
        "\",\t,\""
      ],
      "suffix": ",\"\t",
      "exampleString": ",\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\"\",\\x09,\",\"\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:'((?:[^']|\\.)*)'|\"((?:[^\"]|\\.)*)\"|;)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "a."
      ],
      "suffix": "\"'.\".",
      "exampleString": "\"a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.\"'.\"."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"((?:[^\"\\\\\\r\\n]|\\\\.)*)\"|'((?:[^'\\\\\\r\\n]|\\\\.)*)'|`((?:[^`]|\\\\.)*)`",
    "exploitString": {
      "degree": 0,
      "separators": [
        "`"
      ],
      "pumps": [
        "\\a\\a"
      ],
      "suffix": "\"\\",
      "exampleString": "`\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\"\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\n *\\/\\/.*\\s*)* *lodash\\.forIn *= *.+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n//"
      ],
      "pumps": [
        "\t\n//\n //"
      ],
      "suffix": "s",
      "exampleString": "\\x0a//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//\\x09\\x0a//\\x0a\\x20//s"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 196
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "( {2,}|\\t)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "  "
      ],
      "pumps": [
        "  "
      ],
      "suffix": "\t \t",
      "exampleString": "\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x09\\x20\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(<.+>.*<\\/.+>)+|(<.+\\/\\s*>)+\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a"
      ],
      "pumps": [
        "/><a/><a"
      ],
      "suffix": "<",
      "exampleString": "<a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a/><a<"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 201
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d+)+\\.?(\\d+)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*serializer(\\s*=\\s*((\\{\\s*(\\S+(\\s*,\\s*\\S+)*)?\\s*\\})|(\\[(\\s*\\S+(\\s*,\\s*\\S+)*)?\\s*\\])|(\\S+)))?\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "serializer={a"
      ],
      "pumps": [
        ",a,\t,a"
      ],
      "suffix": "={\t,\t,",
      "exampleString": "serializer={a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a,a,\\x09,a={\\x09,\\x09,"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 353
    },
    "indeg": {
      "num_nodes": 23,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 22,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(['](\\\\.|[^']|\\\\')*?['])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "a",
      "exampleString": "'a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\s*\\/\\/.*\\s*|\\s*\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/\\s*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**a"
      ],
      "pumps": [
        "*///////**a"
      ],
      "suffix": "**//*",
      "exampleString": "/**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a*///////**a**//*"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 1193
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "[A-Z](\\w|_)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A_"
      ],
      "pumps": [
        "_"
      ],
      "suffix": "#",
      "exampleString": "A___________________________________________#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-z]*)(\\-)(([0-9]{1,}|(\\.))*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ".0a",
      "exampleString": "-0000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:\\r?\\n|\\r)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(pre|code|img).*>(.|\\s)*?(</(pre|code|img)>)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<pre>"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "</p",
      "exampleString": "<pre>\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09</p"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 196
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-z_0-9]+\\.*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[+-]?(?:\\d{1,3}[.,]?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+0,"
      ],
      "pumps": [
        "00,"
      ],
      "suffix": "++",
      "exampleString": "+0,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,++"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 132
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "import[\\s]+[\\w\\d]+(\\.([\\w\\d]+|[\\*]+)+)*\\;",
    "exploitString": {
      "degree": 0,
      "separators": [
        "import\ta.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "mpor*a",
      "exampleString": "import\\x09a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaampor*a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z0-9]+(.?[-a-z0-9]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aaa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-$$",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-$$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s*\\r?\\n\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\r\n\t"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09\\x0a\\x0d\\x0a\\x09#"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\/ -- BEGIN UMD WRAPPER PREFACE --(\\n|.)*\\/\\/ -- END UMD WRAPPER PREFACE --",
    "exploitString": {
      "degree": 0,
      "separators": [
        "// -- BEGIN UMD WRAPPER PREFACE --"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "/",
      "exampleString": "//\\x20--\\x20BEGIN\\x20UMD\\x20WRAPPER\\x20PREFACE\\x20--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 331
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\[.+\\] )+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        "a] [a] ["
      ],
      "suffix": "] [",
      "exampleString": "[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[a]\\x20[]\\x20["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:[a-zA-Z0-9./]*(?:[._-][a-z0-9]?)*(?::[0-9]+)?[a-zA-Z0-9./]+(?:[._-][a-z0-9]+)*/)*[a-zA-Z0-9]+(?:[._-][a-z0-9]+)+(?::[a-zA-Z0-9._-]+)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":0"
      ],
      "pumps": [
        "a/-a//:0"
      ],
      "suffix": "0-:",
      "exampleString": ":0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:0a/-a//:00-:"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 206
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\\w\\d]+(\\.([\\w\\d]+|[\\*]+)+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a..",
      "exampleString": "a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^:contains\\(((?:\\\\\\)|.)*)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":contains("
      ],
      "pumps": [
        "\\)"
      ],
      "suffix": "ai",
      "exampleString": ":contains(\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)ai"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\<div\\s*class=\"instance\"\\>(.|\\s)*\\<\\/div>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<divclass=\"instance\">"
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "=\"i",
      "exampleString": "<divclass=\"instance\">a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09=\"i"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 180
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[0-9]([0-9]|.)*(G|M|B|K)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "0"
      ],
      "suffix": "Ba",
      "exampleString": "0000000000000000000000000000000000000000000Ba"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(:?[^#]*?#\\d+[:]{0,1}\\W+)(:?0x(?:(?:\\d|[abcdefABCDEF]){0,2})+)(:?.*?)(?:(:?\\W+at\\W+)(:?[^:]+:\\d.+)){0,1}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":#0$:0x"
      ],
      "pumps": [
        "a0"
      ],
      "suffix": "$",
      "exampleString": ":#0$:0xa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 1006
    },
    "indeg": {
      "num_nodes": 20,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 19,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-z0-9\\-]+)\\s*:\\s*([^;\\s]+(?:\\s*[^;\\s]+)*);?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\t;",
      "exampleString": "a:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09;"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "Domain Servers:\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Domain Servers:\na"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "s",
      "exampleString": "Domain\\x20Servers:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aas"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*(<=?|>=?|===?|!=|~=)\\s*((\\w|[-.*_!+])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "!=!"
      ],
      "pumps": [
        "_"
      ],
      "suffix": "\t",
      "exampleString": "!=!__________________________________________\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\/?(\\w+)((\\s+\\w+(\\s*=\\s*(?:\\\".*?\\\"|\\'.*?\\'|[\\^\\'\\\">\\s]+))?)+\\s*|\\s*)\\/?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</a\ta="
      ],
      "pumps": [
        "\t\"\ta=\t\"\ta="
      ],
      "suffix": "</\"\t",
      "exampleString": "</a\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=\\x09\"\\x09a=</\"\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 269
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(https?:\\/\\/|ircs?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*(\\/.*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$",
      "exampleString": "a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 981
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[0-9]|[1-9][0-9]+)(?:-(?:[0-9]|[1-9][0-9]+)+)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0-10"
      ],
      "pumps": [
        "010"
      ],
      "suffix": "--",
      "exampleString": "0-10010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 128
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s|\\/\\/.*?\\n|\\/\\*.*?\\*\\/)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t//\n\n"
      ],
      "suffix": "/\n/",
      "exampleString": "\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a\\x09//\\x0a\\x0a/\\x0a/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 159
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\{.*?\\})*(\\w+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{"
      ],
      "pumps": [
        "}{"
      ],
      "suffix": "}",
      "exampleString": "{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z0-9](?:[-_]*[A-Za-z0-9]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a-",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(--)?\\s*delimiter\\s*=?\\s*([^\\s]+)+\\s*.*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "delimiter=a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "delimiter=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 926
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "<\\/?([a-zA-Z0-9]+)*(.*?)\\/?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "<",
      "exampleString": "</aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\s*(?:\"([^\"]+)\"|([^\\s]+))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t\"\t\"\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09\"\\x09\"\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^DKIM-Signature: .*\\r?\\n(\\s+.*\\r?\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "DKIM-Signature: \r\n\t"
      ],
      "pumps": [
        "a\r\n\t"
      ],
      "suffix": "KI",
      "exampleString": "DKIM-Signature:\\x20\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09a\\x0d\\x0a\\x09KI"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 195
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "---(.|\\n)*---",
    "exploitString": {
      "degree": 0,
      "separators": [
        "---"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "-\n",
      "exampleString": "---a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a-\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(-----BEGIN CERTIFICATE-----\\s(\\S+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-----BEGIN CERTIFICATE-----\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "N CERTIF",
      "exampleString": "-----BEGIN\\x20CERTIFICATE-----\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaN\\x20CERTIF"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 353
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\[((?:[\\w\\-]|\\\\.)+)\\s*=\\s*['\"]?((?:\\\\.|[^'\"]+)+)['\"]?\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a=\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\\\\\"",
      "exampleString": "[a=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\\\\\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "   "
      ],
      "pumps": [
        " a    a   "
      ],
      "suffix": " a\na",
      "exampleString": "\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x0aa"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*([0-9\\.\\-]+\\s*?)+\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-"
      ],
      "pumps": [
        "--"
      ],
      "suffix": "#",
      "exampleString": "-------------------------------------------------------------------------------------#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\\\.|[^|])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "||",
      "exampleString": "a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a||"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "<([^>](\"[^\"]*\")?)*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\""
      ],
      "pumps": [
        "\"a\"\"\"a\""
      ],
      "suffix": "\">a",
      "exampleString": "<a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\"a\"\"\"a\"\">a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z_](?:[\\._-]?[a-z0-9_]+)*)(\\/[a-z_](?:[\\._-]?[a-z0-9_]+)*)+\\.d\\.ts$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-a",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "([A-Za-z0-9+/]|[A-Za-z0-9+,]|[A-Za-z0-9_-]|[A-Za-z0-9.-]|[A-Za-z0-9._]|[A-Za-z0-9_:]|[A-Za-z0-9~-]){3,}={0,2}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "~=~",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa~=~"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 192
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\\\|\\/)?(.+(\\\\|\\/))*(.+?([\\.\\-_ ]\\d{4}[\\.\\-_ ].+?(BDRip|bluray|DVDRip|XVID)).+)\\.(.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\\a\\a"
      ],
      "suffix": "\\a/ 0000 0a ",
      "exampleString": "a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a/\\x200000\\x200a\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 1101
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "h1(.|\\n|\\r)*background:\\s*#000(.|\\n|\\r)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "h1"
      ],
      "pumps": [
        "\r\r"
      ],
      "suffix": "\rbackground:",
      "exampleString": "h1\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0dbackground:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 786
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\"(?:[^\"\\\\]+|\\\\.)*\")\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\ta\"a",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\\x09a\"a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r\\n|\\r|\\n){3,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r\r"
      ],
      "pumps": [
        "\n\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*!)*([^!]+)!([^!@]+)@([^\\.]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "!a"
      ],
      "suffix": "!!.",
      "exampleString": "!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!a!!."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^---\\n?((?:.|\\n)*)\\n---\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "---\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "-\n\n---",
      "exampleString": "---\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a-\\x0a\\x0a---"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\{\\{#each (\\r|\\t|\\n|.)*?\\/each\\}\\})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{{#each "
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "#",
      "exampleString": "{{#each\\x20\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 126
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "-+(?: *\\n*)*Burak Emir(?:\\n|.)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-"
      ],
      "pumps": [
        "  "
      ],
      "suffix": " Burak ",
      "exampleString": "-\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Burak\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 730
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[netscape\\]\\s*\\n((?:.*=.*\\n)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[netscape]\n="
      ],
      "pumps": [
        "\n="
      ],
      "suffix": "s",
      "exampleString": "[netscape]\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=\\x0a=s"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^EXTSO[ \\t]*=[ \\t]*((?:.*\\\\\\n)*.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "EXTSO="
      ],
      "pumps": [
        "a\\\n"
      ],
      "suffix": "a\\",
      "exampleString": "EXTSO=a\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\\\x0aa\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 654
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\\/\\/][\\/\\*]\\s*HACK:\\s*(?:\\(([^:]*)\\))*\\s*:?\\s*(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*HACK:("
      ],
      "pumps": [
        ")()("
      ],
      "suffix": "a",
      "exampleString": "/*HACK:()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()(a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 809
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:\\\\\"|.)*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\""
      ],
      "suffix": "\\a",
      "exampleString": "\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\/(?:(?:%[[:xdigit:]]{2}|[A-Za-z0-9-_.!~*'()\\[\\]:@&=+$,;])*)?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "//"
      ],
      "suffix": "a%a",
      "exampleString": "/////////////////////////////////////////////////////////////////////////////////////a%a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\u201c([^\u201d\\\\]+|\\\\{2}|\\\\.)*\u201d",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u201ca"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\u201da",
      "exampleString": "\\x{201c}aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x{201d}a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n        --\t"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "\n\n",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20--\\x09a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 304
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "diff -r ([^\\s]+)+ ([^\\s]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "diff -r a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "diff\\x20-r\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *var (?:hasDontEnumBug|iteratesOwnLast|noArgsEnum).+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n /**a*"
      ],
      "pumps": [
        "*a*"
      ],
      "suffix": "/\n ",
      "exampleString": "\\x0a\\x20/**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a*/\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 353
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{anonymous\\}\\(.*\\)@(\\w+:\\/\\/([\\-\\w\\.]+)+(:\\d+)?[^:]+):(\\d+):?(\\d+)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{anonymous}()@a://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "o://a:00",
      "exampleString": "{anonymous}()@a://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaao://a:00"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 128
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\s*iframe[^>]*>((.|\\s)*?)<\\\\?\\/\\s*iframe\\s*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<iframe>"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "<\\/i",
      "exampleString": "<iframe>\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09<\\/i"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 149
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.+_)+(Should.+)(_.+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a_"
      ],
      "suffix": "a_S",
      "exampleString": "a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_S"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 736
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+|-)\\.(\\w+|-|\\.)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "-.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<pre><code class=\"language-(\\w+)\">((.|\\n)*?)<\\/code><\\/pre>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<pre><code class=\"language-a\">"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "pre",
      "exampleString": "<pre><code\\x20class=\"language-a\">a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0apre"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 177
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([A-Za-z0-9._-]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z0-9._%+-]+@(?:[a-z0-9-]+\\.?)*[a-z0-9]+\\.[a-z]{2,4}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a@",
      "exampleString": "a@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\(\\?[imsx]*-?[imsx]*\\:)+((\\[\\^?.+\\])|\\.)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(?"
      ],
      "pumps": [
        "-:(?i:(?"
      ],
      "suffix": "[",
      "exampleString": "(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?-:(?i:(?["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*([^\\s<]+)\\s*<([^>]+)+>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a<a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ">a\ta",
      "exampleString": "a<aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa>a\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\/(\\/.*|\\*([^*]|\\*[^\\/])*\\*\\/)[\\t\\n\\r ]*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//"
      ],
      "pumps": [
        "\t////"
      ],
      "suffix": "a",
      "exampleString": "//\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////\\x09////a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 692
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|<[^\"'>]*>|\\\\[\"'>]|[^\"'>])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "\"\\'\\'\\"
      ],
      "suffix": "<>>\\",
      "exampleString": "\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\\"\\'\\'\\<>>\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 197
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(.*/)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a/"
      ],
      "suffix": "a",
      "exampleString": "a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "([a-z]|[A-Z])([ ,\\-.\\d]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A "
      ],
      "pumps": [
        "  "
      ],
      "suffix": "A A",
      "exampleString": "A\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20A\\x20A"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(\\r\\n|\\r|\\n)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "\r\n\"",
      "exampleString": "\"\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w[\\w\\s.]+)\\s+((?:\\w+=\\S+\\s*)+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa\ta=a"
      ],
      "pumps": [
        "a=a"
      ],
      "suffix": "=a\t$",
      "exampleString": "aa\\x09a=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=a=a\\x09$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--((.|\\n|\\r\\n)*?)-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n\r\n"
      ],
      "suffix": "<",
      "exampleString": "<!--\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\[(\\\\[\\\\\\]]|[^\\]])*\\][egimosx]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": "]\\",
      "exampleString": "[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\]\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<!-- DOCS -->)(?:\\r|\\n|.)+(<!-- ENDDOCS -->)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- DOCS -->\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "S ",
      "exampleString": "<!--\\x20DOCS\\x20-->\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aS\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 160
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\w+@(\\w+.)+[a-z]{2,3}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "a$",
      "exampleString": "a@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([A-Z][a-zA-Z0-9]*\\s?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "\tAA"
      ],
      "suffix": "\t\t",
      "exampleString": "A\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<<<)((\")(\\\\(\"|\\\\)|[^\"])*(\"))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<<<\"\\"
      ],
      "pumps": [
        "\\\\\\\\"
      ],
      "suffix": "<\\\"a\"\"",
      "exampleString": "<<<\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\<\\\"a\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\*\\*([^\\*]*)*\\*\\*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "**"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a*a",
      "exampleString": "**aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa*a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(\\\\.|.)*?[\"\\n]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\a",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "([MmLlHhVvCcSs])\\s*((?:-?\\d*(?:\\.\\d+)?\\s*,?\\s*)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "C-"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "0..",
      "exampleString": "C-\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x090.."
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "http(s)?://(([a-zA-Z0-9-_]+(\\.)?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "tps..",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaatps.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[ ]{0,2}([ ]?\\*[ ]?){3,}[ \\t]*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        " *  * "
      ],
      "pumps": [
        " * *"
      ],
      "suffix": "\t*",
      "exampleString": "\\x20*\\x20\\x20*\\x20\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x09*"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 120
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "### Generated by rprotoc\\. DO NOT EDIT!\\n### <proto file: (.*)>\\n((# .*\\n)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "### Generated by rprotoc. DO NOT EDIT!\n### <proto file: >\n# "
      ],
      "pumps": [
        "\n# \n# "
      ],
      "suffix": "i",
      "exampleString": "###\\x20Generated\\x20by\\x20rprotoc.\\x20DO\\x20NOT\\x20EDIT!\\x0a###\\x20<proto\\x20file:\\x20>\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20\\x0a#\\x20i"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 188
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "`((?:.|\\n)*?)`",
    "exploitString": {
      "degree": 0,
      "separators": [
        "`"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "`\n",
      "exampleString": "`\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a`\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[A-Za-z0-9.%+\\-_]+@(?:(?:[a-zA-Z0-9]+-?)*[a-zA-Z0-9]\\.)+[A-Za-z]{2,4}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a0.a",
      "exampleString": "a@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0.a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "( \\* @method.*?\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        " * @metho"
      ],
      "pumps": [
        "d\n * @method\n * @metho"
      ],
      "suffix": "m",
      "exampleString": "\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@method\\x0a\\x20*\\x20@methom"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "yyyy|yy|y|M{1,4}|dd?|EEEE?|HH?|hh?|mm?|ss?|([.,])sss|a|Z{1,2}|ww|w|'(([^']+|'')*)'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "da",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaada"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 128
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\.\\. PYPI-BEGIN([\\r\\n]|.)*?PYPI-END",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".. PYPI-BEGIN"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "E\n",
      "exampleString": "..\\x20PYPI-BEGIN\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aE\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\s*(\\n\\s*){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "Domain status : ((.+\\n)+)\\s+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Domain status : a\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "n ",
      "exampleString": "Domain\\x20status\\x20:\\x20a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0an\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(f(,[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?)+|[CSI](,\\+?[0-9]+)+|[csi](,[-+]?[0-9]+)+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "f,+.0"
      ],
      "pumps": [
        "E0,00"
      ],
      "suffix": "C,+",
      "exampleString": "f,+.0E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00E0,00C,+"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 151
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^\\s](([^*+\\n-].+)\\n){1,})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa\naa\n"
      ],
      "suffix": "*",
      "exampleString": "aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0a*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "href=\"([^\"]+)*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "href=\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "efa\"\"",
      "exampleString": "href=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaefa\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d+)\\s(.*)\\(((\\d+,?)+)\\)\\.?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0\t(0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ",",
      "exampleString": "0\\x09(0000000000000000000000000000000000000000000000000000000000000000000000000000000000000,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<style(.*?)>(.*?[\\r\\n])*?(.*?)(.*?[\\r\\n])*?<\\/style>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<style>"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "</",
      "exampleString": "<style>\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa</"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 219
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r\\n|\\n).*On .* at .*, (.|\\r\\n|\\n)*wrote\\:(.|\\r\\n|\\n)*(\\r\\n|\\n)+(>.*(\\r\\n|\\n))+(.|\\r\\n|\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\nOn  at , "
      ],
      "pumps": [
        "\n\r\n"
      ],
      "suffix": "\n\rwro",
      "exampleString": "\\x0aOn\\x20\\x20at\\x20,\\x20\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0dwro"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 1075
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*)+\\/(\\d+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "([A-Z]+):((?:[ \\t].*\\n)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A:\t"
      ],
      "pumps": [
        "\n\t\n\t"
      ],
      "suffix": "Aa",
      "exampleString": "A:\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09Aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([\\+\\-\\(\\)\\d]*\\d[\\+\\-\\(\\)\\d]*,?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "0("
      ],
      "suffix": ",,",
      "exampleString": "0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(0(,,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(\\\\\\\\|\\\\\"|[^\"])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\"\\\\"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "(.|\\n)*?entries found.*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "entri",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aentri"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 813
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[a-zA-Z]+[a-zA-Z0-9_]*(::[a-zA-Z]+[a-zA-Z0-9_]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "::aa"
      ],
      "suffix": "a:a",
      "exampleString": "a::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aaa:a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[a-z0-9]+-?)*[a-z](?:-?[a-z0-9])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "--",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa--"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n1 BIRT(?:\\n[2-9].+)*\\n2 DATE ",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n1 BIRT\n"
      ],
      "pumps": [
        "2a\n2a\n"
      ],
      "suffix": "AT",
      "exampleString": "\\x0a1\\x20BIRT\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0aAT"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 133
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[(\\w+)(?: \"(.+)\")*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a"
      ],
      "pumps": [
        " \"a\" \"a\""
      ],
      "suffix": "[a",
      "exampleString": "[a\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"\\x20\"a\"[a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "Schema::(d|c|t|[^(]*\\(('|\")(.*)('|\"))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Schema::("
      ],
      "pumps": [
        "\"\"(\"\"("
      ],
      "suffix": "e",
      "exampleString": "Schema::(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(\"\"(e"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 126
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "Version.*?((\\\\d+\\\\.)?(\\\\d+\\\\.)?(\\\\*|\\\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Version"
      ],
      "pumps": [
        "\\\\"
      ],
      "suffix": "a",
      "exampleString": "Version\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 754
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\d)+.?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "aa",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\"[^\"]*\"|\\'[^\\']*\\'|[^\\|\"]+|[^\\|\\']+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "|\"a|'|",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa|\"a|'|"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^'((?:\\\\[\\\\']|.+)+)'\\s*(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\\",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 669
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\[(.+?)\\])?\\{@(link|linkcode|linkplain)\\s+((?:.|\\n)+?)\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{@link\t\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "l",
      "exampleString": "{@link\\x09\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0al"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 184
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^-]*[A-Z??????????a-z??????????0-9][^-]*)(-[^-]*[A-Z??????????a-z??????????0-9][^-]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "a-aa"
      ],
      "suffix": "a--",
      "exampleString": "a-aa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z0-9])(([-.]|[_]+)?([a-zA-Z0-9]+))*(@){1}[a-z0-9]+[.]{1}(([a-z]{2,3})|([a-z]{2,3}[.]{1}[a-z]{2,3}))$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\s+)*.+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "a",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 665
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:(.+[^\\\\])\\/(.*[^\\\\])*\\/){1,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa/"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\a",
      "exampleString": "aa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\<div\\>(.|\\s)*\\<\\/div>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<div>"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "</d",
      "exampleString": "<div>\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09</d"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\n\\r]\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<([a-z0-9-]+)((?:\\s[a-z0-9:_.-]+=\".*?\")+)((?:\\s*\\/)?>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\ta"
      ],
      "pumps": [
        "=\"\"\ta=\"\"\ta"
      ],
      "suffix": "=",
      "exampleString": "<a\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a=\"\"\\x09a="
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\w\\(\\)]+[\\s\\._-]([\\w\\(\\)]+[\\s\\._-])+[\\w\\(\\)]+-\\w+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\ta"
      ],
      "pumps": [
        "_a"
      ],
      "suffix": "a_(",
      "exampleString": "a\\x09a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_aa_("
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\{(.*?)\\})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{"
      ],
      "pumps": [
        "}{}{"
      ],
      "suffix": "{",
      "exampleString": "{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{{"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^---[ \\t]+?(?:[ \\t]*((?:\\w+:\\S*[ \\t]*)*))?(?:[ \\t]+-+[ \\t]*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "---\ta"
      ],
      "pumps": [
        ": a"
      ],
      "suffix": "-\t:",
      "exampleString": "---\\x09a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a:\\x20a-\\x09:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 162
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "(GET|DELETE|PATCH|POST) (\\S+)(?:.|\\r?\\n)+\\r?\\n(.*)\\r?\\n$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "POST aa"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "C",
      "exampleString": "POST\\x20aa\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aC"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 183
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\t+| +)+(-?\\d+\\.?\\d*) = \\\"(.*)\\\"$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\t",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(.+\\/)*(([^/]+)\\.[^/.]*|[^/.]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "/a"
      ],
      "suffix": "/",
      "exampleString": "a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\-\\w*m\\w*|\\-\\-message)(\\s*|(='(?:\\\\.|[^'])*'|\\\"(?:\\\\.|[^\\\"])*\\\"))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-m='"
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "sag\"'\\",
      "exampleString": "-m='a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\asag\"'\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 228
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\s*\\r?\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\n\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(---+(.|\\n)+---+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "---"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "-\n",
      "exampleString": "---a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a-\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 132
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[\\s\\/\\.]?(\\w+([\\s\\/\\.]+\\w+))+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "a\taa"
      ],
      "suffix": "\ta\ta\t",
      "exampleString": "\\x09a\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aa\\x09a\\x09a\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([a-z0-9]+([.][a-z0-9])* ?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " a..",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20a.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "([.?!]|\\n{2,}|\\r\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "!"
      ],
      "pumps": [
        "\n\n\n\n!"
      ],
      "suffix": "\r!",
      "exampleString": "!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0a\\x0a\\x0a\\x0a!\\x0d!"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\w)+((-)*(\\w)*)*):",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "--"
      ],
      "suffix": "a::",
      "exampleString": "a------------------------------------------------------------------------------------a::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/(l|t.?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/l"
      ],
      "pumps": [
        "ttl"
      ],
      "suffix": "tl/",
      "exampleString": "/lttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttlttltl/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([[:space:]]|[[:cntrl:]]|[\\\\\\\\/:*?\\\"<>|])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\":"
      ],
      "suffix": "#",
      "exampleString": "\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":\":#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\{.*?:.*?\\})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{:}"
      ],
      "pumps": [
        "{:}{:}"
      ],
      "suffix": "a",
      "exampleString": "{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}{:}a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "Version:<\\/strong>\\s((\\d+\\.?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Version:</strong>\t0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ">\t",
      "exampleString": "Version:</strong>\\x090000000000000000000000000000000000000000000000000000000000000000000000000000000000000>\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": ".*?<H1>(<a.*a>)*[\\d\\.\\s]*(.*?)</H1>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<H1><a"
      ],
      "pumps": [
        "a><aa><a"
      ],
      "suffix": "<",
      "exampleString": "<H1><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><aa><a<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 179
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\w-!]+)(=\"?((([\\w]+(\\[.*?\\])+)|[^\"\\]]|\\\\\")+)\"?)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a=\"a[]"
      ],
      "pumps": [
        "[a[]"
      ],
      "suffix": "=\"\"",
      "exampleString": "a=\"a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[][a[]=\"\""
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 166
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(\\\\\\\\|\\\\\"|[^\\n\"])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\"\\\\"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<table class=\"infobox(.|\\n)*?<span.*?>(.*?)</span>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<table class=\"infobox"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "l",
      "exampleString": "<table\\x20class=\"infobox\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0al"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 236
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "mot[\\s-]?(\\w+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "mot\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "moa\t",
      "exampleString": "mot\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaamoa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\"[^\\r\\n\"]*\"|'[^\\r\\n']*'|[\\s\\r\\n;]*|\\/\\*[\\w\\W]*?\\*\\/|\\/\\/[^\\n]*\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "//'/",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09//'/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s*\\n){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\#\\!.*\\n(\\#.*\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#!\n"
      ],
      "pumps": [
        "#\n#\n"
      ],
      "suffix": "#",
      "exampleString": "#!\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 133
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(:\\/\\/)|(\\\\+|\\/{2,})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "\\\\"
      ],
      "suffix": ":",
      "exampleString": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w+(\\.\\w+)*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "..",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:[^\"]*|\\\\.)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\"\"",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 70
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*?)(?:,((N|S|B|NS|SS|BS)=(.*?))(:(N|S|B|NS|SS|BS)=(.*?))*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ",N"
      ],
      "pumps": [
        "S=:B=:B=,N"
      ],
      "suffix": "S",
      "exampleString": ",NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS=:B=:B=,NS"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 826
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d+\\.?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "..",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 70
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*expected\\s+((?:.|[\\r\\n])+?)\\s*\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*expected\t\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\ta",
      "exampleString": "/*expected\\x09\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s|\\n)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s|\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n\\s*){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^http[s]?://(.*?\\.)*?[a-z0-9\\-]+\\.[a-z]{2,4}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://"
      ],
      "pumps": [
        ".a"
      ],
      "suffix": "a.a",
      "exampleString": "https://.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.aa.a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 141
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".a"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "..",
      "exampleString": ".aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((IE=edge,.*|width=device-width.*|(https?:\\/\\/|\\/)[\\w@\\/\\.]+|@[\\-\\w]+@|\\{[^\\{\\}]+\\}|[^a-zA-Z]*|(&nbsp;)+)\\s*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "$$"
      ],
      "suffix": "$width",
      "exampleString": "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$width"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 2045
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\\\\\{.*?)*(\\{.*?\\})(\\\\\\})*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\{"
      ],
      "pumps": [
        "\\{"
      ],
      "suffix": "}\\{\\",
      "exampleString": "\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\{}\\{\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\<!--(?:.|\\n)*?--\\>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "!-",
      "exampleString": "<!--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a!-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\*+)\\s+(.*?)(\\s+(:\\S+:)+)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*\t\t"
      ],
      "pumps": [
        ":a::a:"
      ],
      "suffix": "a",
      "exampleString": "*\\x09\\x09:a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a::a:a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 789
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z_]+(([-.])?[a-zA-Z0-9_]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0--",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0--"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*?)\\.?(\\d+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ".",
      "exampleString": ".0000000000000000000000000000000000000000000000000000000000000000000000000000000000000."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^return[\\s\\r\\n]+((?:'(?:\\\\'|[^']+)+')|(?:\"(?:\\\\\"|[^\"]+)+\")|\\d+)[\\s\\r\\n]*;?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "return\t'a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "e",
      "exampleString": "return\\x09'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n\\s*\\n\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^got the first bookmark's date should less than ((\\w+|-)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "got the first bookmark's date should less than a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "st boo",
      "exampleString": "got\\x20the\\x20first\\x20bookmark's\\x20date\\x20should\\x20less\\x20than\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaast\\x20boo"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 249
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(`?[\\w\\W])*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "``a"
      ],
      "suffix": "a",
      "exampleString": "\"``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``a``aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^on(_\\w+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "on_"
      ],
      "pumps": [
        "a_a_"
      ],
      "suffix": "#",
      "exampleString": "on_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n  \\n  ((?:.|\\n)*?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n  \n  "
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a\\x20\\x20\\x0a\\x20\\x20\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 683
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^<!-- Start:AutoTable((.*?(\\n))+.*?)End:AutoTable -->$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- Start:AutoTable"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "a",
      "exampleString": "<!--\\x20Start:AutoTablea\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 174
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:<[^>]*?>|\\\"[^\\\"]*?\\\"|[^,])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\"\"\"\"\""
      ],
      "suffix": ",\",>,",
      "exampleString": "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",\",>,"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([ \\t]*[\\r\\n]+)+|([\\r\\n]+[ \\t]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "name-69\\.99(?:.|\\n|\\r)*bg-warning(?:.|\\n|\\r)*text-warning(?:.|\\n|\\r)*69\\.99(?:.|\\n|\\r)*<th class=\"text-center\">2<\\/th><\\/tr>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "name-69.99"
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "te",
      "exampleString": "name-69.99\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0dte"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 763
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "\"(\\\\\\\\|\\\\\"|[^\"\\n])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\"\\\\"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^edge ([^ ]+)+ ([^ ]+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "edge a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "edg  ",
      "exampleString": "edge\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaedg\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*[*+-](\\s+(.|\\n)+?))(\\n\\n|\\n\\s*[*+-])",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*\t"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "*\t",
      "exampleString": "*\\x09a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a*\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[#.](?:[\\w-]|\\\\(?:[a-fA-F0-9]{1,6} ?|[^a-fA-F0-9]))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#\\"
      ],
      "pumps": [
        "aaaaaa\\"
      ],
      "suffix": "\\a$",
      "exampleString": "#\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\\\a$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([\\w]+)(\\(([\\d]+)*(,([\\d]+))*\\))*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a(0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a0",
      "exampleString": "a(0000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\n.+?\\n.+?\\n)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\na\na"
      ],
      "pumps": [
        "\n\na\na\n\na\na"
      ],
      "suffix": "a",
      "exampleString": "\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aa\\x0a\\x0aa\\x0aaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*this\\.\\w+\\s*=\\s*[\\\"\\']\\$(.|\\s)*?[\\\"\\'];",
    "exploitString": {
      "degree": 0,
      "separators": [
        "this.a=\"$"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\tth",
      "exampleString": "this.a=\"$\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09th"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*/)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a/"
      ],
      "suffix": "a",
      "exampleString": "a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n               closes:\n               #\t0\n               "
      ],
      "pumps": [
        ",\t0"
      ],
      "suffix": "\n",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20closes:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20#\\x090\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090,\\x090\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 255
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[\\(\uff08]?(\\d+\\.?)+[^\\d]{2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "(0a0",
      "exampleString": "(0000000000000000000000000000000000000000000000000000000000000000000000000000000000000(0a0"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z](-?[a-z0-9]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "--",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa--"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.+-)+.+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "-a-a"
      ],
      "suffix": "a",
      "exampleString": "a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 641
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^ *\\t*(?:import|from)[ ]+(?:(\\w+)[, ]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "from a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "from\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^/]|\\\\.)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "a\\\\a\\"
      ],
      "suffix": "//",
      "exampleString": "\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\//"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *var hasDontEnumBug;|.+?hasDontEnumBug *=.+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n /**"
      ],
      "pumps": [
        "a**a*"
      ],
      "suffix": "a*",
      "exampleString": "\\x0a\\x20/**a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**a*a*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 863
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w+)(\\(((\\w|\\d|\\.)+,?)*\\))?\\.",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a(0"
      ],
      "pumps": [
        "0aa"
      ],
      "suffix": "a.(",
      "exampleString": "a(00aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aaa.("
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/([a-z\\-0-9]+)\\.(gif|js|css|png)(\\?.*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a.png"
      ],
      "pumps": [
        "??"
      ],
      "suffix": "a",
      "exampleString": "/a.png????????????????????????????????????????????????????????????????????????????????????a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 729
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"([^\"]*(&[ ]*[\\n\\r]+)?)*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\na&",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x0aa&"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": ",\\s+(\\d+)[\\s-]+(\\w+)+[\\s-]+(\\d+)\\s+(\\d+)[:-](\\d+)[:-](\\d+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ",\t0\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-a\t0\t0",
      "exampleString": ",\\x090\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-a\\x090\\x090"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "Firefox\\/([^;)]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Firefox/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ")",
      "exampleString": "Firefox/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(((.*?(?:\\ \\*)?)\\s*\\*?)+)\\s+(\\w+)\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t **"
      ],
      "suffix": "* ",
      "exampleString": "\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20**\\x09\\x20***\\x20"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": " <! ( -- .*? -- \\s* )+ > ",
    "exploitString": {
      "degree": 0,
      "separators": [
        " <!  --  -- "
      ],
      "pumps": [
        "  --  --   --  -- "
      ],
      "suffix": "-",
      "exampleString": "\\x20<!\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20\\x20\\x20--\\x20\\x20--\\x20-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(((.*)*)*\u0100)foo",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\u0100",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x{100}"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "# yamllint enable(( rule:\\S+)*)\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "# yamllint enable rul"
      ],
      "pumps": [
        "e:a rule:a rul"
      ],
      "suffix": "n\t:",
      "exampleString": "#\\x20yamllint\\x20enable\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20ruln\\x09:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 133
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.|[\\r\\n])*?-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "->-",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a->-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        "a]\\[\\]["
      ],
      "suffix": "[][`][[",
      "exampleString": "[a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][a]\\[\\][[][`][["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\*\\* Registrant:\\n((?:\\s+.+\\n)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "** Registrant:\n\ta"
      ],
      "pumps": [
        "\n\ta"
      ],
      "suffix": "s",
      "exampleString": "**\\x20Registrant:\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09a\\x0a\\x09as"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 113
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\033\\[(?:\\d+\\;?)+m",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u001b[0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\u001b",
      "exampleString": "\\x1b[0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x1b"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "GlobalSection\\(ProjectConfigurationPlatforms\\) = postSolution((?:.|\\n)*?)EndGlobalSection",
    "exploitString": {
      "degree": 0,
      "separators": [
        "GlobalSection(ProjectConfigurationPlatforms) = postSolution"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "t",
      "exampleString": "GlobalSection(ProjectConfigurationPlatforms)\\x20=\\x20postSolutiona\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0at"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 237
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "<img(.|\\n)*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<img"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "i",
      "exampleString": "<imga\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ai"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<a(.|\\n)*?>(.|\\n)*?(<\\/a>){1}?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "<",
      "exampleString": "<a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--START_FLAGS-->(?:.|\\r|\\n)+<!--END_FLAGS-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--START_FLAGS-->"
      ],
      "pumps": [
        "a\r"
      ],
      "suffix": "T_F",
      "exampleString": "<!--START_FLAGS-->a\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0dT_F"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 151
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\n1 OBJE(?:\\n[2-9].+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n1 OBJE\n"
      ],
      "pumps": [
        "2a\n2a\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a1\\x20OBJE\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0a2a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 697
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([;\\s]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(?:(?:(?:(?:(matrix)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\))|(?:(translate)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(scale)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(rotate)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(skewX)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\))|(?:(skewY)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\)))(?:(?:\\s+,?\\s*|,\\s*)(?:(?:(matrix)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\))|(?:(translate)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(scale)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(rotate)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(skewX)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\))|(?:(skewY)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\))))*)?)\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "skewX(+0),rotate(+0"
      ],
      "pumps": [
        "),matrix(0,0,0,0\t\t0,0),rotate(0\t"
      ],
      "suffix": "0",
      "exampleString": "skewX(+0),rotate(+0),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x09),matrix(0,0,0,0\\x09\\x090,0),rotate(0\\x090"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 2840
    },
    "indeg": {
      "num_nodes": 383,
      "exec_time": 3
    },
    "ancestor": {
      "num_nodes": 332,
      "exec_time": 3
    }
  },
  {
    "pattern": "playstation 3(?:\\D+([\\d.]+))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "playstation 3a"
      ],
      "pumps": [
        ".."
      ],
      "suffix": "t$",
      "exampleString": "playstation\\x203a....................................................................................t$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "Available: jasmine: versions\\[(\\d+\\.\\d+\\.\\d+,?\\s?)+\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Available: jasmine: versions[0.0"
      ],
      "pumps": [
        ".000.0"
      ],
      "suffix": "0.",
      "exampleString": "Available:\\x20jasmine:\\x20versions[0.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.00."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 158
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\w+) (?:\\((\\d+)+\\))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a (0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a0",
      "exampleString": "a\\x20(0000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "([0-9]+).([0-9]+).([0-9]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0a0a0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0aa",
      "exampleString": "0a0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--(.|\\n)*-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "!-",
      "exampleString": "<!--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a!-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<textarea ((?:\"[^\"]*\"|'[^']*'|[^'\"<>]*)*)>(.*?)<\\/textarea.*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<textarea "
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ar</'</\"</textare",
      "exampleString": "<textarea\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaar</'</\"</textare"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 155
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 62
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^ \"]+|\"[^\"]*\")+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " \" ",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20\"\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "X<+(([^>]|E<[^>]*>)*?)>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "X<"
      ],
      "pumps": [
        "E<E<>"
      ],
      "suffix": "a",
      "exampleString": "X<E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>E<E<>a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s*|\\t*)public(\\s+)class(\\s+)(.*?)(\\s*)((extends|implements)(.*?)(\\s*))*\\{",
    "exploitString": {
      "degree": 0,
      "separators": [
        "public\tclass\timplem"
      ],
      "pumps": [
        "entsimplementsimplem"
      ],
      "suffix": "i",
      "exampleString": "public\\x09class\\x09implementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplementsimplemi"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 220
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\s\\n]*<[^>]*>[\\s\\n]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "<>\t\t"
      ],
      "suffix": "a>>",
      "exampleString": "<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09<>\\x09\\x09a>>"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:[^\\\\\\r\\n]|\\\\?(?:\\r\\n|[\\s\\S]))*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\\"
      ],
      "pumps": [
        "\r\n\\"
      ],
      "suffix": "\r",
      "exampleString": "\"\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d\\x0a\\\\x0d"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\xCF*[0-9]{2}\\xCF*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "00"
      ],
      "pumps": [
        "\u00cf00\u00cf"
      ],
      "suffix": "\u00cf0\u00cf",
      "exampleString": "00\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf0\\xcf"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n[ \\t]*\\|.+\\|[^\\n]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n|a"
      ],
      "pumps": [
        "|\n|a"
      ],
      "suffix": "a\na",
      "exampleString": "\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|a|\\x0a|aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\*[\\t| ]\\@([^\\n|\\t| ]+)(?:[\\t| ]([^\\n]+))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*\t@a"
      ],
      "pumps": [
        "\ta\ta"
      ],
      "suffix": "\n",
      "exampleString": "*\\x09@a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "--TEST--\\s*(.*?)\\s*(?:--CONDITION--\\s*(.*))?\\s*((?:--TEMPLATE(?:\\(.*?\\))?--(?:.*?))+)--DATA--.*?--EXPECT--.*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "--TEST----TEMPLAT"
      ],
      "pumps": [
        "E()----TEMPLATE()----TEMPLAT"
      ],
      "suffix": "E()--)--DA",
      "exampleString
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 1273
    },
    "indeg": {
      "num_nodes": 17,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 17,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*\\s+?)*([A-Z]+)(([0-9]+)(_([0-9]+))?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "Aa",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09Aa"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "https?://[a-z0-9-]+(.[a-z0-9-]+)+(/?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://aa"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "ps/:",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaps/:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\'((?:\\\\.|[^\\'])*)\\'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(doc_perl_install\\s+::\\s+(.+\\n)+)([ \\t]*\\n)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "doc_perl_install\t::\ta"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "s",
      "exampleString": "doc_perl_install\\x09::\\x09a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aas"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 137
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([ \\t]+[^\\s\\n*+=-].+\\n){2,})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\taa\n\taa"
      ],
      "pumps": [
        "\n\t aa"
      ],
      "suffix": " a\n\t",
      "exampleString": "\\x09aa\\x0a\\x09aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x0a\\x09\\x20aa\\x20a\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[^\\d]+(\\d+)[^\\d]+(\\d+(?:(?:,\\d+)*)+(?:.\\d+)*).*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a0a0,0"
      ],
      "pumps": [
        ",00"
      ],
      "suffix": "a",
      "exampleString": "a0a0,0,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 708
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*\\n)*(\\ *#\\=\\ *require\\ +.*\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\na"
      ],
      "suffix": " #a",
      "exampleString": "\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x20#a"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "@(-?\\d+\\.\\d+),(-?\\d+\\.\\d+),(\\d+\\.?\\d?)+z",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@-0.0,-0.0,0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "@-0.",
      "exampleString": "@-0.0,-0.0,0000000000000000000000000000000000000000000000000000000000000000000000000000000000000@-0."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\w.!~*'|;:&=+$,-]+@)?(([A-Za-z0-9]+[A-Za-z0-9\\-]*[A-Za-z0-9]+\\.)*([A-Za-z0-9]+\\.)*)*([A-Za-z]+[A-Za-z0-9\\-]*[A-Za-z0-9]+)\\.?(:\\d*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa.."
      ],
      "suffix": "a.a",
      "exampleString": "aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..aa..a.a"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 15,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:<(?:div|p|ol|ul|li|pre|code|object)[^>]*>)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<"
      ],
      "pumps": [
        "code><pre><"
      ],
      "suffix": "o",
      "exampleString": "<code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><code><pre><o"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 151
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<!--.+-->)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-"
      ],
      "pumps": [
        "-a--><!--a--><!-"
      ],
      "suffix": "<",
      "exampleString": "<!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!--a--><!-<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:.*\\r?\\n)*([0-9]{3})( [^\\r\\n]*)?\\r?\\n$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\n\r\n"
      ],
      "suffix": "0\n0",
      "exampleString": "\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a0\\x0a0"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:msie |rv:)(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "rv:0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "rv:0._00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(sam[sung]*)[\\s-]*(\\w+-?[\\w-]*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "sama"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "sA\t",
      "exampleString": "samaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaasA\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\/ START[\\r\\n]*((.|[\\r\\n])*)\\/\\/ END",
    "exploitString": {
      "degree": 0,
      "separators": [
        "// START"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": " ST",
      "exampleString": "//\\x20START\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20ST"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\w\\w\\w\\s+\\d+ \\d\\d:\\d\\d:\\d\\d (?:\\w|-|\\.|_)+ ",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aaa\t0 00:00:00 "
      ],
      "pumps": [
        "__"
      ],
      "suffix": "0",
      "exampleString": "aaa\\x090\\x2000:00:00\\x20____________________________________________________________________________________0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*#.*)*\\s*([\\/{]|sub|BEGIN|END|\\w+:\\s*\\/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#"
      ],
      "pumps": [
        "#"
      ],
      "suffix": "EGEN",
      "exampleString": "###########################################EGEN"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 199
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\/?(\\w+)(?:(?:\\s+(?:\\w|\\w[\\w-]*\\w)(?:\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</a\ta"
      ],
      "pumps": [
        "a=\"\"\ta=\"\"\ta"
      ],
      "suffix": "</",
      "exampleString": "</a\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09aa=\"\"\\x09a=\"\"\\x09a</"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 193
    },
    "indeg": {
      "num_nodes": 19,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 0
    }
  },
  {
    "pattern": "edge\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "edge/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "e",
      "exampleString": "edge/0._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000e"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\s*\\n)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\\\?[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\a"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "\\\\",
      "exampleString": "\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d*\\.(?:[0-9]*[1-9]|[1-9])*)0+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "."
      ],
      "pumps": [
        "11"
      ],
      "suffix": "01",
      "exampleString": ".11111111111111111111111111111111111111111111111111111111111111111111111111111111111101"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([=-]*)([^:=]+):([^\\(\\s]+)\\([\\\"'](.+)[\\\"']\\s*((?:<.+>)*)\\s*([^\\)]+)?\\)\\s+(.+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:a(\"a\""
      ],
      "pumps": [
        "<a><a>"
      ],
      "suffix": "<",
      "exampleString": "a:a(\"a\"<a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 972
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\"(\\\\.|[^\"])*\")",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[ ]*(- )*(\\w+)+[: ]+(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 754
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a['"
      ],
      "pumps": [
        "'][\"\"].a[\"\"]['"
      ],
      "suffix": "0",
      "exampleString": "a[''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"][''][\"\"].a[\"\"]['0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 167
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\[\\s*(\\w+)\\s*\\]|([^\\s\\[]+\\s?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\ta[",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09a["
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "Some previous changelog.(\\s|.)*First commit",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Some previous changeloga"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "mmi",
      "exampleString": "Some\\x20previous\\x20changeloga\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09mmi"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[\\s*.*?(?:\\s*,\\s*.*?)*\\s*\\]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[,"
      ],
      "pumps": [
        "\t,"
      ],
      "suffix": "\t",
      "exampleString": "[,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09,\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 152
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\s*[,]?\\s*[a-zA-Z0-9_]+)*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ",a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\t)",
      "exampleString": ",aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09)"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "time=(([0-9]|:|.)+) bitrate",
    "exploitString": {
      "degree": 0,
      "separators": [
        "time="
      ],
      "pumps": [
        ":0"
      ],
      "suffix": "tr",
      "exampleString": "time=:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0tr"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(http://)?(m.finn.no)(/.+/)+search.html(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "mafinnano"
      ],
      "pumps": [
        "/a///a/"
      ],
      "suffix": "/",
      "exampleString": "mafinnano/a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//a///a//"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 663
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**a*"
      ],
      "pumps": [
        "**"
      ],
      "suffix": "*a",
      "exampleString": "/**a**************************************************************************************a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "(rekonq)\\/([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "rekonq/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ekon/",
      "exampleString": "rekonq/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaekon/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--API-REF-->((?:.|[\\r\\n])*)<!--END-API-REF-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--API-REF-->"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "PI-",
      "exampleString": "<!--API-REF-->\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aPI-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 145
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*\\/)+([0-9]+)\\-(.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "/a"
      ],
      "suffix": "/0-",
      "exampleString": "/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/0-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 619
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*, )*CN=(.+?)(, .*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a, "
      ],
      "suffix": "a, ",
      "exampleString": "a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20a,\\x20"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 650
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\/[a-zA-Z]+\\/[0-9]+)(\\?.*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a/0"
      ],
      "pumps": [
        "??"
      ],
      "suffix": "a",
      "exampleString": "/a/0????????????????????????????????????????????????????????????????????????????????????a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 672
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?: *\\/\\/.*\\s*)* *lodash\\.forIn *= *.+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//"
      ],
      "pumps": [
        "\t//"
      ],
      "suffix": "o/",
      "exampleString": "//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//\\x09//o/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 186
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\S+\\.)+\\S+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        ".a.a"
      ],
      "suffix": "\t",
      "exampleString": "a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n?```[^\\n]+hidden(?:.*\\n)+?```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n```ahidden\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\n`",
      "exampleString": "\\x0a```ahidden\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a`"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\"((?:[^\"]+|\\\\.)*)\"|((?:[^\\\\\\s]+|\\\\.)*))\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"a\"\t\\",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"a\"\\x09\\"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[a-z](?:-?[a-z]+)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "--",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa--"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([_a-zA-Z]\\w*)*:[a-zA-Z]\\w*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "_::",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:\\\\.|[^= ]+)*)=(\"(?:\\\\.|[^\"\\\\]+)*\"|(?:\\\\.|[^ \"\\\\]+)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"a\\",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\"a\\"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-zA-Z][a-zA-Z0-9_$\\.]*)(?:<((?:,{0,1}[a-zA-Z][a-zA-Z0-9_$\\.]*)*)>){0,1}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a<"
      ],
      "pumps": [
        ",aa"
      ],
      "suffix": "$<",
      "exampleString": "a<,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa,aa$<"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "custom-api-check.*?formly-field(.|\\n)*?className",
    "exploitString": {
      "degree": 0,
      "separators": [
        "custom-api-checkformly-field"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "m-a",
      "exampleString": "custom-api-checkformly-field\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0am-a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 182
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": ".*<BODY>\\n\\n((\\s|\\d|\\n|\\w|\\[|\\]|:|;|=|<|>)*?)\\n<HR>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<BODY>\n\n"
      ],
      "pumps": [
        ":\n"
      ],
      "suffix": "H",
      "exampleString": "<BODY>\\x0a\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0a:\\x0aH"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 217
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "((\\\"[^\\\"]*\\\")|[^ ])((\\\"[^\\\"]*\\\")*[^ ]?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\"\"\""
      ],
      "suffix": " \"\" ",
      "exampleString": "a\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\x20\"\"\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "arn:aws:iam::[0-9]+:mfa\\/([\\w+=,.@-]+)*|automatic",
    "exploitString": {
      "degree": 0,
      "separators": [
        "arn:aws:iam::0:mfa/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "m:",
      "exampleString": "arn:aws:iam::0:mfa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaam:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\w+\\s*\\$\\w+\\s*=(.|\\s)*?;",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a$a="
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "$a\t",
      "exampleString": "a$a=\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09$a\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "[A-Z]+(\\s*((\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A["
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "A\\",
      "exampleString": "A[a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09A\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\(()"
      ],
      "suffix": "\t\u0000",
      "exampleString": "a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()a\\(()\\x09\\x00"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^-{3}((.|\\n)*)-{3}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "---"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "-\n--",
      "exampleString": "---\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a-\\x0a--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\$\\{)(?:[[:alpha:]\\$]|::)(?:[[:alnum:]\\$]|::)*(\\})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "${a"
      ],
      "pumps": [
        "::::"
      ],
      "suffix": "${",
      "exampleString": "${a::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::${"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<!-- MarkdownTOC .*?-->\\n+)((?:\\s|.)*?)(\\n+<!-- \\/MarkdownTOC -->)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- MarkdownTOC -->\n"
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "kdo",
      "exampleString": "<!--\\x20MarkdownTOC\\x20-->\\x0aa\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09kdo"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 215
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z0-9]+_?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "__",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa__"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": " *\\'((?:\\\\.|[^\\'])*)\\' *",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\a\\a"
      ],
      "suffix": " 'a''",
      "exampleString": "'\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\x20'a''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^deep:|(\\.[^}]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ".a.a"
      ],
      "suffix": "}",
      "exampleString": ".a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a}"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n     Q   \n"
      ],
      "pumps": [
        "   Q   \r\n   Q   \n"
      ],
      "suffix": "T \t Consensus ",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0d\\x0a\\x20\\x20\\x20Q\\x20\\x20\\x20\\x0aT\\x20\\x09\\x20Consensus\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 9780
    },
    "indeg": {
      "num_nodes": 58,
      "exec_time": 2
    },
    "ancestor": {
      "num_nodes": 50,
      "exec_time": 1
    }
  },
  {
    "pattern": "(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])",
    "exploitString": {
      "degree": 0,
      "separators": [
        "![@escap"
      ],
      "pumps": [
        "es@escapes@escap"
      ],
      "suffix": "a]c",
      "exampleString": "![@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapa]c"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([A-Z]+[a-z]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "#",
      "exampleString": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<head>((.|\\n)*)<\\/head>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<head>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "ead",
      "exampleString": "<head>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aead"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?: {4}|\\t).*\\S.*\\n((?: {4}|\\t).*\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\ta\n"
      ],
      "pumps": [
        "\t\n\t\n"
      ],
      "suffix": "   ",
      "exampleString": "\\x09a\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x20\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(git version\\s*)?((\\.?\\d+)+).*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a",
      "exampleString": ".0000000000000000000000000000000000000000000000000000000000000000000000000000000000000a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 606
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(((((\\*)|(/*)|(-*))(\\s*)%([aAbBdeHIjmMLpSUwWyYZ]{1}))+)|((\\s*)%([cxX]{1})))$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%a"
      ],
      "pumps": [
        "\t%aa"
      ],
      "suffix": "\t*",
      "exampleString": "%a\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09%aa\\x09*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\\\f\\d.+?;)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\f0a"
      ],
      "pumps": [
        ";\\f0a;\\f0a"
      ],
      "suffix": "\\f",
      "exampleString": "\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a;\\f0a\\f"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[A-Z]([A-Z\\d$]+_?)*[A-Z\\d$]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A$"
      ],
      "pumps": [
        "$$"
      ],
      "suffix": "$__",
      "exampleString": "A$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$__"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\w\\:\\\\(.+\\\\)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:\\a"
      ],
      "pumps": [
        "\\a\\a"
      ],
      "suffix": "a",
      "exampleString": "a:\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*[\\\"|\\']([^\\\"\\']+)[\\\"|\\']\\s*([^\\[]*)(\\[.*\\]\\s*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a\"["
      ],
      "pumps": [
        "][]["
      ],
      "suffix": "a]|[",
      "exampleString": "\"a\"[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][a]|["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s--env\\s([^\\s]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t--env\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "en\t",
      "exampleString": "\\x09--env\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaen\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:.|\\n)*<html[^>]*>\\s*)((?:.|\\n)*?)(\\s*<\\/html>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "ml<ht",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aml<ht"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 177
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<title(\\s+[^>]+)*>(.*)<\\/title\\s*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<title\ta"
      ],
      "pumps": [
        "\ta"
      ],
      "suffix": "<titl",
      "exampleString": "<title\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a<titl"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 142
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[\\w$]+(?:\\.[\\w$]+)*|\"(?:[^\"]|\\.)*\")",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "."
      ],
      "suffix": "a.\"\"",
      "exampleString": "\"..........................................a.\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-zA-Z]+[0-9]*)+(\\.[a-zA-Z]+[0-9]*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a0..",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n            a\n             aindent-char:"
      ],
      "pumps": [
        "tab\n            \n                aindent-size:::aindent-size::\n                 aindent-char:"
      ],
      "suffix": "\n                ",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:tab\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-size:::aindent-size::\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aindent-char:\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 484
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\.+\\/*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "."
      ],
      "pumps": [
        ".."
      ],
      "suffix": "#",
      "exampleString": ".....................................................................................#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "#\\{\\{([A-Z_$?]|[a-z_0-9$?]|\\.)+\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#{{"
      ],
      "pumps": [
        "a$"
      ],
      "suffix": "{#",
      "exampleString": "#{{a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a${#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "(([a-zA-Z]+\\s*)+)(\\s[0-9]+\\s[0-9]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+[.|\\w])*@\\[?(\\w+[.])*\\w+\\]?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "a..",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "((.*?)((\\.[a-zA-Z]{1}.*?\\))+))",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".a"
      ],
      "pumps": [
        "a).a"
      ],
      "suffix": "$",
      "exampleString": ".aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).aa).a$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z0-9\\-',\\/ ]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:(?:(?:\\||\\+)(?:[ :]*\\-+[ :]*)(?:\\||\\+))|(?:(?:[ :]*\\-+[ :]*)(?:\\||\\+)(?:[ :]*\\-+[ :]*))|(?:(?:[ :]*\\-+[ :]*)(?:\\||\\+))|(?:(?:\\||\\+)(?:[ :]*\\-+[ :]*)))+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+-"
      ],
      "pumps": [
        " ++--+--++-"
      ],
      "suffix": "-++ ",
      "exampleString": "+-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++-\\x20++--+--++--++\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 421
    },
    "indeg": {
      "num_nodes": 22,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(.|\\n)*%>",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "%",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a%"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*%node_condition%((?:.|[\\s\\S])*?)%(.*?)%(\\d+)%\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*%node_condition%"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "it",
      "exampleString": "/*%node_condition%aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaait"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(android|webos|palm\\sos|qnx|bada|rim\\stablet\\sos|meego|contiki)[\\/\\s-]?([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "qnx\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "m\ttable",
      "exampleString": "qnx\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaam\\x09table"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 191
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "<!DOCTYPE (\\w(.|\\n)*)\">",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!DOCTYPE a"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "E",
      "exampleString": "<!DOCTYPE\\x20a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aE"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "([[:alnum:]]|.)+:([[:alnum:]]|.)+:([[:alnum:]]|.)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a:",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 632
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?: *\\/\\/.*\\s*)* *lodash\\.isPlainObject *= *.+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//"
      ],
      "pumps": [
        "//\t\t"
      ],
      "suffix": "h.",
      "exampleString": "////\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09h."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 252
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*%(nodes_(?:global|main))%\\*\\/(?:.|[\\s\\S])*?\\/\\*%nodes_(?:global|main)_end%\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*%nodes_main%*/"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "%*/*%no",
      "exampleString": "/*%nodes_main%*/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa%*/*%no"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 212
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*(\\-|\\+)?(\\d+|(\\d*(\\.\\d*)))*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\t.+",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09.+"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\\\|\\/)?(.+(\\\\|\\/))*(.+?S\\d{1,3}[.-_ ]?[ED]\\d{1,3}.+)\\.(.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a/"
      ],
      "suffix": "a//",
      "exampleString": "a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a//"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 756
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-zA-Z0-9\\.\\*]+\\s?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "((.|\\n)*?)B((.|\\n)*?)D",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "D\n",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aD\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "[A-z]:(?:[\\\\/][^:]*)+[\\\\/]([^:]*:)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:/"
      ],
      "pumps": [
        "/"
      ],
      "suffix": "a/a::",
      "exampleString": "a:///////////////////////////////////////////a/a::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<[!][-][-](.|\\s){5,}?[-][-]>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--\t\t\t\t\t"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "!",
      "exampleString": "<!--\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09!"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[\\\\w]\\\\:|\\\\.\\\\/)([a-z_\\\\-\\\\s0-9\\\\.]+(?:\\\\\\\\|\\\\/)?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\\\:a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\\$",
      "exampleString": "\\\\:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\\$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "FFI::Type::Builtin:(\\w+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "FFI::Type::Builtin:a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "e::",
      "exampleString": "FFI::Type::Builtin:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "Service Information \"read-all\"\\n(?:.*\\n)*?URL:\\s+(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Service Information \"read-all\"\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "a",
      "exampleString": "Service\\x20Information\\x20\"read-all\"\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 650
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*#\\s+(?:pylava:)\\s*((?:[\\w_]*=[^:\\n\\s]+:?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#\tpylava:=a"
      ],
      "pumps": [
        "a=a"
      ],
      "suffix": "\t#",
      "exampleString": "#\\x09pylava:=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=aa=a\\x09#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(\\/\\*(.|[\\r\\n])*?\\*\\/)?\\s*[\\da-zA-Z_$]+\\s*\\(([\\s\\S]*)\\)\\s*;?\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "/a",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 151
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:<(.|\\n)*?>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\n",
      "exampleString": "<\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^:\"]+|\"[^\"]*\")+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\":\":",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\":\":"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 70
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(hurd|linux)\\s?([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "hurd\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "in\t",
      "exampleString": "hurd\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaain\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\w]+=[\\d]+[a-z]*&?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a=0"
      ],
      "pumps": [
        "aa=0a"
      ],
      "suffix": "=",
      "exampleString": "a=0aa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0aaa=0a="
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\/\\*(.|\\r|\\n)*?\\*\\/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\r\r"
      ],
      "suffix": "\n",
      "exampleString": "/*\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "REFERENCES.+\\((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "REFERENCESa(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "C",
      "exampleString": "REFERENCESa(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaC"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "NEURON\\s*\\{(\\s*[\\w+,]\\s*)*\\s\\}?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "NEURON{"
      ],
      "pumps": [
        "a\t\t"
      ],
      "suffix": "EUR",
      "exampleString": "NEURON{a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09a\\x09\\x09EUR"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<(?:[^<>]+(?:\"[^\"]*\"|'[^']*')?)+>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\">a",
      "exampleString": "<aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\">a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w|_|.|:| )+[\\[\\/][\\'\\\"].*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "_ "
      ],
      "suffix": "a",
      "exampleString": "_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 725
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^# \\d+ \"/usr/local/lib/.*\\n(([^#\\n].*)?\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "# 0 \"/usr/local/lib/\na"
      ],
      "pumps": [
        "a\na"
      ],
      "suffix": "/l",
      "exampleString": "#\\x200\\x20\"/usr/local/lib/\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aa/l"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 132
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*([-+]?\\d+(?:[.,]\\d+)?)\\s*([a-zA-Z]+)(?:\\s*(?:,|and)\\s*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+0a"
      ],
      "pumps": [
        "and\t"
      ],
      "suffix": "\t++",
      "exampleString": "+0aand\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09\\x09++"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "b\"\\xaa"
      ],
      "pumps": [
        "\\xaa\\xaa"
      ],
      "suffix": "b\\",
      "exampleString": "b\"\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaab\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "([^-]*[A-Z???a-z????0-9][^-]*)(-[^-]*[A-Z???a-z????0-9][^-]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "a-aa"
      ],
      "suffix": "a--",
      "exampleString": "a-aa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<br\\s*/?>\\s*\\n*){3,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<br/><br/><b"
      ],
      "pumps": [
        "r/>\n<b"
      ],
      "suffix": "/",
      "exampleString": "<br/><br/><br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<br/>\\x0a<b/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 126
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s|\\\\|\\n|\\r|\\t)*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\t"
      ],
      "suffix": "\n)\n",
      "exampleString": "\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0a)\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z0-9]*[-_]?[a-zA-Z0-9]+)*@([a-zA-Z0-9]*[-_]?[a-zA-Z0-9]+)+[\\.][A-Za-z]{2,3}([\\.][A-Za-z]{2})?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a@a-",
      "exampleString": "-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@a-"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\w+(?:\\.\\w+\\(.*?\\))+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.a"
      ],
      "pumps": [
        "().a().a"
      ],
      "suffix": "a.a",
      "exampleString": "a.a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().a().aa.a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*([^ \"'>=\\^]+(\\s*=\\s*((\"[^\"]*\")|('[^']*')|([^ \\t\\n\"']+)))?\\s+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\u000b\t>'",
      "exampleString": "a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x0b\\x09>'"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 172
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "### GENERATED BY ROBBYRUSSELL(.|\\n)*### GENERATED BY ROBBYRUSSELL",
    "exploitString": {
      "degree": 0,
      "separators": [
        "### GENERATED BY ROBBYRUSSELL"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "###",
      "exampleString": "###\\x20GENERATED\\x20BY\\x20ROBBYRUSSELL\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a###"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 176
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "crmo/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "r",
      "exampleString": "crmo/0._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000r"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "\"(:?[^\\\\\"]|\\\\(:?[bfnrtv\"\\\\/]|u[0-9a-fA-F]{4}))*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\\u"
      ],
      "pumps": [
        "aaaa:a\\u"
      ],
      "suffix": "u",
      "exampleString": "\"\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uaaaa:a\\uu"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z0-9A-Z]+[-|\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\.)+[a-zA-Z]{2,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a|",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa|"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "((database|dbname)(\\w)*=(\\w)+((-)*(\\w)*)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "dbname=a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-=",
      "exampleString": "dbname=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-="
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\"([^\\\\\\\"]*(\\\\.)?)*\")|('([^\\\\\\']*(\\\\.)?)*')|(\\/{2,}.*?(\\r|\\n))|(\\/\\*(\\n|.)*?\\*\\/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "/*",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/*"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:.*\\n)*\\t([^:]+):([0-9]+): (.*)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "0\n:0\n\t",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a0\\x0a:0\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z0-9]+([_\\.\\-]{1}[a-z0-9]+)*){1}([@]){1}([a-z0-9]+([_\\-]{1}[a-z0-9]+)*)+(([\\.]{1}[a-z]{2,6}){0,3}){1}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a0.",
      "exampleString": "a@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 151
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 15,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n3 OBJE(?:\\n[4-9].+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n3 OBJE\n"
      ],
      "pumps": [
        "4a\n4a\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a3\\x20OBJE\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0a4a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 677
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "edga/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "i",
      "exampleString": "edga/0._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000i"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((-- |#)[^\\n]*\\n|/\\*.*?\\*/)*(DROP|CREATE)[[:space:]]+(IF EXISTS[[:space:]]+)?(TABLE|DATABASE)[[:space:]]+(.+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "/**/#*//**/#\n"
      ],
      "suffix": "/**/#*/DROPaIF E",
      "exampleString": "/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*//**/#\\x0a/**/#*/DROPaIF\\x20E"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 856
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-zA-Z0-9]+)*=([rwadDxtXUCcT]+)/([a-zA-Z0-9]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a0/",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\s*</?[^>]*>)+\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</"
      ],
      "pumps": [
        "></"
      ],
      "suffix": "\t>>",
      "exampleString": "</></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></></\\x09>>"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*([-\\*:\\.#_\\w]+\\s*)+\\{",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a{\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa{\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[$_A-Za-z]{1}[$_\\w]*((\\.[$_A-Za-z]{1}[$_\\w]*)|(\\[[$_.\\w\\[\\]]+\\])|(\\['.*'\\])|(\\[\".*\"\\]))*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a["
      ],
      "pumps": [
        "'']['']["
      ],
      "suffix": "a['a",
      "exampleString": "a[''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][a['a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 180
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "<pre(?:\\s+(?:[^\">]*|\"[^\"]*\")*)?>([\\S\\s]+?)<\\/pre\\s*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<pre\t"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "e\t<><\"<></p",
      "exampleString": "<pre\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae\\x09<><\"<></p"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "Name servers in the listed order:\\n\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Name servers in the listed order:\n\na"
      ],
      "pumps": [
        "\na\na"
      ],
      "suffix": "er",
      "exampleString": "Name\\x20servers\\x20in\\x20the\\x20listed\\x20order:\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaer"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "```test\\r?\\n((.+(\\r?\\n)*)+)```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```test\r\na"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "e",
      "exampleString": "```test\\x0d\\x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(-?\\d+(?:[.,]\\d+)?)\\s*([a-zA-Z]+)(?:\\s*(?:,|and)\\s*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-0a"
      ],
      "pumps": [
        "and\t"
      ],
      "suffix": "an.",
      "exampleString": "-0aand\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09and\\x09an."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 130
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[_.0-9a-z-]+@([0-9a-z][0-9a-z-]+.)+[a-z]{2,3}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@a"
      ],
      "pumps": [
        "aaaaaa"
      ],
      "suffix": "a$",
      "exampleString": "a@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "if \\(typeof module \\!\\=\\= 'undefined'\\) \\{(.|\\n)*\\}\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "if (typeof module !== 'undefined') {"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "unde",
      "exampleString": "if\\x20(typeof\\x20module\\x20!==\\x20'undefined')\\x20{a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aunde"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*?((\\d+)(\\s*(,|-)\\s*)?)+\\s*?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ",,",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000,,"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "ckeditor\\/assets\\/((\\w+\\/?)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ckeditor/assets/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "to//",
      "exampleString": "ckeditor/assets/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaato//"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(https?://([-\\w\\.]+)+(:\\d+)?(/([-\\w/_\\.]*(\\?\\S+)?)?)?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s{0,3}(?:(?:-+\\s*){3,}|(?:\\*+\\s*){3,}|(?:_+\\s*){3,})$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "---"
      ],
      "pumps": [
        "--"
      ],
      "suffix": "\t*_",
      "exampleString": "---------------------------------------------------------------------------------------\\x09*_"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "(zte)-(\\w+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "zte-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "za-",
      "exampleString": "zte-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaza-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*#\\d+(\\.?\\d?)*\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#0."
      ],
      "pumps": [
        "0.."
      ],
      "suffix": "0.#",
      "exampleString": "#0.0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0..0.#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\r",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^s*data:(.+?/.+?(;.+?=.+?)*)?(;base64)?,(.*)s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "data:a/a;"
      ],
      "pumps": [
        "a=a;"
      ],
      "suffix": "a",
      "exampleString": "data:a/a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a=a;a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 681
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([`~]{3,})(\\w+)?\\s*(\\{([^{}]*?|\".*?\"|'.*?')*\\})?\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```{"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "`\"",
      "exampleString": "```{aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:[0-9]+[-+]?)+)?(.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 626
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "(<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>)\\s*|([^\\s<]\\s*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</a\ta"
      ],
      "pumps": [
        "=\"\"\ta=\"\"\ta\t"
      ],
      "suffix": "</\t",
      "exampleString": "</a\\x09a=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09=\"\"\\x09a=\"\"\\x09a\\x09</\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 199
    },
    "indeg": {
      "num_nodes": 20,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 18,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--([^-]+|[-][^-]+)*-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-",
      "exampleString": "<!--aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "!["
      ],
      "pumps": [
        "\\[\\[\\]"
      ],
      "suffix": "!\\",
      "exampleString": "![\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]\\[\\[\\]!\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(https?:\\/\\/(?:www)?\\.?instagram\\.com\\/p\\/(?:\\w+.)+\\/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://.instagram.com/p/"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "agr",
      "exampleString": "https://.instagram.com/p/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagr"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 264
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "epiphany\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "y",
      "exampleString": "epiphany\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000y"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\d[.\\d]*)+(em|ex|px|gd|rem|vw|vh|vm|ch|mm|cm|in|pt|pc|deg|rad|ms|s|hz|khz|%){1}?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "0"
      ],
      "suffix": ".e",
      "exampleString": "0000000000000000000000000000000000000000000.e"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 188
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "<base(\\s[^>]*)*>\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<base\t"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "<b>>",
      "exampleString": "<base\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09<b>>"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\[[^=]*\\])+[,]\\s*([^\\[]*)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[]"
      ],
      "pumps": [
        "[][]"
      ],
      "suffix": "],[=",
      "exampleString": "[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]],[="
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:@)(([a-zA-Z][a-zA-Z0-9_$]*[.]?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@a"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "$..",
      "exampleString": "@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^']*[A-Z??????????a-z??????????0-9][^']*)('[^']*[A-Z??????????a-z??????????0-9][^']*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a'a"
      ],
      "pumps": [
        "a'aa"
      ],
      "suffix": "$''",
      "exampleString": "a'aa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aaa'aa$''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*)<(([a-zA-Z0-9])+([a-zA-Z0-9_\\.-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+))+>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a@a"
      ],
      "pumps": [
        "aaa@a"
      ],
      "suffix": "$<a-",
      "exampleString": "<a@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@aaaa@a$<a-"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<html>(.|\\r|\\n)*<title>Title<\\/title>(.|\\r|\\n)*<\\/html>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<html>"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "e<",
      "exampleString": "<html>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ae<"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 210
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(https?://([-\\w\\.]+[-\\w])+(:\\d+)?(/([\\w/_\\.#-]*(\\?\\S+)?[^\\.\\s])?)?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://aa"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "psa/.",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaapsa/."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 131
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\\\?[a-z_](?:\\\\?[a-z0-9_]+)*::\\$[a-z0-9_]+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\a\\a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ":a",
      "exampleString": "\\a\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^ *x{3,}( *x{3,})* *$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "xxxxxx"
      ],
      "pumps": [
        "xxx"
      ],
      "suffix": " x ",
      "exampleString": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\x20x\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(((.*)*)*x)[\u0107\u0103\u0100]",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s|[^A-Za-z0-9_])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "0",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x090"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "Views.Foo = Backbone.View.extend\\(\\{(.|\\n)*app\\/scripts\\/templates\\/foo.hbs",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ViewsaFoo = BackboneaViewaextend({"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "mpla",
      "exampleString": "ViewsaFoo\\x20=\\x20BackboneaViewaextend({\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ampla"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 244
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": ".outer(.|\\n|\\r)*.inner(.|\\n|\\r)*background:\\s*#[fF]+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aouter"
      ],
      "pumps": [
        "\n\r"
      ],
      "suffix": "e",
      "exampleString": "aouter\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0de"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 220
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\$\\{(([\\w\\$]+\\.[\\w\\$]*)+)\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "${a."
      ],
      "pumps": [
        "aaa."
      ],
      "suffix": "$",
      "exampleString": "${a.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s+)+D[oD]?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "DD\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "DD[",
      "exampleString": "DD\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09DD["
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\"(.|\\s)*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\t",
      "exampleString": "\"\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\.?\\d+(\\.?\\d+)?([\\/\\-\\+\\*x]\\d?\\.?\\d+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".0*"
      ],
      "pumps": [
        "00*00*"
      ],
      "suffix": "0..",
      "exampleString": ".0*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*00*0.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\$\\{ \\w+(.\\w+)* \\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "${ aaa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " a",
      "exampleString": "${\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?::.+?)*,\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":"
      ],
      "pumps": [
        "a:a:"
      ],
      "suffix": "\ta",
      "exampleString": ":a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "type=\\\\\"([a-z]+\\/[\\w\\\\+-\\\\.]+)+\\\\\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "type=\\\"a/"
      ],
      "pumps": [
        "aa/aa/"
      ],
      "suffix": "/",
      "exampleString": "type=\\\"a/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa//"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(?:\\/\\/.*|\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**a"
      ],
      "pumps": [
        "**a"
      ],
      "suffix": "/**a",
      "exampleString": "/**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a/**a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s|\\/\\*.*?\\*\\/)*[\\[\\(\\w]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a*//*"
      ],
      "suffix": "/a*//",
      "exampleString": "/*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*a*//*/a*//"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*include\\s+\"([^\"]+)\"\\s*([\\/\\/|\\#].*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "include\t\"a\""
      ],
      "pumps": [
        "##"
      ],
      "suffix": "a",
      "exampleString": "include\\x09\"a\"####################################################################################a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 638
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\w|\\s|-)+\\/?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\taa"
      ],
      "suffix": "//",
      "exampleString": "\\x09\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa\\x09aa//"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 70
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\<\\!\\-\\-\\-\\{(.|[\\n\\r])*\\}\\-\\-\\-\\>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!---{"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "-}a",
      "exampleString": "<!---{\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a-}a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:[\\n\\r]|.)*)(Generated by <a href.*)((?:[\\n\\r]|.)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "Generated by <a",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aGenerated\\x20by\\x20<a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 752
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n    a\n      \n      =\n      \n      \n       \"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "  \n",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20=\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20\\x20\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 184
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "Service Information \"read-one\"\\n(?:.*\\n)*?URL:\\s+(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Service Information \"read-one\"\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "a",
      "exampleString": "Service\\x20Information\\x20\"read-one\"\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 650
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\.\\.\\/src\\/(.*?)+\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "../src/"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ".",
      "exampleString": "../src/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<[a-z]+[a-z0-9:_-]*)((?:[^\\S]+[a-z0-9:_-]+(?:=(?:'.*?'|\".*?\"|<.+?>|\\S+))?)+)([^\\S]*\\/?>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\ta='"
      ],
      "pumps": [
        "'\ta=<\ta=>\ta='"
      ],
      "suffix": "a-\ta",
      "exampleString": "<a\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a=''\\x09a=<\\x09a=>\\x09a='a-\\x09a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 201
    },
    "indeg": {
      "num_nodes": 16,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 15,
      "exec_time": 0
    }
  },
  {
    "pattern": "(((.*)*)*x)[^\\x00-\\xff]",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "-((\\d+)\\.?)+(-SNAPSHOT)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "S",
      "exampleString": "-0000000000000000000000000000000000000000000000000000000000000000000000000000000000000S"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^\\n;])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "'\\''"
      ],
      "suffix": ")(\n\\",
      "exampleString": "'\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'')(\\x0a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "inet6\\s+((?:\\S{0,4}:)+\\S{1,4}).+?prefixlen\\s+(\\d+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "inet6\ta"
      ],
      "pumps": [
        "a::aa:a"
      ],
      "suffix": "p",
      "exampleString": "inet6\\x09aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:aa::aa:ap"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 348
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d+)*.*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 548
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[a-z][a-z0-9_-]*(?:\\[(?:\\d*|[a-z0-9_-]+)\\])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a["
      ],
      "pumps": [
        "0][0]["
      ],
      "suffix": "0[[",
      "exampleString": "a[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0[["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(    .*?\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "    "
      ],
      "pumps": [
        "a\n    "
      ],
      "suffix": " a\n ",
      "exampleString": "\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^_ZT[VI](N[0-9]+[A-Z_].*)*[0-9]+[A-Z_].*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "_ZTIN"
      ],
      "pumps": [
        "0AN0AN"
      ],
      "suffix": "a",
      "exampleString": "_ZTIN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0AN0ANa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 633
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "[ \\t]*([*#]).+(\\n[ \\t]*[^*#\\s].*)*(\\n[ \\t]*[*#]{2}.+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#a"
      ],
      "pumps": [
        "\n a"
      ],
      "suffix": "a",
      "exampleString": "#a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 776
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "^Modes: (?:(\\+[a-zA-Z]+)((?: \\S+?)*))?(; bad-word channel)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Modes: +a "
      ],
      "pumps": [
        "a "
      ],
      "suffix": "\t",
      "exampleString": "Modes:\\x20+a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 170
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^export (interface|(?:const )?enum) (\\S*?)(?: extends .*?)? \\{( |.*[\\r\\n]*)*?\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "export enum  {"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " c",
      "exampleString": "export\\x20enum\\x20\\x20{aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20c"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 161
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w|\\d|_|-)*_value$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "0_"
      ],
      "suffix": "al_v",
      "exampleString": "0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_al_v"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(HbbTV)/1\\.1\\.1.*CE-HTML/1\\.\\d;(Vendor/)*(THOM[^;]*?)[;\\s](?:.*SW-Version/.*)*(LF[^;]+);?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "HbbTV/1.1.1CE-HTML/1.0;THOM\tSW-Versio"
      ],
      "pumps": [
        "n/SW-Version/SW-Versio"
      ],
      "suffix": ";TCE-HTM",
      "exampleString": "HbbTV/1.1.1CE-HTML/1.0;THOM\\x09SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Version/SW-Versio;TCE-HTM"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 445
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\\\*|\\\\:)(\\\\w|\\\\.)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "w\\w\\"
      ],
      "suffix": "::",
      "exampleString": "\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*.*(?:\\n\\s{3,}.*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\t"
      ],
      "pumps": [
        "\t\t\n\t\t\t\n\t"
      ],
      "suffix": "\t",
      "exampleString": "\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09\\x09\\x0a\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 820
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "''''"
      ],
      "suffix": "{\"\\{'{",
      "exampleString": "'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''{\"\\{'{"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-a\\"
      ],
      "pumps": [
        "\\aa\\"
      ],
      "suffix": "-a",
      "exampleString": "-a\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\-a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 120
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:.*?): (\\w+)(?:: (.*))?(?:\\r?\\nat[^\\n]*)?(\\r?\\n.*@(\\[native code\\]|(?:.*:\\d+:\\d+)))*\\r?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        ": a\r\n@[nat"
      ],
      "pumps": [
        "ive code]\r\n@[native code]\n:0:0\n@[nat"
      ],
      "suffix": ":",
      "exampleString": ":\\x20a\\x0d\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[native\\x20code]\\x0d\\x0a@[native\\x20code]\\x0a:0:0\\x0a@[nat:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 482
    },
    "indeg": {
      "num_nodes": 16,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 15,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?: *(?:translate|rotate|scale)[^(]*\\([^(]+\\))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "trans"
      ],
      "pumps": [
        "late(a)scale)translate(a)trans"
      ],
      "suffix": "a",
      "exampleString": "translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)translate(a)scale)translate(a)transa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 163
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:\\.|(\\\\\\\")|[^\\\"\"])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "a."
      ],
      "suffix": "\\\"\".",
      "exampleString": "\"a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.\\\"\"."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z0-9_]+[a-z0-9\\._]*(\\/[a-z0-9_]+[a-z0-9\\._]*)*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a/"
      ],
      "pumps": [
        "aa/"
      ],
      "suffix": "a//",
      "exampleString": "a/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/aa/a//"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d+)*([a-z]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a0",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z]+([a-z\\d]+_|_[a-z\\d]+)+[a-z\\d]+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "__aa_aa"
      ],
      "suffix": "a0___",
      "exampleString": "aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aa__aa_aaa0___"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\xCF*[0-9]{2}\\xCF*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "00"
      ],
      "pumps": [
        "\u00cf00\u00cf"
      ],
      "suffix": "\u00cf0\u00cf",
      "exampleString": "00\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf00\\xcf\\xcf0\\xcf"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<del[^>]*>((.|\\n)*?)<\\/del>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<del>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "</\n",
      "exampleString": "<del>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a</\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\/.*)*(\\/\\..*|\\.(tmproj|o|pyc)|Icon)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "//"
      ],
      "suffix": "/",
      "exampleString": "/////////////////////////////////////////////////////////////////////////////////////"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 743
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<script.*src=(s*?)*(.+)[?]__inline.*?(s*?)></script>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<scriptsrc="
      ],
      "pumps": [
        "ss"
      ],
      "suffix": "r",
      "exampleString": "<scriptsrc=ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssr"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*?[.!?](?:[\u201d\"')\\]}]|(?:<.*>))*[[:space:]])",
    "exploitString": {
      "degree": 0,
      "separators": [
        "!"
      ],
      "pumps": [
        "\"<><>"
      ],
      "suffix": "a>",
      "exampleString": "!\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>\"<><>a>"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\s*\\n*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\$\\{((?:[^\\\\}]+|\\\\.))*\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "${a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "${}{",
      "exampleString": "${aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa${}{"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(filename=)\\\"?(\\w+(\\.)?)+\\w+\\\"?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "filename=\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "=\"a",
      "exampleString": "filename=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=\"a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^  Front Right: (Playback |Capture )?(\\d+)(\\s+|\\[[^\\]]+\\])*( Capture (\\d+))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "  Front Right: 0\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "] Capture ",
      "exampleString": "\\x20\\x20Front\\x20Right:\\x200\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09]\\x20Capture\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 220
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "iPhone (\\S* )*(\\(([0-9A-Z-]*)\\))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "iPhone "
      ],
      "pumps": [
        "  "
      ],
      "suffix": "(",
      "exampleString": "iPhone\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20("
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "/\\*[^*]*\\*+([^/][^*]*\\*+)*/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**a*"
      ],
      "pumps": [
        "**"
      ],
      "suffix": "*a",
      "exampleString": "/**a**************************************************************************************a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "[^((http|https):\\/\\/)]([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}:([0-9]{1,5})+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a0.0.0.0:"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a00.000",
      "exampleString": "a0.0.0.0:000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00.000"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 146
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:.|\\n|\\r)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\r"
      ],
      "suffix": "a",
      "exampleString": "\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0da"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 624
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[1-9]+[0-9]*,?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "1"
      ],
      "pumps": [
        "11"
      ],
      "suffix": "0,0",
      "exampleString": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111110,0"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n\\/\\* Copyright(.|\\n)*?Mozilla Foundation(.|\\n)*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n/* Copyright"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "at",
      "exampleString": "\\x0a/*\\x20Copyright\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aat"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 178
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:<[^>]*?>|\"[^\"]*?\"|[^,])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\"\"\"\"\""
      ],
      "suffix": ",\",>,",
      "exampleString": "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",\",>,"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((-- |#)[^\\n]*\\n|/\\*.*?\\*/)*(UNION|JOIN)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "//**/#*/-- \n/**"
      ],
      "suffix": "O",
      "exampleString": "/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**//**/#*/--\\x20\\x0a/**O"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 175
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\@.+(?:\\r|\\r?\\n)(?:[^\\@\\+].*(?:\\r|\\r?\\n))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@a\ra"
      ],
      "pumps": [
        "\r\na\n\ra"
      ],
      "suffix": "\na",
      "exampleString": "@a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0d\\x0aa\\x0a\\x0da\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^&?(?:.*::)*(\\w+)\\s*[(][\"'].*[\"'][)]\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "&"
      ],
      "pumps": [
        ":::::"
      ],
      "suffix": "(a",
      "exampleString": "&::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::(a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 149
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\\\.|\\#\\{|[^\\s\\\\+\\-*\\/%(),=!])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "a#{\\"
      ],
      "suffix": "\\\t#\t",
      "exampleString": "\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\a#{\\\\\\x09#\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*\\s+.*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "a",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 598
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "-+BEGIN\\s+.*PRIVATE\\s+KEY[^-]*-+(?:\\s|\\r|\\n)+([a-z0-9+/=\\r\\n]+)-+END\\s+.*PRIVATE\\s+KEY[^-]*-+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-BEGIN\tPRIVATE\tKEY-"
      ],
      "pumps": [
        "\t\r"
      ],
      "suffix": "-\nPRIVATE\tK",
      "exampleString": "-BEGIN\\x09PRIVATE\\x09KEY-\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d-\\x0aPRIVATE\\x09K"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 294
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 1
    }
  },
  {
    "pattern": "(#|\\n|\\s)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\u0000",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x00"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\#.*?\\n)|(\\-\\-\\-.*?\\n))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "---\n#\n#\n"
      ],
      "suffix": "-a\n-",
      "exampleString": "---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a---\\x0a#\\x0a#\\x0a-a\\x0a-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([-+]?\\d+(?:[,.]\\d*)?)\\s*(\\w+))(\\s*,?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+0a"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "++",
      "exampleString": "+0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09++"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(h[2-3])(?:\\s+[^>]*)*>(.*?)<\\s*\\/\\s*h[2-3]\\s*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<h2\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "<h<\t></",
      "exampleString": "<h2\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09<h<\\x09></"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\w+(?:\\.{0,1}[\\w-]+)*@[a-zA-Z0-9]+(?:[-.][a-zA-Z0-9]+)*\\.[a-zA-Z]+\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\ta",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "^<!--\\s*runkit:activate((.|\\n)*)-->(.|\\n)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--runkit:activate"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "--",
      "exampleString": "<!--runkit:activate\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a--"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 632
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n      typedef\n      "
      ],
      "pumps": [
        "\t*a"
      ],
      "suffix": "\n ",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20typedef\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x09*a\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 202
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^&gt;&gt;&gt;(?:\\s|\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "&gt;&gt;&gt;"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "&",
      "exampleString": "&gt;&gt;&gt;\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a&"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<pre\\sclass=\"stdin\">edit\\s([\\w\\/.]+)<\\/pre>\\s+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<pre\tclass=\"stdin\">edit\ta</pre>\t\n                   <pre\tclass=\"traceback\">\t\n                   #&lt;IndexError:\tregexp\tnot\tmatched&gt;\t\n                   gorp/lib/gorp/edit"
      ],
      "pumps": [
        "arb\n\tgorp/lib/gorp/editarb\n\tgorp/lib/gorp/edit"
      ],
      "suffix": "t$",
      "exampleString": "<pre\\x09class=\"stdin\">edit\\x09a</pre>\\x09\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<pre\\x09class=\"traceback\">\\x09\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20#&lt;IndexError:\\x09regexp\\x09not\\x09matched&gt;\\x09\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editarb\\x0a\\x09gorp/lib/gorp/editt$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 763
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(/\\*(?:.|\\n)*?\\*/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "/\n",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([/\\w\\.-]*)+\\:([\\d]+)(?:\\:([\\d]+))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "::",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:.*,)*[ \t]*([^ \t]+)[ \t]+realm=\"([^\"]*)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ",a"
      ],
      "suffix": "al,\tr\"a,\trea",
      "exampleString": ",a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aal,\\x09r\"a,\\x09rea"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[a-zA-Z][a-z\\d]*([A-Z]+[a-z\\d]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aA"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "#",
      "exampleString": "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": ":root\\W?\\{(.|\\n)*?\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":root${"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "oo",
      "exampleString": ":root${\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aoo"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<b>.+?)+(<\\/b>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<b"
      ],
      "pumps": [
        ">a<b>a<b"
      ],
      "suffix": "a<",
      "exampleString": "<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<b>a<ba<"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+://)(.+@)*([\\w\\d\\.]+)(:[\\d]+){0,1}/*(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a://a"
      ],
      "pumps": [
        "@a"
      ],
      "suffix": "@",
      "exampleString": "a://a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 638
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[!-)+-<>-~][!-~]*[+-](,[!-)+-<>-~][!-~]*[+-])+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a+,"
      ],
      "pumps": [
        "a+,a+,"
      ],
      "suffix": "a",
      "exampleString": "a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a+,a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z]+[a-zA-Z0-9_]*(::[a-zA-Z]+[a-zA-Z0-9_]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "::aa"
      ],
      "suffix": "a:a",
      "exampleString": "a::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aa::aaa:a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^'((?:\\\\.|[^\\'])*)'\\s*(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "'",
      "exampleString": "'a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a'"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 644
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^__as(?:_[^\\W\\d]\\w*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "__as"
      ],
      "pumps": [
        "_a_a"
      ],
      "suffix": "#",
      "exampleString": "__as_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "ProjectSection\\(ProjectDependencies\\) = postProject(?:.|\\n)*?EndProjectSection",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ProjectSection(ProjectDependencies) = postProject"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "ojec",
      "exampleString": "ProjectSection(ProjectDependencies)\\x20=\\x20postProject\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aojec"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 201
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\"(?:\\\\.|[^\"])*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\"\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--((.|[\\r\\n])*?)-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "!-",
      "exampleString": "<!--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a!-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "@\"(\\\\.|.)*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@\""
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "@\\",
      "exampleString": "@\"a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a@\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d+)+\\.(\\d+)\\.(\\d+)\\.(\\d+)/(\\d+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d+[smhdw]?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "dd",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^%(.*)+?%",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "%a",
      "exampleString": "%aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa%a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[Mm](?:\\d|[eE.,+-]|[LlHhVvQqCcTtSsAaZz]|\\W)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "M"
      ],
      "pumps": [
        "$0"
      ],
      "suffix": "MM",
      "exampleString": "M$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0$0MM"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<.*?>)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<"
      ],
      "pumps": [
        "><><"
      ],
      "suffix": "a",
      "exampleString": "<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([ABCDEFGIJKLNPRST]+\\d*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "#",
      "exampleString": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*// Rollbar jQuery Snippet)[",
    "exploitString": {
      "degree": 0,
      "separators": [
        "// Rollbar jQuery Snippet\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "/ Rollbar jQuery S",
      "exampleString": "//\\x20Rollbar\\x20jQuery\\x20Snippet\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/\\x20Rollbar\\x20jQuery\\x20S"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 315
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[A-Za-z0-9-\\.]+(?:-[A-Za-z0-9-\\.]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-"
      ],
      "pumps": [
        "a-a-"
      ],
      "suffix": "#",
      "exampleString": "a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[_]_\"(?:[^\"\\\\]+|\\\\.)+\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "__\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a",
      "exampleString": "__\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\((@\\w+\\W*\\s*)+\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(@a"
      ],
      "pumps": [
        "\t@a$"
      ],
      "suffix": ")\ta",
      "exampleString": "(@a\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$\\x09@a$)\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:([\"](\\\\.|[^\"]|\\\\\")*?[\"])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "\\a",
      "exampleString": "\"a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "/***/",
      "exampleString": "/*a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a/***/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*(.|\\n)*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "/\n",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "imports: \\[(.|\\s)*Test6Module(.|\\s)*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "imports: ["
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "mpo",
      "exampleString": "imports:\\x20[\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09mpo"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 180
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{% apibody %\\}((.*\\n)*?)\\{% endapibody %\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{% apibody %}"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "% apibody %",
      "exampleString": "{%\\x20apibody\\x20%}a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a%\\x20apibody\\x20%"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\w+\\-].?)+@[a-z\\d\\-]+(\\.[a-z]+)*\\.[a-z]+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "a$",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 136
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "(https?://([-\\w\\.]+)+(/([\\w/_\\.]*(\\?\\S+)?(#\\S+)?)?)?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\[\\^((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]:",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[^"
      ],
      "pumps": [
        "a\\["
      ],
      "suffix": "]:]^",
      "exampleString": "[^a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[a\\[]:]^"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z0-9A-Z]+[-|_|\\\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\\\.)+[a-zA-Z]{2,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(-?\\d+(\\.\\d+)?([eE]-?\\d+)?)\t(\\S+( \\S+)*)(\t(-?\\d+(\\.\\d+)?)([eE]-?\\d+)?)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-0\ta"
      ],
      "pumps": [
        " a a"
      ],
      "suffix": "\t-0\t-0.",
      "exampleString": "-0\\x09a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x09-0\\x09-0."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 150
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 18,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(\\\\\\\\|\\\\'|[^'\\n])*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\'\\\\"
      ],
      "suffix": "a\\''a",
      "exampleString": "'\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\a\\''a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*(?:\\n\\s*)+)([^\\s].*?)(\\s*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 661
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "<!-- begin-scripts -->(?:.*\\r?\\n\\s)*<!-- end-scripts -->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- begin-scripts -->\r"
      ],
      "pumps": [
        "\n\t\n\n\t"
      ],
      "suffix": "-s\n",
      "exampleString": "<!--\\x20begin-scripts\\x20-->\\x0d\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x09-s\\x0a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 166
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[$#_A-Za-z]{1}[$_\\w()]*((\\.[$#_A-Za-z]{1}[$_\\w()]*)|(\\[[$_.\\w()\\[\\]]+\\])|(\\['.*'\\])|(\\[\".*\"\\]))*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a["
      ],
      "pumps": [
        "'']['']["
      ],
      "suffix": "a['a",
      "exampleString": "a[''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][''][a['a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 183
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "'([^']|.)*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "a",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*([^\\,]+(?:\\\\.[^\\,]*)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\\a"
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "\t,",
      "exampleString": "a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\x09,"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-zA-Z_$][a-zA-Z_0-9$]*([.]?[a-zA-Z_$][a-zA-Z_0-9$]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.a"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "a..",
      "exampleString": "a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\|.*?[\\n\\r]{1,2}){3,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "|\n|\n|"
      ],
      "pumps": [
        "\n|"
      ],
      "suffix": "\na",
      "exampleString": "|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 155
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "C (\\S+) ; WX (\\S+) ; N (\\S+) ; B (\\S+) (\\S+) (\\S+) (\\S+) ;((?: L \\S+ \\S+ ;)+)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "C a ; WX a ; N a ; B a a a a ; L a "
      ],
      "pumps": [
        "a ; L a "
      ],
      "suffix": " L",
      "exampleString": "C\\x20a\\x20;\\x20WX\\x20a\\x20;\\x20N\\x20a\\x20;\\x20B\\x20a\\x20a\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20a\\x20;\\x20L\\x20a\\x20\\x20L"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 632
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\s|\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z0-9])+([a-zA-Z0-9_\\.\\+-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "@.",
      "exampleString": "a@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": " *?\\/\\/ WORKSHOP_START.*?\\n((.|\\n|\\r)*?) *\\/\\/ WORKSHOP_END.*?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "// WORKSHOP_START\n"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "A",
      "exampleString": "//\\x20WORKSHOP_START\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0aA"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 214
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w+:[a-zA-Z\\/]+,*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        ":aaa"
      ],
      "suffix": ",a::",
      "exampleString": "a:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa:aaa,a::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\w+(\\s+(\"[^\"]*\"|'[^']*'|[^>])+)?>|<\\/\\w+>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\t"
      ],
      "pumps": [
        "\"\"\"\"\""
      ],
      "suffix": "\t>'",
      "exampleString": "<a\\x09\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\x09>'"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "^'([^\\\\']*(\\\\.)*)*'$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\'''",
      "exampleString": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\'''"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*[+-]?\\d+)(?:\\.(\\d+)*)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+0.0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\t+",
      "exampleString": "+0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09+"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(    .*[\\n])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "    "
      ],
      "pumps": [
        "a\n    "
      ],
      "suffix": " a\n ",
      "exampleString": "\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20a\\x0a\\x20\\x20\\x20\\x20\\x20a\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w+):(.*(?:\\n\\t.*)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:\n"
      ],
      "pumps": [
        "\t\n\t\n"
      ],
      "suffix": "a",
      "exampleString": "a:\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 653
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((http[s]?:\\/\\/)([a-zA-Z0-9_.]+))?:?([0-9]+)?([\\/]?[~]?(\\.?[^.]+[~]?)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":/~.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "tps:..",
      "exampleString": ":/~.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaatps:.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[A-Za-z]+(\\.?-?_?[A-Za-z0-9-])+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.-_"
      ],
      "pumps": [
        "a-"
      ],
      "suffix": "a..",
      "exampleString": "a.-_a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a.."
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[\\dA-F:.]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "a",
      "exampleString": "#\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 777
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s)*(\\/\\*.*\\*\\/)*\\s*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "/**//**/"
      ],
      "suffix": "\t*/",
      "exampleString": "/**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**/\\x09*/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(.+?)(?:\\s|\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*?\\n)*=>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "//\n//\n"
      ],
      "suffix": "=",
      "exampleString": "a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a="
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(<script(.|\\n)*?>(.|\\n)*?(<\\/script>){1}?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "t",
      "exampleString": "<script\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0at"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^msgstr\\[([0-9]+)\\] \"(((\\\\.)|[^\"])*)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "msgstr[0] \"\\"
      ],
      "pumps": [
        "a\\\\a\\"
      ],
      "suffix": "g",
      "exampleString": "msgstr[0]\\x20\"\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\g"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</a\ta="
      ],
      "pumps": [
        "\t\"\"\ta=\t\"\"\ta="
      ],
      "suffix": "</\t",
      "exampleString": "</a\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=\\x09\"\"\\x09a=</\\x09"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 186
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:.|\\n)*?)<script>((?:.|\\n)*)<\\/script>((?:.|\\n)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "a<s",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa<s"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 749
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "/((?:(?:\\{.+?\\})|(?:[^/{}]+))+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "}/",
      "exampleString": "/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "[^\\s{;][^{;]*\\{(?:[^{}]*\\{[^{}]*\\}[^{}]*|[^{}]*)*\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a{"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t;",
      "exampleString": "a{aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09;"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\{\\[((?:\\\\\\]|.|\\n)*?)\\]\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{["
      ],
      "pumps": [
        "\\]"
      ],
      "suffix": "]",
      "exampleString": "{[\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]\\]]"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*)+\\.js$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "sa.j",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaasa.j"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*-+\\*\\/\\n(?:\\s*\\/\\/.*)*\\s*lodash\\.\\w+ *=[\\s\\S]+?lodash\\.VERSION *=.+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*-*/\n"
      ],
      "pumps": [
        "//\t\t"
      ],
      "suffix": "//lodash.al=",
      "exampleString": "/*-*/\\x0a//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//lodash.al="
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 862
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "'\\''"
      ],
      "suffix": ")(;\\",
      "exampleString": "'\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'')(;\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^;']+|'([^']*)')+[;]?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "'a;a'a;'",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'a;a'a;'"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\D|\\.|-)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "--"
      ],
      "suffix": "0",
      "exampleString": "------------------------------------------------------------------------------------0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z0-9][a-zA-Z0-9_]?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "__",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa__"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\\\s)*[a-z]+(.|\\\\s)*:",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\\s"
      ],
      "suffix": "\\a",
      "exampleString": "a\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\['((?:\\\\'|.)*)'\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "['\\"
      ],
      "pumps": [
        "'\\'\\"
      ],
      "suffix": "]a",
      "exampleString": "['\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\]a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*\\r?\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\n\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "/**/*",
      "exampleString": "/*a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a/**/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[a-z][a-zA-Z\\d]*([A-Z][a-zA-Z\\d]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "AA"
      ],
      "suffix": "#",
      "exampleString": "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "#EXTM3U(\\s+\\S+?=\\S+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#EXTM3U\t"
      ],
      "pumps": [
        "a==a\t"
      ],
      "suffix": "#\ta\t",
      "exampleString": "#EXTM3U\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09#\\x09a\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\w+\\,?\\s?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ",\t\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\r\\n?|\\n\\r?){2,}|((?:\\r\\n?|\\n\\r?)\\s*\\-\\s+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r\n\n"
      ],
      "pumps": [
        "\r\n\n"
      ],
      "suffix": "--",
      "exampleString": "\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a--"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 152
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "[a-z\\-]{0,6}://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "://%"
      ],
      "pumps": [
        "aaA%"
      ],
      "suffix": "#",
      "exampleString": "://%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%aaA%#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 130
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?::[^\\r\\n]+\\s*\\r?\\n)+)\\s*(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":a"
      ],
      "pumps": [
        "\r\n:a\t"
      ],
      "suffix": "a",
      "exampleString": ":a\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09\\x0d\\x0a:a\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 676
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "var (__extends|__decorate|__metadata|__param) = \\(.*\\r?\\n\\s+(.*\\r?\\n)*\\s*\\};",
    "exploitString": {
      "degree": 0,
      "separators": [
        "var __param = (\r\n\t"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "ar ",
      "exampleString": "var\\x20__param\\x20=\\x20(\\x0d\\x0a\\x09a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aar\\x20"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 225
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(ip[honead]+)(?:.*os\\s([\\w]+)*\\slike\\smac|;\\sopera)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ipaos\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "mao\tlike",
      "exampleString": "ipaos\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaamao\\x09like"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(sub \\w+):(\\n(?: +.*?\\n)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "sub a:\n "
      ],
      "pumps": [
        "a\n "
      ],
      "suffix": " a",
      "exampleString": "sub\\x20a:\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20a\\x0a\\x20\\x20a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^typedef struct( \\S+)?\\s*\\{\\n(([^}\\n].*)?\\n)*\\}\\s*\\*GC;\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "typedef struct{\n"
      ],
      "pumps": [
        "a\n\n"
      ],
      "suffix": "\n\n*\n",
      "exampleString": "typedef\\x20struct{\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0a\\x0a\\x0a*\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 164
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|(\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|`(?:\\\\.|[^`])*`)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "`\\"
      ],
      "pumps": [
        "a\\\\a\\"
      ],
      "suffix": "a`a",
      "exampleString": "`\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a`a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 629
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "LEADER .+\\n(\\d\\d\\d .. .+\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "LEADER a\n000"
      ],
      "pumps": [
        " aa a\n000 aa a\n000"
      ],
      "suffix": "LE",
      "exampleString": "LEADER\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000\\x20aa\\x20a\\x0a000LE"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\/\\/.*?\\\\n)|(\\/\\*(.|\\\\n)*?\\*\\/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\\n\\n"
      ],
      "suffix": "a\\",
      "exampleString": "/*\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\na\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:( *[-*_]) *){3,}(?:\\n *)+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "***"
      ],
      "pumps": [
        " *"
      ],
      "suffix": " **\n*",
      "exampleString": "***\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20*\\x20**\\x0a*"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^bytes=((\\d*-\\d*,? ?)+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "bytes=-"
      ],
      "pumps": [
        ",-0-"
      ],
      "suffix": "bb",
      "exampleString": "bytes=-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-,-0-bb"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "```(blocks?|typescript)\\s+((.|\\s)+?)\\s*```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```blocks\t"
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "c",
      "exampleString": "```blocks\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09c"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 142
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(https?|ftp|mms):\\/\\/((([A-z0-9]+[_\\-]?[A-z0-9]+\\.)*[A-z0-9]+\\-?[A-z0-9]+\\.[A-z]{2,})|(([0-9]{1,3}\\.){3}[0-9]{1,3}))(\\/.*)*\\/?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ftp://a"
      ],
      "pumps": [
        "-a.a_a.a"
      ],
      "suffix": "-a.a_-a",
      "exampleString": "ftp://a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_a.a-a.a_-a"
    },
    "pivot": {
      "num_nodes": 5,
      "exec_time": 780
    },
    "indeg": {
      "num_nodes": 17,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 15,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:.+/)*(\\d{2,4}-\\d{1,2}-\\d{1,2})-(.*)(\\.[^.]+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a/"
      ],
      "suffix": "0/.",
      "exampleString": "a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/0/."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 171
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\w\\d.]*)\\s*=\\s*[\\w\\d.]*\\.getContext\\(?[`'\"](experimental-)*webgl[`'\"](,[\\w\\d\\s{}:.,!]*)*\\)?(\\s*\\|\\|\\s*[\\w\\d.]*\\.getContext\\(?[`'\"](experimental-)*webgl[`'\"](,[\\w\\d\\s{}:.,!]*)*\\)?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "=.getContext(\"webgl\""
      ],
      "pumps": [
        ",,"
      ],
      "suffix": "=a.getCont",
      "exampleString": "=.getContext(\"webgl\",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,=a.getCont"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 682
    },
    "indeg": {
      "num_nodes": 18,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 18,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[a-z](?:-?[a-z0-9]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "--",
      "exampleString": "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa--"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(doc_site_install\\s+::\\s+(.+\\n)+)([ \\t]*\\n)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "doc_site_install\t::\ta"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "l",
      "exampleString": "doc_site_install\\x09::\\x09a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aal"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk)[\\/\\s-]?([\\w\\.-]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "redhat\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "r\t",
      "exampleString": "redhat\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaar\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 171
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\/\\*(.|\\n|\\r)*?\\*\\/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\n",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^0-9]*)+|[0-9]+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a0",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "fxios\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "x",
      "exampleString": "fxios\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000x"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ">a\n"
      ],
      "pumps": [
        "a\n>a\n"
      ],
      "suffix": "\n\na",
      "exampleString": ">a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0aa\\x0a>a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 116
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-z]+\\s*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(-?(?:[_a-z]|\\\\[\\da-f]+ ?)(?:[\\w-]|\\\\\\\\[\\da-f]+ ?)*)\\s*:",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-a\\\\a"
      ],
      "pumps": [
        "a\\\\a"
      ],
      "suffix": "\\a\t::",
      "exampleString": "-a\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\aa\\\\a\\a\\x09::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 132
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\/\\*(.|\\n|\\r)*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\n",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\/albums\\/(.+?)\\/(?:(.*)\\/)*(.+?)\\.(.+?)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/albums/a/"
      ],
      "pumps": [
        "//"
      ],
      "suffix": "a",
      "exampleString": "/albums/a/////////////////////////////////////////////////////////////////////////////////////a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 717
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "(( '.*')|( \".*\")|('.*')|(\".*\"))+;*",
    "exploitString": {
      "degree": 0,
      "separators": [
        " "
      ],
      "pumps": [
        "'' '' "
      ],
      "suffix": " ",
      "exampleString": "\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20''\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "Properties:\\n(?:.+=.+\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Properties:\na="
      ],
      "pumps": [
        "a\na=\n\na="
      ],
      "suffix": "p",
      "exampleString": "Properties:\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=a\\x0aa=\\x0a\\x0aa=p"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^From: (.*(?:\\r?\\n\\s+.*)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "From: \r\n"
      ],
      "pumps": [
        "\t\n\t\r\n"
      ],
      "suffix": "a",
      "exampleString": "From:\\x20\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 697
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(?:[a-zA-Z_]|\\$(?:\\{\\w+\\}|\\w+))+\\w*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$a"
      ],
      "pumps": [
        "a$aa"
      ],
      "suffix": "a{",
      "exampleString": "$aa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa$aaa{"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*((?:\"[^\"]*\"|[^\\s#])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "\"\""
      ],
      "suffix": "#\"\t",
      "exampleString": "a\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"#\"\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(\\\\\\\\|\\\\'|[^'])*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\'\\\\"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[(.+,?)*\\]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "]a",
      "exampleString": "[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[A-Za-z0-9_]+(\\[(\\[.*?\\]|.)*?\\])?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a["
      ],
      "pumps": [
        "[]]"
      ],
      "suffix": "a[",
      "exampleString": "a[[]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]]a["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*(\\w+)\\s*(=\\s*(\\w+|\\\"[^\\\"]*\\\"|\\((\\s*\\\"[^\\\"]*\\\"\\s*,?)*\\)))?,?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a=(\""
      ],
      "pumps": [
        "\"\t\""
      ],
      "suffix": "\"\",\t",
      "exampleString": "a=(\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\\x09\"\"\",\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 141
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 0
    }
  },
  {
    "pattern": "-+ *\\nwesley.* garland(?:\\n|.)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-\nwesley garland"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "-\\x0awesley\\x20garland\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 706
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\\\([ \\t]*)(%.*)*\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "%%"
      ],
      "suffix": "a",
      "exampleString": "\\%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:[^\\\\:]+|\\\\.)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\::",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\<div class=\"map\"\\>(.|\\s)*\\<\\/div>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<div class=\"map\">"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "m",
      "exampleString": "<div\\x20class=\"map\">\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09m"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\'([^\\\\\\'\\n]|\\\\[\\\\\"\\'nrbtfav\\?]|\\\\[0-7]{1,3}|\\\\x[0-9a-fA-F]+|\\\\[uU]([0-9a-fA-F]{4})([0-9a-fA-F]{4})?)*\\'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'\\Ua"
      ],
      "pumps": [
        "aaaaaaa\\Ua"
      ],
      "suffix": "\\x",
      "exampleString": "'\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Uaaaaaaaa\\Ua\\x"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 190
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^((\\w)+((-)*(\\w)*)*);",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "--"
      ],
      "suffix": "-;a",
      "exampleString": "a-------------------------------------------------------------------------------------;a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\/\\*\\*(?:.|\\r|\\n)*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "a\r"
      ],
      "suffix": "/*",
      "exampleString": "/**a\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0d/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(<\\?xml.*\\?>)?(\\r?\\n)*<xml>(.|\\r?\\n)*<\\/xml>$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<xml>"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "\ra",
      "exampleString": "<xml>\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0da"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 188
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<!-- START langtable -->)(.|\\n)*(<!-- END langtable -->)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- START langtable -->"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "T lan",
      "exampleString": "<!--\\x20START\\x20langtable\\x20-->\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aT\\x20lan"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 219
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\[([/]?)(list|li|table|tr|td|th)((\\s[^\\]]+)*)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[/td\t"
      ],
      "pumps": [
        "a\ta\t"
      ],
      "suffix": "r]r",
      "exampleString": "[/td\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09r]r"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(\\\\[\\\\']|[^'])*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:(\\\\[|])|[^|`]|`[^`]+`|`)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "`a``a`a`"
      ],
      "suffix": "`a|`|",
      "exampleString": "`a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a``a`a``a|`|"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\t|\\x0a|\\x0d|\\s)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "__\\s*((.|\\n|\\r)*?)\\s*__",
    "exploitString": {
      "degree": 0,
      "separators": [
        "__"
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "\na_",
      "exampleString": "__\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0aa_"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\?\\?((?:.[^?]|[^?].)+)\\?\\?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "??aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a????",
      "exampleString": "??aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa????"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!-- @@((?:\\n?.)*?)-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- @@\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "->-",
      "exampleString": "<!--\\x20@@\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a->-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[$][{]\\s*((?:\\w|.)*?)\\s*[}]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "${"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "${a",
      "exampleString": "${aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa${a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^#include\\s\"(.+\\/|\\/|\\w|-|\\/)+\\.(md|markdown)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#include\t\"-"
      ],
      "pumps": [
        "/"
      ],
      "suffix": "n.a",
      "exampleString": "#include\\x09\"-//////////////////////////////////////////n.a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "[_a-zA-Z][_a-zA-Z0-9]*(\\\\s*,\\\\s*[_a-zA-Z][_a-zA-Z0-9]*)*\\\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\\"
      ],
      "pumps": [
        "s,\\sa\\"
      ],
      "suffix": "a,",
      "exampleString": "a\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\s,\\sa\\a,"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "(.+?\\n){5,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\na\na\na\na"
      ],
      "pumps": [
        "\na\na"
      ],
      "suffix": "a",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 150
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[(('.*'|[+\\-]?\\d+),)+\\[(\\\".*\\\",?)+\\](,\\d){2,}\\]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[+"
      ],
      "pumps": [
        "0,'',','',+"
      ],
      "suffix": "[+0,",
      "exampleString": "[+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+0,'',','',+[+0,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 156
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": " '(?: \\\\. | \\\\' | [^'\\n])*' ",
    "exploitString": {
      "degree": 0,
      "separators": [
        " ' "
      ],
      "pumps": [
        "\\'  \\   "
      ],
      "suffix": "a",
      "exampleString": "\\x20'\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20\\'\\x20\\x20\\\\x20\\x20\\x20a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*([^:]+?)\\s*:((?:\\(.*?\\)|\".*?\"|'.*?'|[^;]+?)+);?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a;\t:",
      "exampleString": "a:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;\\x09:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 15,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "`([^\\\\`]|@escapes)+`",
    "exploitString": {
      "degree": 0,
      "separators": [
        "`@es"
      ],
      "pumps": [
        "capes@escapes@es"
      ],
      "suffix": "aa",
      "exampleString": "`@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@escapes@esaa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\d+:\\s+([a-zA-Z0-9\\.-]+)(@\\S+)*:\\s+(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0:\ta@"
      ],
      "pumps": [
        "a@a@"
      ],
      "suffix": "\t",
      "exampleString": "0:\\x09a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@a@\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 692
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "(.|\\r|\\n)*<td/>(.|\\r|\\n)*<td/>(.|\\r|\\n)*<td/>(.|\\r|\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r"
      ],
      "suffix": "<td/>",
      "exampleString": "\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d\\x0d<td/>"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 881
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "s!(\\\\\\\\|\\\\!|[^!])*!(\\\\\\\\|\\\\!|[^!])*![msixpodualngc]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "s!"
      ],
      "pumps": [
        "a\\\\"
      ],
      "suffix": "s$!!$",
      "exampleString": "s!a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\s$!!$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 125
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\/?[\\w:\\-]+(?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*\\s*(\\/?)>$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</a\ta=\""
      ],
      "pumps": [
        "\"\ta=\"\ta=\"\ta=\"\ta=\""
      ],
      "suffix": "<",
      "exampleString": "</a\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"\"\\x09a=\"\\x09a=\"\\x09a=\"\\x09a=\"<"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 199
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 0
    }
  },
  {
    "pattern": ":([a-z]+_?)*format$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "or:",
      "exampleString": ":aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaor:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "#",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 62
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "arn:aws:iam::[0-9]+:role\\/([\\w+=,.@-]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "arn:aws:iam::0:role/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0",
      "exampleString": "arn:aws:iam::0:role/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(?:\\/\\/.+\\s+|var\\s+\\w+\\s*=\\s*require\\([^)]+\\).*\\s+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//a\t"
      ],
      "pumps": [
        "//a\tvar\ta=require(a)\t//\t\t"
      ],
      "suffix": "eq",
      "exampleString": "//a\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09//a\\x09var\\x09a=require(a)\\x09//\\x09\\x09eq"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 230
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:\\\\\\/|[^\\/\\\\]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\//",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\//"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 65
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "Name Servers Information:\\n\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Name Servers Information:\n\na"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "er\n",
      "exampleString": "Name\\x20Servers\\x20Information:\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaer\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\00"
      ],
      "suffix": "0a",
      "exampleString": "\"\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\000a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r*\\n|\\r)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([.\\d]*)+(em|ex|px|gd|rem|vw|vh|vm|ch|mm|cm|in|pt|pc|deg|rad|ms|s|hz|khz){1}?",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ".."
      ],
      "suffix": ".r",
      "exampleString": ".....................................................................................r"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\d+,?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ",,",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000,,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\x0A|\\xA0|\\x0A|\\r|\\n){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^\\\\;]+|\\\\.)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\;;",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\;;"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "/([^/]*\\.)+[^/]*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        ".a"
      ],
      "suffix": "a./",
      "exampleString": "/.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.aa./"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\s|&nbsp;|<\\s*br\\s*\\/*\\s*>)*|(?:\\s|&nbsp;|<\\s*br\\s*\\/*\\s*>)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<br"
      ],
      "pumps": [
        "/><br\t><br"
      ],
      "suffix": "/",
      "exampleString": "<br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/><br\\x09><br/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 156
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": "\"(?:[^\\\\\"]+|\\\\\\\\|\\\\'|\\\\\")*?\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"\"",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\"\""
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((.|\\n)*;)\\s*(get;|get\\s*.\\w*;)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "et",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aet"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 131
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "\u0001?\u001b\\]((?:.|;)*?)(\u0007)\u0002?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u0001\u001b]"
      ],
      "pumps": [
        ";;"
      ],
      "suffix": "\u0001;",
      "exampleString": "\\x01\\x1b];;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\\x01;"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<AUTHOR_LIST(?:\\s*(\\w+)\\s*=\\s*\"([^\"]+)\"\\s*)*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<AUTHOR_LISTa=\"a\""
      ],
      "pumps": [
        "\t\ta=\"a\""
      ],
      "suffix": "HOR",
      "exampleString": "<AUTHOR_LISTa=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"\\x09\\x09a=\"a\"HOR"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 148
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\{(,? ?[A-z0-9 ]+)+\\}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{, a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "{{",
      "exampleString": "{,\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa{{"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:(?:\\\\.)|(?:[^,]))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": ",,",
      "exampleString": "a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a,,"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "qupzilla\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "l",
      "exampleString": "qupzilla\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000l"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s([frentopc-]{0,4}bsd|dragonfly)\\s?([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\tbsd\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\tc-",
      "exampleString": "\\x09bsd\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09c-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*?\\r\\n)*?\\r\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\na"
      ],
      "suffix": "\r",
      "exampleString": "\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d\\x0aa\\x0d"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "task update: :environment do\\n((\\n|\\s*.*\\n)*)\\s+end",
    "exploitString": {
      "degree": 0,
      "separators": [
        "task update: :environment do\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": " do",
      "exampleString": "task\\x20update:\\x20:environment\\x20do\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20do"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.+)+ is (ready|ready and printing|not ready)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " pri",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20pri"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "Servidor\\(es\\) de Nombres de Dominio:\\n\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Servidor(es) de Nombres de Dominio:\n\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "ni",
      "exampleString": "Servidor(es)\\x20de\\x20Nombres\\x20de\\x20Dominio:\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ani"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 140
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(SESSION|RESOURCE)\\s+RATE\\s+TO\\s+(((:\\$+)?\\w+)|\\d+)\\s+WHERE\\s+VERSION\\s*=\\s*(\\$*\\w+)(\\s+AND\\s+(LOG_CHANGE|VIRTUAL_CHANGE)\\s*=\\s*(.+))*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "SESSION\tRATE\tTO\t0\tWHERE\tVERSION=a\tAND"
      ],
      "pumps": [
        "\tLOG_CHANGE=a\tAND\tLOG_CHANGE=\t\tAND"
      ],
      "suffix": "\tLOG",
      "exampleString": "SESSION\\x09RATE\\x09TO\\x090\\x09WHERE\\x09VERSION=a\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG_CHANGE=a\\x09AND\\x09LOG_CHANGE=\\x09\\x09AND\\x09LOG"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 773
    },
    "indeg": {
      "num_nodes": 22,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 19,
      "exec_time": 1
    }
  },
  {
    "pattern": "(([a-z]+:)([a-z]+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a::",
      "exampleString": "a:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*\\*\\s*\\n?([^\\*]*(\\*[^\\/])?)*\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**\n"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "/*/\n",
      "exampleString": "/**\\x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/*/\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\S+::\\w+)[.]?(\\S+)*\\s=\\s(.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a::a.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "a::a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 757
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^macro\\s+([a-zA-Z0-9_]+)\\s*\\(\\s*((?:[a-zA-Z0-9_]+(?:,\\s*)?)*)\\s*\\)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "macro\ta(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ma",
      "exampleString": "macro\\x09a(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaama"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\w+|::)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a:",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:import|from) .*\\n(?:(?:import|from) .*\\n)*\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "from \ni"
      ],
      "pumps": [
        "mport \nimport \ni"
      ],
      "suffix": "o",
      "exampleString": "from\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aimport\\x20\\x0aio"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\r\\n|[\\x20\\x0d\\x0a\\x09])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a.a"
      ],
      "pumps": [
        "a[\"\"][\"\"].a"
      ],
      "suffix": "a[",
      "exampleString": "a.aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa[\"\"][\"\"].aa["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 172
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n    a;a"
      ],
      "pumps": [
        "a; qa;a"
      ],
      "suffix": ",",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20a;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;aa;\\x20qa;a,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 181
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 0
    }
  },
  {
    "pattern": "typeof asset(.|\\s)+?require\\('fs'\\)\\.readFileSync\\(__dirname \\+ '\\/style\\.css', 'utf8'\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "typeof asset\t"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "mere",
      "exampleString": "typeof\\x20asset\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09mere"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 236
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^\\d]*(\\d+)[^\\d]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "a",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 621
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*\\(((?:[^)\\\\]+|\\\\.)*)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t)\t",
      "exampleString": "(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09)\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((.|\\n)+)(\\n \\/\\*\\sModules(.|\\n)+)(\\n\\/\\*\\sVariables(.|\\n)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "a\n /*\nModules\n\n /*\n",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\x20/*\\x0aModules\\x0a\\x0a\\x20/*\\x0a"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 800
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\+((?:\\+)?[\\w\\-]+)*(?:\\.v\\d+\\.\\d+\\.\\d+)?(?:\\.js)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "++a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "j",
      "exampleString": "++aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaj"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "```docgen(.*\\r?\\n)*```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```docgen"
      ],
      "pumps": [
        "\r\n\n"
      ],
      "suffix": "e",
      "exampleString": "```docgen\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0ae"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\s*\\S+\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 651
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[([a-z]+\\w*)+([~\\|\\^\\$\\*!=]=?)?['\"]?([^\\]]*?)['\"]?\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "[",
      "exampleString": "[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa["
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 1
    }
  },
  {
    "pattern": "^author-mail <([^>]+)+>$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "author-mail <a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "-ma",
      "exampleString": "author-mail\\x20<aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-ma"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-zA-Z][a-zA-Z_0-9]*)+( )",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a  ",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\\\)?#\\[((?:.|\\n)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\#["
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "\\#[\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 657
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\.(Symbol\\.(?:[a-z]+[A-Z]?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".Symbol.a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ymb.",
      "exampleString": ".Symbol.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaymb."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\*\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*"
      ],
      "pumps": [
        "\t*"
      ],
      "suffix": "#",
      "exampleString": "*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*\\x09*#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([AIFED])(\\d+)\\.*(\\d+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A00"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0.A",
      "exampleString": "A000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.A"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 68
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\[.*?\\])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        "][]["
      ],
      "suffix": "[",
      "exampleString": "[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\\\|(\\\\?\\w+)+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\\",
      "exampleString": "\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.+\\/)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a/"
      ],
      "suffix": "a",
      "exampleString": "a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "`((?:\\S| -> |, )+)(\\|)(\\S+)`",
    "exploitString": {
      "degree": 0,
      "separators": [
        "` ->"
      ],
      "pumps": [
        "  ->  ->"
      ],
      "suffix": "-",
      "exampleString": "`\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->\\x20\\x20->-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([\\S]+)+\\s([\\S]+)\\s[{]{1}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "{\t\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa{\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 70
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:\\s*\\n)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "__!\\s*((.|\\n|\\r)*?)\\s*__",
    "exploitString": {
      "degree": 0,
      "separators": [
        "__!"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "\na",
      "exampleString": "__!\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\t*exitf\\((.*\\n)*?.*\\);\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "exitf("
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "i",
      "exampleString": "exitf(\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ai"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(<math( ('.*?'|\".*?\"|[^>])+)>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<math "
      ],
      "pumps": [
        "'''"
      ],
      "suffix": "a",
      "exampleString": "<math\\x20''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([a-z]\\/([a-zA-Z0-9]{0,}\\/{0,})+)|([a-z][^L\\W]([a-zA-Z0-9]{0,}\\/)+))[a-zA-Z0-9]{1,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "aa/a_",
      "exampleString": "a/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/a_"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "/\\*/?(?:\\n|[^/]|[^*]/)*\\*/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*/a"
      ],
      "pumps": [
        "/\na"
      ],
      "suffix": "/**/\n",
      "exampleString": "/*/a/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/\\x0aa/**/\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\+([A-Za-z_]+\\w*)(\\((.+(,\\s)?)*\\))?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+a(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "+",
      "exampleString": "+a(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa+"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:(?:RMSG\\s+([^\\s]+)\\s+([^\\s]+)\\s+(?:([|+]\\s+([\\w\\s]+)|[^\\s]+)[^\\S\\r\\n]+)?(\\d+)\\s*\\r\\n([^\\\\r\\\\n]*?)\\r\\n)+?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "RMSG\ta\t"
      ],
      "pumps": [
        "a\t0\r\n\r\nRMSG\ta\ta\r\nRMSG\t0\r\na\t0\r\n\r\nRMSG\ta\t"
      ],
      "suffix": "MSn$\t0\t",
      "exampleString": "RMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09a\\x0d\\x0aRMSG\\x090\\x0d\\x0aa\\x090\\x0d\\x0a\\x0d\\x0aRMSG\\x09a\\x09MSn$\\x090\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 377
    },
    "indeg": {
      "num_nodes": 17,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[a-z][a-z0-9]*(-[a-z0-9]*[a-z][a-z0-9]*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-"
      ],
      "pumps": [
        "aaa-"
      ],
      "suffix": "--",
      "exampleString": "a-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa-aaa---"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\$[lh]\\[.+\\]|\\$[lh])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$h["
      ],
      "pumps": [
        "a]$h["
      ],
      "suffix": "[]$",
      "exampleString": "$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[a]$h[[]$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^http(s)?://[a-z0-9-]+(.[a-z0-9-]+)*(:[0-9]+)?(/.*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://aaa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 669
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*')",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\\"
      ],
      "pumps": [
        "\"\\\\\\"
      ],
      "suffix": "\\\"\"a\\",
      "exampleString": "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\\\"\"a\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n(\\s*\\n)+\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\t"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!-- PROPLIST: (.*) -->((.|[",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- PROPLIST:  -->"
      ],
      "pumps": [
        "a$"
      ],
      "suffix": "I",
      "exampleString": "<!--\\x20PROPLIST:\\x20\\x20-->a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$I"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 180
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[ \\t\\n]+((.|\\n)*?)[ \\t\\n]+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "a",
      "exampleString": "\\x09\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^'(\\\\.|[^'])*'$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:[A-Z]\\w*[a-z]\\w+\\:\\:)*[A-Z]\\w*[a-z]\\w+) \\((.*)\\)(?: on line #(\\d+) of (.+))?\\:\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Aa"
      ],
      "pumps": [
        "a::Aaa"
      ],
      "suffix": "n",
      "exampleString": "Aaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaaa::Aaan"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 218
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*\\.@each){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".@each.@ea"
      ],
      "pumps": [
        "ch.@each.@ea"
      ],
      "suffix": "eaca",
      "exampleString": ".@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@each.@eaeaca"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "%\\{((?:.|\\n)+?)\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%{\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "%",
      "exampleString": "%{\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a%"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<textarea(\\r|\\t|\\n|.)*?<\\/textarea>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<textarea"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "ar",
      "exampleString": "<textarea\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0aar"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 129
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "([^\\w\\s]{2,}){5,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$$$$$$$$$$"
      ],
      "pumps": [
        "$$"
      ],
      "suffix": "\t",
      "exampleString": "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 139
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(::|[_a-z])([_a-z0-9]*::[_a-z0-9]+)*[_a-z0-9]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "a::aa"
      ],
      "suffix": "a:a",
      "exampleString": "aa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa::aaa:a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "|===\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "|",
      "exampleString": "|===\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d|"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(float|int|bool|vec2|vec3|vec4|struct)([ \\t\\n\\r]+[^\\;]+[ \\t\\n\\r]*\\,*)+\\;",
    "exploitString": {
      "degree": 0,
      "separators": [
        "vec3"
      ],
      "pumps": [
        "\t\t,"
      ],
      "suffix": "o",
      "exampleString": "vec3\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,\\x09\\x09,o"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 158
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "((a{0,5}){0,5})*[c]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aaa"
      ],
      "suffix": "acc",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacc"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 140
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\$\\{(([\\w\\$\\-]+(\\.|\\s)?[\\w\\$\\-]*)+)\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "${a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$\t\t",
      "exampleString": "${aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:.*\\n){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:[^\\\\:]+|\\\\.)*)(?::(.*))?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ":",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 669
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[A-Z](?:(?:\\S+\\s\\S+)+|\\S+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Aa\ta"
      ],
      "pumps": [
        "aa\ta"
      ],
      "suffix": "Aa\t\t",
      "exampleString": "Aa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aAa\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\s*(?:\\d+|(?:\\d*\\s*\\-\\s*\\d+)|(?:\\d+\\s*\\-\\s*\\d*))\\s*,\\s*)*\\s*(?:\\d+|(?:\\d*\\s*\\-\\s*\\d+)|(?:\\d+\\s*\\-\\s*\\d*))\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "\t-,0-0,0"
      ],
      "suffix": "-,,",
      "exampleString": "0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0\\x09-,0-0,0-,,"
    },
    "pivot": {
      "num_nodes": 5,
      "exec_time": 340
    },
    "indeg": {
      "num_nodes": 26,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 24,
      "exec_time": 1
    }
  },
  {
    "pattern": "imports: \\[(.|\\s)*Test1Module(.|\\s)*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "imports: ["
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "mpo",
      "exampleString": "imports:\\x20[\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09mpo"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\s*)(@charset)( [^;]+;\\s*))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "@charset a;\t"
      ],
      "suffix": "et",
      "exampleString": "@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09@charset\\x20a;\\x09et"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\d)+|((\\d)+\\.(\\d)+)((,)(\\d)+|((\\d)+\\.(\\d)+))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0.00"
      ],
      "pumps": [
        ".000"
      ],
      "suffix": "0..",
      "exampleString": "0.00.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.0000.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "[,:]\\s*\\[(.+:.+,?\\s*)+\\]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ",[a:"
      ],
      "pumps": [
        "a,a:"
      ],
      "suffix": "::",
      "exampleString": ",[a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:a,a:::"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\:\\'\\/\\\\\\\\+=&amp;%\\$#_]*)?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ftps://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\u0000",
      "exampleString": "ftps://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x00"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 131
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(?:(?:\\\\[^\\n\\r]|[^\\]{])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\\a"
      ],
      "suffix": "]]",
      "exampleString": "a\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\a]]"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[^\\d\\s_-]|['])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a'"
      ],
      "suffix": "\t",
      "exampleString": "a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'a'\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((((([^\",\\\\{}\\s]|NULL)+|\"([^\"\\\\]|\\\\\"|\\\\\\\\)*\")))(,)?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "N"
      ],
      "pumps": [
        "ULLNULLN"
      ],
      "suffix": "ULN\"\"",
      "exampleString": "NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULN\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 109
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\"(.|\\n)*?\"|'(.|\\n)*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "</a\ta"
      ],
      "pumps": [
        "=\"\"\na=\"\"\ta\t"
      ],
      "suffix": "</\n",
      "exampleString": "</a\\x09a=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09=\"\"\\x0aa=\"\"\\x09a\\x09</\\x0a"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 223
    },
    "indeg": {
      "num_nodes": 20,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([\\.#])((?:[^\\.#\\[:\\\\\\s]+|\\\\.)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\ta#",
      "exampleString": "#aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\\x09a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "::slotted("
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ")a(",
      "exampleString": "::slotted(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)a("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:r?[$one_char_types]\\d*_*)+)keysort((?:_?inplace)?)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "r"
      ],
      "pumps": [
        "a_r"
      ],
      "suffix": "a",
      "exampleString": "ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra_ra"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 160
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:recall x)|(?:precision y)): \\[(\\d+.\\d+(, \\d+.\\d+)+)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "recall x: [0a0, "
      ],
      "pumps": [
        "0000, "
      ],
      "suffix": " 0",
      "exampleString": "recall\\x20x:\\x20[0a0,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x200000,\\x20\\x200"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 282
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "([\\s\\n]*<align left><\\/align>([\\s\\n])*){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<align left></align><align left></align"
      ],
      "pumps": [
        ">\t<align left></align"
      ],
      "suffix": "</",
      "exampleString": "<align\\x20left></align><align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align>\\x09<align\\x20left></align</"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 146
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": ">Year.(&#160;|\\n)active(.|\\n)*?<td>[^<]*present\\\\s*<",
    "exploitString": {
      "degree": 0,
      "separators": [
        ">Yeara\nactive"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "<\nacti",
      "exampleString": ">Yeara\\x0aactivea\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a<\\x0aacti"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 182
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "## Command reference(.|\\n)*\\n## Team",
    "exploitString": {
      "degree": 0,
      "separators": [
        "## Command reference"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "r\n#",
      "exampleString": "##\\x20Command\\x20reference\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ar\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 126
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\(fwd\\)\\s*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(f"
      ],
      "pumps": [
        "wd)\t(f"
      ],
      "suffix": "\t(ff",
      "exampleString": "(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(fwd)\\x09(f\\x09(ff"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:(?:\\s*\\/\\/.*)*\\s*lodash\\._[^=]+=.+\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "lodash."
      ],
      "pumps": [
        "_a=a\nlodash._a=\n\nlodash."
      ],
      "suffix": "=lod",
      "exampleString": "lodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash._a=a\\x0alodash._a=\\x0a\\x0alodash.=lod"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 185
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n                    --TEST--"
      ],
      "pumps": [
        "--TEMPLATE----TEMPLATE--"
      ],
      "suffix": "--TEMPLATE----EXCEPTION-",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 1955
    },
    "indeg": {
      "num_nodes": 21,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 21,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\/\\/JG-CONTROLLER((.|\\n)*)\\/\\/END JG-CONTROLLER",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//JG-CONTROLLER"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "//J",
      "exampleString": "//JG-CONTROLLER\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a//J"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 150
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9-.])*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ".-",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "Service Information \"delete\"\\n(?:.*\\n)*?URL:\\s+(.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Service Information \"delete\"\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "UR",
      "exampleString": "Service\\x20Information\\x20\"delete\"\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aUR"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 680
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(\\\\[\\\\>]|[^>])*>[egimosx]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<"
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": ">a\\",
      "exampleString": "<\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\>a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\[\\[(([a-zA-Z_-]+\\.\\d+)?([a-zA-Z0-9_.{}-]+)*)\\]\\])",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[[a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a.a[",
      "exampleString": "[[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.a["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\n*(([ ]{0,3}([*+-]|\\d+[.])[ \\t]+.*)(\\n.+|\\n{2,}([*+-].*|\\d+[.])[ \\t]+.*|\\n{2,}[ \\t]+\\S.*)*)\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*\t"
      ],
      "pumps": [
        "\na\na"
      ],
      "suffix": "\n",
      "exampleString": "*\\x09\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 1002
    },
    "indeg": {
      "num_nodes": 19,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 16,
      "exec_time": 1
    }
  },
  {
    "pattern": "'(?:%'|.)+?'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'%"
      ],
      "pumps": [
        "'%'%"
      ],
      "suffix": "%a",
      "exampleString": "'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%'%%a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "Domain servers:\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Domain servers:\na"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "ers",
      "exampleString": "Domain\\x20servers:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaers"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?: *\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/\\n)?( *)lodash\\.VERSION *=",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "a***"
      ],
      "suffix": " /**/**",
      "exampleString": "/**a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***a***\\x20/**/**"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 266
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:([`](\\\\.|[^\"]|\\\\\")*?[`])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "`\\"
      ],
      "pumps": [
        "\"\\\\a\\"
      ],
      "suffix": "`\\a",
      "exampleString": "`\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\\"\\\\a\\`\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[-\\w]+( *\\. *[-/\\w]*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a."
      ],
      "pumps": [
        "a. ."
      ],
      "suffix": "a.a /",
      "exampleString": "a.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.\\x20.a.a\\x20/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 90
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "\\/?v?\\d\\.(\\d+\\.?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/v0.0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0..",
      "exampleString": "/v0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.+\\.)*[xy]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        ".a.a"
      ],
      "suffix": ".a",
      "exampleString": "a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "@example_html((.|[\\n\\r])*)\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "@example_html"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "htm",
      "exampleString": "@example_htmla\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ahtm"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\w+)\\(((?:'.+'(?:::\\w+)?, *)*)(\\w+)\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a('a'::"
      ],
      "pumps": [
        "a,'a','a'::"
      ],
      "suffix": ":",
      "exampleString": "a('a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a'::a,'a','a':::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "<html>(.|\\r|\\n)*<title><\\/title>(.|\\r|\\n)*<\\/html>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<html>"
      ],
      "pumps": [
        "a\r"
      ],
      "suffix": "<",
      "exampleString": "<html>a\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0da\\x0d<"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 187
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^CMSSW_(\\d+)_(\\d+)_(\\d+)(_\\S+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "CMSSW_0_0_0_"
      ],
      "pumps": [
        "a_a_"
      ],
      "suffix": "\t",
      "exampleString": "CMSSW_0_0_0_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\s*inspec-test-fixture\\s+\\((\\d+\\.\\d+\\.\\d+(,\\s)?){2,}\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "inspec-test-fixture\t(0.0.00.0."
      ],
      "pumps": [
        "000.0."
      ],
      "suffix": "(0.0.0,\t",
      "exampleString": "inspec-test-fixture\\x09(0.0.00.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.000.0.(0.0.0,\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 179
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "([a-z0-9\\._]+)\\s*;\\s*(([0-9\\.]+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a;."
      ],
      "pumps": [
        ".."
      ],
      "suffix": ".a",
      "exampleString": "a;......................................................................................a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\/\\*(.|[\\r\\n])*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "a",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^K([^+]+)+.+private$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Ka"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "at+privat",
      "exampleString": "Kaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaat+privat"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\$/(\\$.|.)*?/\\$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$/$"
      ],
      "pumps": [
        "a$$a$"
      ],
      "suffix": "a",
      "exampleString": "$/$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a$$a$a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\\\.|\\\\\\n|[^\\\\\\n])*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "a\\\n\\"
      ],
      "suffix": "\n\n",
      "exampleString": "\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\a\\\\x0a\\\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*use\\s+([\\w\\:]+)*;.*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "use\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$",
      "exampleString": "use\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 649
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-z]*\\\\s*)*(([a-z]*[A-Z]*[0-9]*(_|-)*)*/*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "__"
      ],
      "suffix": "/\\",
      "exampleString": "____________________________________________________________________________________/\\"
    },
    "pivot": {
      "num_nodes": 5,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "[MmLlHhVvQqCcTtSsAaZz](?:\\d|[eE.,+-]|\\W)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "0"
      ],
      "suffix": "aa",
      "exampleString": "a000000000000000000000000000000000000000000aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\|.*\\|)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "|"
      ],
      "pumps": [
        "||||"
      ],
      "suffix": "a",
      "exampleString": "|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "(rim\\stablet\\sos)[\\/\\s-]?([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "rim\ttablet\tos\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "m\tta",
      "exampleString": "rim\\x09tablet\\x09os\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaam\\x09ta"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[^\\s\"']+|([^\\s\"']*\"([^\"]*)\"[^\\s\"']*)+|'([^']*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\"\"a"
      ],
      "suffix": "a\"'\"'",
      "exampleString": "\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"a\"\"aa\"'\"'"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\+|(0(\\d+)?[-\\/.\\s]?))[1-9]\\d{0,2}[-\\/.\\s]?)?((\\(\\d{1,6}\\)|\\d{1,6})[-\\/.\\s]?)?(\\d+[-\\/.\\s]?)+\\d+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\t(0000",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09(0000"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 218
    },
    "indeg": {
      "num_nodes": 16,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.|[\\n\\r])*Compiling REx.*?[\\r\\n]",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "m",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0am"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 132
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^'((?:[^']|\\\\.)*)'$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!-- Usage of azlyrics.com content by any third-party lyrics provider is prohibited by our licensing agreement. Sorry about that. -->((.|\\n|\\r)*?)</div>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!-- Usage of azlyricsacom content by any third-party lyrics provider is prohibited by our licensing agreementa Sorry about thata -->"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "zly",
      "exampleString": "<!--\\x20Usage\\x20of\\x20azlyricsacom\\x20content\\x20by\\x20any\\x20third-party\\x20lyrics\\x20provider\\x20is\\x20prohibited\\x20by\\x20our\\x20licensing\\x20agreementa\\x20Sorry\\x20about\\x20thata\\x20-->a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0azly"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 359
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*SELECT\\s+((COUNT)\\([\\s\\S]*\\)\\s*,?)+((\\s*)|(\\s+FROM[\\s\\S]*))?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "SELECT\tCOUNT(),"
      ],
      "pumps": [
        "COUNT()COUNT(),"
      ],
      "suffix": "COUNT(),CO",
      "exampleString": "SELECT\\x
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 614
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 1
    }
  },
  {
    "pattern": ".* type=(?:\"((?:\\\\.|[^\\\"])*)\"|([^;\\s]*))",
    "exploitString": {
      "degree": 0,
      "separators": [
        " type=\"\\"
      ],
      "pumps": [
        "a\\\\a\\"
      ],
      "suffix": "yp a\" \t ty",
      "exampleString": "\\x20type=\"\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\yp\\x20a\"\\x20\\x09\\x20ty"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 140
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.+)+(\\/){1}(.+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a/",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 642
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\d+(?:.\\d+)+(:?-\\d+)?(?:-[a-z0-9]{8})?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0a"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0:-0-",
      "exampleString": "0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000:-0-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 182
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "::(\\w+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "::a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ":::",
      "exampleString": "::aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 69
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^  Mono: (Playback |Capture )?(\\d+)(\\s+|\\[[^\\]]+\\])*(Capture (\\d+))?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "  Mono: 0\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "o: ",
      "exampleString": "\\x20\\x20Mono:\\x200\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09o:\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 196
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*(#.*)*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "##"
      ],
      "suffix": "a",
      "exampleString": "####################################################################################a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 697
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\u001b\\[(\\d*;?)*\\S)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\u001b["
      ],
      "pumps": [
        "00"
      ],
      "suffix": ";aa",
      "exampleString": "\\x1b[000000000000000000000000000000000000000000000000000000000000000000000000000000000000;aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*\\n){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "\t",
      "exampleString": "\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.+)[_-](\\d+\\.\\d{1,6})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a-0."
      ],
      "pumps": [
        "0000000."
      ],
      "suffix": "0.",
      "exampleString": "a-0.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0000000.0."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 154
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "----a",
      "exampleString": "<!--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a----a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\(([^\\)]*\\(\\?[^\\)]*\\)[^\\)]*)*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "("
      ],
      "pumps": [
        "(?)a"
      ],
      "suffix": "(",
      "exampleString": "((?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a(?)a("
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*(\\d+\\.\\s+([^\\n]*)\\n)*(\\d+\\.\\s+([^\\n]*)\\n?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0."
      ],
      "pumps": [
        "\t\n0.\t\n0."
      ],
      "suffix": "0a\n.",
      "exampleString": "0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.\\x09\\x0a0.0a\\x0a."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 157
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\.[^/]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ".a.a"
      ],
      "suffix": "/",
      "exampleString": ".a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "int3\\s*\\n(\\s*int3\\s*\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "int3\nint3"
      ],
      "pumps": [
        "\nint3\n\nint3"
      ],
      "suffix": "\t\nn",
      "exampleString": "int3\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x0aint3\\x0a\\x0aint3\\x09\\x0an"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\{%\\s*(\\w+)(?:\\s+(?:\\w+)\\s*=\\s*(?:(?:\"(?:.+?)\")|(?:'(?:.+?)')))*\\s*%\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "{%a\ta="
      ],
      "pumps": [
        "\t'a'\ta='a'\ta="
      ],
      "suffix": "=",
      "exampleString": "{%a\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=\\x09'a'\\x09a='a'\\x09a=="
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 175
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 1
    }
  },
  {
    "pattern": "(.|\\n)*FAIL at -e line 1\\.",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "-",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 121
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--(.|[\\r\\n])*?-->",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "!-",
      "exampleString": "<!--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a!-"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 96
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<link.*href=(s*?)*(.+).*?(s*?)>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<linkhref="
      ],
      "pumps": [
        "ss"
      ],
      "suffix": "e",
      "exampleString": "<linkhref=sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssse"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "^I generate a (.*)project named '((?:\\w|-|_)+)' that is '([^']*)' and described as '([^']*)'$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "I generate a project named '"
      ],
      "pumps": [
        "__"
      ],
      "suffix": "mapr",
      "exampleString": "I\\x20generate\\x20a\\x20project\\x20named\\x20'____________________________________________________________________________________mapr"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 337
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(?:.*[\\\\\\/])*(\\w+)(?:\\.my\\w)?'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "//"
      ],
      "suffix": "my/",
      "exampleString": "'////////////////////////////////////////////////////////////////////////////////////my/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\w+(\\.\\w+)?|'.*?'|\".*?\")\\s+(in|==|!=|not in)\\s+(\\w+(\\.\\w+)?|'.*?'|\".*?\")(\\s+(or|and)\\s+)?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "''\tn"
      ],
      "pumps": [
        "ot in\t'''\tand\t''\tn"
      ],
      "suffix": "nd\tand",
      "exampleString": "''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09not\\x20in\\x09'''\\x09and\\x09''\\x09nnd\\x09and"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 395
    },
    "indeg": {
      "num_nodes": 24,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 20,
      "exec_time": 0
    }
  },
  {
    "pattern": "#([^\\s=]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "#aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(no)\\s+([\\w\\-:]*)\\s*(\\d+[.]?(\\d+[._]?)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "no\t0.0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "n",
      "exampleString": "no\\x090.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000n"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "<(([a-zA-Z])+((\\s+\\w+)=?(\"?\\w+\"?)?){0,})( (\\/)?)?\\s*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\ta="
      ],
      "pumps": [
        "\taa\ta="
      ],
      "suffix": "a",
      "exampleString": "<a\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=\\x09aa\\x09a=a"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 141
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:'[^']*'|\"[^\"]*\"|,[\\s\\n]|[^\\s\\n])*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "a''\"'\"'"
      ],
      "suffix": "\"\t\"\t'\t",
      "exampleString": "'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'a''\"'\"'\"\\x09\"\\x09'\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "(.*\\n)*(#=\\ *require\\ +.*\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": " ",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 130
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:%\\{(.|\\n)*?%\\})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%{"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\n",
      "exampleString": "%{\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*test\\s+('(.*)'|\"(.*)\")+\\s*(\\{|do)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "test\t'"
      ],
      "pumps": [
        "'\"\"\"\"'"
      ],
      "suffix": "\t",
      "exampleString": "test\\x09''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"''\"\"\"\"'\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<p.*?>|<P>|<br>)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<br"
      ],
      "pumps": [
        "><p><p><br"
      ],
      "suffix": "<P",
      "exampleString": "<br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br><p><p><br<P"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^=,\\s]*)\\s*=\\s*((?:\"(?:\\\\.|[^\"\\\\]+)*\"|'(?:\\\\.|[^'\\\\]+)*')|[^'\"\\s]*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "=\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\a'a\\,",
      "exampleString": "=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\a'a\\,"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:isa = PBXProject;(.|[\r",
    "exploitString": {
      "degree": 0,
      "separators": [
        "isa = PBXProject;"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "ib",
      "exampleString": "isa\\x20=\\x20PBXProject;\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aib"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 252
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\s*)(, | {2})((\\s*(\\w+)(\\s+|::)\\w+\\s*.*?,?)+)\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ", a::a"
      ],
      "pumps": [
        "\t\ta\ta"
      ],
      "suffix": "a",
      "exampleString": ",\\x20a::a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09a\\x09\\x09a\\x09aa"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 767
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*((?:.|\\s)+?)\\s*\\{((?:.|\\s)+?)\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "}\t",
      "exampleString": "a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09}\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(\\\\\\\\|\\\\.|[^'\\\\])*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\a\\\\"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\a\\\\\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\n(\\s*\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\t"
      ],
      "suffix": "\t",
      "exampleString": "\\x0a\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\\\?\\[([^\\[]+?)\\\\?\\])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\[a"
      ],
      "pumps": [
        "\\]\\[a\\]\\[a"
      ],
      "suffix": "\\[a[",
      "exampleString": "\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\]\\[a\\[a["
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^ tunnel mpls traffic-eng bandwidth[^\\n]*\\n*(",
    "exploitString": {
      "degree": 0,
      "separators": [
        " tunnel mpls traffic-eng bandwidth\n                   "
      ],
      "pumps": [
        "a "
      ],
      "suffix": "to\n                  tunnel mpls traffic",
      "exampleString": "\\x20tunnel\\x20mpls\\x20traffic-eng\\x20bandwidth\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20a\\x20to\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20tunnel\\x20mpls\\x20traffic"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 432
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "```(.*\\n)+?```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "`a\n``",
      "exampleString": "```a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a`a\\x0a``"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(([a-zA-Z])+((\\s+\\w+)=?(\"?\\w+\"?)?){0,})( (\\/)?)?\\s*>.*<\\/(([a-zA-Z])+((\\s+\\w+)=?(\"?\\w+\"?)?){0,})( (\\/)?)?\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\ta=\""
      ],
      "pumps": [
        "a\taa"
      ],
      "suffix": "a_\"\t<",
      "exampleString": "<a\\x09a=\"a\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa\\x09aaa_\"\\x09<"
    },
    "pivot": {
      "num_nodes": 12,
      "exec_time": 226
    },
    "indeg": {
      "num_nodes": 25,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 25,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\r\\n|\\r|\\n|\\t)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 88
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "Name Servers:\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Name Servers:\na\n"
      ],
      "pumps": [
        "a\na\n"
      ],
      "suffix": "s",
      "exampleString": "Name\\x20Servers:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0as"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([\\s\\r\\n]*|(\\/\\/[^\\r\\n]*)[\\r\\n]|\\/\\*(?:.|\\r|\\n)*\\*\\/)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\n/",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x0a/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "(E:Failed to fetch.+Hash Sum mismatch)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "E:Failed to fetchaHash Su"
      ],
      "pumps": [
        "m mismatchE:Failed to fetchaHash Sum mismatchE:Failed to fetchaHash Su"
      ],
      "suffix": "t",
      "exampleString": "E:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sum\\x20mismatchE:Failed\\x20to\\x20fetchaHash\\x20Sut"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 150
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[\\s*((\\d+(\\s+)?)*)\\s*\\]\\s*(\\d+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\t[",
      "exampleString": "[0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09["
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:.*,)*\\s*CredSSP\\s*([^,]*),?",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ",,"
      ],
      "suffix": "e,,Ca",
      "exampleString": ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,e,,Ca"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^/?((?:[^/\\s]+/?)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a//",
      "exampleString": "/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa//"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<body[^>]*>((\\n|.)*)<\\/body>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<body>"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "b<></bo",
      "exampleString": "<body>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ab<></bo"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 117
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(&lt;\\/?\\w(.|\\n)*?\\/?&gt;)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "&lt;/a"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "/",
      "exampleString": "&lt;/a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^<!--\\s*([\\/]{0,1})tmpl_([a-z]+)+\\s*([\\w\\W]*)\\s*-->$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--tmpl_a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "--t",
      "exampleString": "<!--tmpl_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa--t"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.+\\n){3,}\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a\na\na"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "a\n",
      "exampleString": "a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaa\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\"[^\"]*\"|\\'[^\\']*\\'|[^,\"]+|[^,\\']+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ",\"a,',",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\"a,',"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*([\\r\\n]|.)*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "a",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\.?:container\\((?:[^()]+|\\([^()]*\\))+\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".:container(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ".:()a",
      "exampleString": ".:container(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.:()a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<!--\\s*?@@(?:(?:\\n?.)*?)-->)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--@@\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "-@",
      "exampleString": "<!--@@\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a-@"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<body[^>]*>((.|[\\n\\r])*)<\\/body>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<body>"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "b<></bo",
      "exampleString": "<body>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ab<></bo"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "<Translate(\\s*)?((component=\"[a-z]+\")(\\s*)|(contentKey=(\"[a-zA-Z0-9.\\-_]+\"|\\{.*\\}))(\\s*)|(interpolate=\\{.*\\})(\\s*))*(\\s*)\\/?>|<\\/Translate>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<Translate"
      ],
      "pumps": [
        "interpolate={}contentKey={}interpolate={}"
      ],
      "suffix": "\tcomponen",
      "exampleString": "<Translateinterpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}interpolate={}contentKey={}interpolate={}\\x09componen"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 454
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "<meta name=\"keywords\"([^>]*)*>\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<meta name=\"keywords\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "eywo",
      "exampleString": "<meta\\x20name=\"keywords\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeywo"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w+)(\\(((\\w|\\d|\\.)+,?)*\\))?\\.?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a(0"
      ],
      "pumps": [
        "0aa"
      ],
      "suffix": "a.(",
      "exampleString": "a(00aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aa0aaa.("
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "([MZLHVCSQTAmzlhvcsqta])([eE ,\\-.\\d]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a "
      ],
      "pumps": [
        "  "
      ],
      "suffix": "aa",
      "exampleString": "a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 66
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\((?:\\s|\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*?\\n)*(.+?)(?:\\s|\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*?\\n)*[,\\)]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "("
      ],
      "pumps": [
        "//\n//\n"
      ],
      "suffix": "//",
      "exampleString": "(//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 226
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*\\)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "(()",
      "exampleString": "(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa(()"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n1 a\n2"
      ],
      "pumps": [
        "\n2"
      ],
      "suffix": "\n2 D",
      "exampleString": "\\x0a1\\x20a\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x0a2\\x20D"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 765
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^javascript\\{((.|\\r?\\n)+)\\}$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "javascript{a"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "cr",
      "exampleString": "javascript{a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0acr"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\"(?:[^\"\\\\]+|\\\\.)*\")",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\"\"a",
      "exampleString": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\"\"a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 70
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^'(?:[^']|\\\\.)*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "\\'''",
      "exampleString": "'\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\'''"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d\\d)/(\\d\\d)/(\\d\\d\\d\\d)\\s*\\t\\s*((?:[^\\t]|\\n)*?)\\s*\\t\\s*([0-9.]+),(\\d\\d)\\s*\\t\\s*([0-9.]+),(\\d\\d)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "00/00/0000\t"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": ",00\n",
      "exampleString": "00/00/0000\\x09\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a,00\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 194
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\s\\n]*<align center><\\/align>[\\s\\n]*){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<align center></align><align center></alig"
      ],
      "pumps": [
        "n>\t<align center></alig"
      ],
      "suffix": "\t<alig",
      "exampleString": "<align\\x20center></align><align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></align>\\x09<align\\x20center></alig\\x09<alig"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 146
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^;])+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "'\\''"
      ],
      "suffix": ")(;\\",
      "exampleString": "'\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'''\\'')(;\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:\\{[^}]*\\}|[^/])*)[/](.*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a{{}"
      ],
      "suffix": "/",
      "exampleString": "a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}a{{}/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 622
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\(((.|[\\r\\n])*)\\)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "("
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "(",
      "exampleString": "(\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a("
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\[error\\].+?\\n)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[e"
      ],
      "pumps": [
        "rror]a\n[error]a\n[e"
      ],
      "suffix": "r",
      "exampleString": "[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[error]a\\x0a[er"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "//[^\\n]*\\n|/\\*(?:.|[\\r\\n])*?\\*/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "/*",
      "exampleString": "/*a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s+(([^\\s].+\\n){2,})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\taa\na"
      ],
      "pumps": [
        "a\naa\na"
      ],
      "suffix": "\ta",
      "exampleString": "\\x09aa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aaa\\x0aa\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(([^\\x00-\\x1F\\x2E\\x2F\\x3A\\x7F]{1,63}\\.)*?)*?([^\\x00-\\x1F\\x2E\\x2F\\x3A\\x7F]{1,63})(\\.[^\\x00-\\x1F\\x2E\\x2F\\x3A\\x7F]{1,63})?(:\\d{1,5})?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a.."
      ],
      "suffix": "a:",
      "exampleString": "a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a..a:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 262
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "(/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/**"
      ],
      "pumps": [
        "\n*"
      ],
      "suffix": "/",
      "exampleString": "/**\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*\\x0a*/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 674
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/(\\\\\\n)?\\/(\\n|(.|\\n)*?[^\\\\]\\n)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "//"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "\\",
      "exampleString": "//a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*#.*)*(?:\\n([^\\n\\S]*))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "##\t"
      ],
      "suffix": "a",
      "exampleString": "##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09##\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 694
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^\\s\"']+|[\"'][^\"']*[\"'])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\"\t\"\t",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\\x09\"\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\\s]*([\\S]+)+[\\s]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\ta",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "[a-zA-Z_\\$]+[\\w\\$]*(?:\\s*\\.\\s*(?:[a-zA-Z_\\$]+[\\w\\$]*|\\d+))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a."
      ],
      "pumps": [
        "aa."
      ],
      "suffix": "\t..",
      "exampleString": "a.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.\\x09.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "Async:\\*\\*((.|[\\n\\r])+?)\\n\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Async:**"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "yn",
      "exampleString": "Async:**a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ayn"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "sleipnir\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "i",
      "exampleString": "sleipnir\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000i"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(/\\*(.|[\\r\\n])*?\\*/)|(--(.*|[\\r\\n]))",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "*",
      "exampleString": "/*\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 663
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([A-Z0-9]|[A-Z0-9]+[a-z0-9]+(?:[A-Z0-9]+[a-z0-9]*)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0a0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "#",
      "exampleString": "0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 74
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "(?:[\\d+\\-=\\/ \\*]+(?:\\s?,\\s?\\d+)){4,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        " \t,\t0 \t,\t0 \t,\t0"
      ],
      "pumps": [
        " \t,00"
      ],
      "suffix": "\t",
      "exampleString": "\\x20\\x09,\\x090\\x20\\x09,\\x090\\x20\\x09,\\x090\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x20\\x09,00\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 137
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "f\\s+((([\\d]{1,}\\/[\\d]{1,}\\/[\\d]{1,}[\\s]?){3,})+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "f\t0/0/0\t0/0/0\t"
      ],
      "pumps": [
        "0/0/00/0/00/0/00/0/00/0/00/0/0\t"
      ],
      "suffix": "0\t0/",
      "exampleString": "f\\x090/0/0\\x090/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090/0/00/0/00/0/00/0/00/0/00/0/0\\x090\\x090/"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 199
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "<tpl(?:\\sname=\"([\\w-]+)\")?>((?:.|\\n)*?)<\\/tpl>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<tpl>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "\nn",
      "exampleString": "<tpl>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0an"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 130
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "('(?:\\\\'|.)*?')",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\'"
      ],
      "suffix": "\\a",
      "exampleString": "'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\nFailed assertion:(.|\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\nFailed assertion:"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0aFailed\\x20assertion:\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 749
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s+)?(((\\w+)|\\.)+)\\((\\d(-\\d)?)\\)=(\\d)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": ")=",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)="
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\\\(?:(\\S[^\\s,;)}\\]]*)|(?:\\s+(?:#.*)?)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "a",
      "exampleString": "\\\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 655
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\w+(?:[\\w.-]+\\.)+\\w+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        ".a"
      ],
      "suffix": "a.",
      "exampleString": "aa.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.aa."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<meta name=\"robots\"([^>]*)*>\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<meta name=\"robots\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "t",
      "exampleString": "<meta\\x20name=\"robots\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaat"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([0-9a-zA-Z_]+[ ]?)*[0-9a-zA-Z_]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a  ",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 67
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "ORGANIZER(:|;)(.*?\\r?\\n)(\\s.*?\\r?\\n)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ORGANIZER;\r\n\t"
      ],
      "pumps": [
        "\r\n\t\n\t"
      ],
      "suffix": "NIZ",
      "exampleString": "ORGANIZER;\\x0d\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09\\x0d\\x0a\\x09\\x0a\\x09NIZ"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "([^a-zA-Z0-9]|-)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "$-"
      ],
      "suffix": "0",
      "exampleString": "$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-$-0"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(var|const)\\s+settings\\s*=\\s*(\\{(.|\\n)+?\\n\\s*\\};)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "var\tsettings={"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "ca",
      "exampleString": "var\\x09settings={a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aca"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 132
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(http|https|ftp):(\\/\\/|\\\\)(([\\w\\/\\\\+\\-~`@:%])+\\.)+([\\w\\/\\\\.\\=\\?\\+\\-~`@\\':!%#]|(&)|&)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ftp:\\a."
      ],
      "pumps": [
        "a&"
      ],
      "suffix": "\u0000",
      "exampleString": "ftp:\\a.a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&a&\\x00"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 124
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<link.*href=(s*?)*(.+)[?]__inline.*?(s*?)>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<linkhref="
      ],
      "pumps": [
        "ss"
      ],
      "suffix": "nl",
      "exampleString": "<linkhref=ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssnl"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "## Asana Tasks:\\s+(.*#(\\d{12,}))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "## Asana Tasks:\t#0"
      ],
      "pumps": [
        "00000000000#000000000000#0"
      ],
      "suffix": "as#00000000",
      "exampleString": "##\\x20Asana\\x20Tasks:\\xas#00000000"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 144
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*/)*nph-[^/]*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "/a"
      ],
      "suffix": "ph/np",
      "exampleString": "/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/a/aph/np"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 100
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[A-Z][^\\s]*\\s?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A"
      ],
      "pumps": [
        "\tAA"
      ],
      "suffix": "\t\t",
      "exampleString": "A\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09AA\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "[\\t ]+by[\\t ]+(\\w+([\\w.-]+\\.)+\\w+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\tby\taa"
      ],
      "pumps": [
        ".a"
      ],
      "suffix": "b\t",
      "exampleString": "\\x09by\\x09aa.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.ab\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 102
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "V((\\d)+\\.?)+__.+\\.sql$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "V0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "s",
      "exampleString": "V0000000000000000000000000000000000000000000000000000000000000000000000000000000000000s"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(img|embed)([^>]+src=['\"]([^'\"]+)['\"])*[^\\/>]*\\/?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<imgas"
      ],
      "pumps": [
        "rc=\"a\"asrc=\"a\"as"
      ],
      "suffix": "c>\"a/sr",
      "exampleString": "<imgasrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asrc=\"a\"asc>\"a/sr"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 155
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "(```(.|\\n)*```)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "`\n",
      "exampleString": "```a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a`\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "foo|(x+x+)+y",
    "exploitString": {
      "degree": 0,
      "separators": [
        "x"
      ],
      "pumps": [
        "xx"
      ],
      "suffix": "ff",
      "exampleString": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxff"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^typedef struct( \\S+)?\\s*\\{\\n(([^}\\n].*)?\\n)*\\}\\s*\\*_XPrivDisplay;\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "typedef struct{\n"
      ],
      "pumps": [
        "a\n\n"
      ],
      "suffix": "XPri",
      "exampleString": "typedef\\x20struct{\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aa\\x0a\\x0aXPri"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 195
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "^((https?:)(\\/\\/\\/?)([\\w]*(?::[\\w]*)?@)?([\\d\\w\\.-]+)(?::(\\d+))?)?([\\/\\\\\\w\\.()-]*)?(?:([?][^#]*)?(#.*)?)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "?"
      ],
      "pumps": [
        "#??"
      ],
      "suffix": "a",
      "exampleString": "?#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??#??a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 699
    },
    "indeg": {
      "num_nodes": 17,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 17,
      "exec_time": 1
    }
  },
  {
    "pattern": "((A|B|C|D|E|I|II|III|IV|\\)+)\\s+et\\s+(A|B|C|D|E|I|II|III|IV|\\))+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "IV\tet\t"
      ],
      "pumps": [
        "IVIIII"
      ],
      "suffix": "\tV",
      "exampleString": "IV\\x09et\\x09IVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIIIIVIIII\\x09V"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 176
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "( {2,})+?",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "    "
      ],
      "suffix": "#",
      "exampleString": "\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "opera\t0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "p",
      "exampleString": "opera\\x090._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000p"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\.?[a-zA-Z][a-zA-Z_0-9]*)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ".a"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "..",
      "exampleString": ".aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(blackberry)\\w*\\/?([\\w\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "blackberry/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "r./",
      "exampleString": "blackberry/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaar./"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 105
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s|\\t)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "#",
      "exampleString": "\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^ip-address\\s*(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}) *(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ip-address0.0.0.00.0.00"
      ],
      "pumps": [
        ".0000.0.00"
      ],
      "suffix": "0.0.000.000.00",
      "exampleString": "ip-address0.0.0.00.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.00.0000.0.000.0.000.000.00"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 183
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\$(\\\\[\\\\\\$]|[^\\$])*\\$[egimosx]*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "$"
      ],
      "pumps": [
        "\\\\\\"
      ],
      "suffix": "$a\\",
      "exampleString": "$\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r\\n|\\n\\r|\\n|\\r){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\n"
      ],
      "pumps": [
        "\r\n\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:[^\",]+|\\\"(?:\\\\.|.)*?\\\")+?)\\s*,\\s*|((?:[^\",]+|\\\"(?:\\\\.|.)*?\\\")+?)\\s*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "a\\,\\a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\,\\a"
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 17,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*(.|\\s)*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "\t",
      "exampleString": "/*\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 81
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n        [NOTE]\n\n        You\tmay\thave\tencountered\ta\tbug\tin\tthe\tRuby\tinterpreter\tor\textension\tlibrariesa\n\n        Bug\treports\tare\twelcomea\n\n        \n        For\tdetails:\thttps://.ruby-lang.org/\n\n        \n\n        \n          [IMPORTANT]\n\n          a"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "ibr\n",
      "exampleString": "\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20[NOTE]\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20You\\x09may\\x09have\\x09encountered\\x09a\\x09bug\\x09in\\x09the\\x09Ruby\\x09interpreter\\x09or\\x09extension\\x09librariesa\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Bug\\x09reports\\x09are\\x09welcomea\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20For\\x09details:\\x09https://.ruby-lang.org/\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20[IMPORTANT]\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaibr\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 1722
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 2
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*CREATE\\s+UNIQUE\\s+INDEX\\s+(?:[\"`\\[]?\\w+[\"`\\]]?\\.)?[\"`\\[]?\\w+[\"`\\]]?\\s+ON\\s+['\"`\\[]?\\w+['\"`\\]]?\\s*\\(\\s*((?:\\s*[\"`\\[]?\\w+[\"`\\]]?\\s*,\\s*)*[\"`\\[]?\\w+[\"`\\]]?)\\s*\\)\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "CREATE\tUNIQUE\tINDEX\t\"a\"\tON\t\"a\"(\"a\","
      ],
      "pumps": [
        "\ta,"
      ],
      "suffix": "N\tON\t",
      "exampleString": "CREATE\\x09UNIQUE\\x09INDEX\\x09\"a\"\\x09ON\\x09\"a\"(\"a\",\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,\\x09a,N\\x09ON\\x09"
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 320
    },
    "indeg": {
      "num_nodes": 30,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 30,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(.+) \\[(.+)(\\..+)*\\]$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a [a.a"
      ],
      "pumps": [
        ".a"
      ],
      "suffix": "]. ",
      "exampleString": "a\\x20[a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a].\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\r?\\n|\\r)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([A-Za-z0-9_\\-]+)=(?:\"((?:[^\"]+|\\\\\")*)\"|'((?:[^']+|\\\\')*)')",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a='a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "=",
      "exampleString": "a='aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa="
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([.]?[\\\\/])*([.][.])[\\\\/]([.]?[\\\\/])*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "..//"
      ],
      "suffix": "/..",
      "exampleString": "..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..//..///.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*')|\\/\\*[\\s\\S]*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\"\\"
      ],
      "pumps": [
        "a\\\\a\\"
      ],
      "suffix": "\\\"*",
      "exampleString": "\"\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\a\\\\a\\\\\"*"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:\\\\.|[^=\\s]+)*)=(\"(?:\\\\.|[^\"\\\\]+)*\"|(?:\\\\.|[^\\s\"\\\\]+)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\\t\"a\\",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\\x09\"a\\"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 107
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\n\\s*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\t\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a#"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:%\\{(.|\\n)*?\\}%)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "%{"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\n",
      "exampleString": "%{\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(?:[[:alpha:]\\d\\-]+[.])+[[:alpha:]\\d\\-]+,?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        ".aa"
      ],
      "suffix": "a..",
      "exampleString": "a.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aa.aaa.."
    },
    "pivot": {
      "num_nodes": 4,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z_]\\w*)+([.][a-zA-Z_]\\w*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "a..",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*search\\s*(([^\\s]+\\s*)*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "searcha"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "searchaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 870
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\n|.)*(\\<\\?xml)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "x",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0ax"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 99
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\d+),*\\s*(\\d+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "00"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0\t0\t",
      "exampleString": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x090\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 72
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "'(\\\\.|\\\\\\n|.)*?'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'\\"
      ],
      "pumps": [
        "\n\\\n\\"
      ],
      "suffix": "\n\\",
      "exampleString": "'\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\\\x0a\\"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([A-Z][A-Za-z0-9]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "AaAa"
      ],
      "suffix": "#",
      "exampleString": "AaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAa#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([0-9]+\\s?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "\t\t",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 79
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^arm(v6.*|v7.*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "armv"
      ],
      "pumps": [
        "7v7v"
      ],
      "suffix": "a",
      "exampleString": "armv7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7va"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 622
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(a*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 60
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "((-|\\+)?[0-9]+(\\.[0-9]+)?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "..",
      "exampleString": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000.."
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\s*)?(\\()?select(\\s+.+\\s)+(\\s*)?from\\s+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "(select\ta\t"
      ],
      "pumps": [
        "\t\t\t\ta\t"
      ],
      "suffix": "\tfr\t",
      "exampleString": "(select\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09\\x09\\x09\\x09a\\x09\\x09fr\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 9,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 9,
      "exec_time": 0
    }
  },
  {
    "pattern": "(mac\\sos\\sx)\\s?([\\w\\s\\.]+\\w)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "mac\tos\tx\ta"
      ],
      "pumps": [
        "aaaa"
      ],
      "suffix": "os\t",
      "exampleString": "mac\\x09os\\x09x\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaos\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 119
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(!?\\[)((?:\\\\[\\s\\S]|[^\\[\\]])+?)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "![a"
      ],
      "pumps": [
        "\\a"
      ],
      "suffix": "![[",
      "exampleString": "![a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a![["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<head[^>]*>((.|[\\n\\r])*)<\\/head>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<head>"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "</<></he",
      "exampleString": "<head>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a</<></he"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(\\\\\\\\|\\\\'|[^\\n'])*'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\'\\\\"
      ],
      "suffix": "a\\''a",
      "exampleString": "'\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\a\\''a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 87
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:<script.*?>)((\\n|\\r|.)*?)(?:<\\/script>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script>"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "ip",
      "exampleString": "<script>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aip"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:([^\\S\\n\\r])+(\\r\\n|\\n|\\r)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\t"
      ],
      "pumps": [
        "\n\r\n"
      ],
      "suffix": "\t\n\t",
      "exampleString": "\\x09\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x0a\\x0d\\x0a\\x09\\x0a\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "Domain servers:\\n\\n((.+\\n)+)\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Domain servers:\n\na"
      ],
      "pumps": [
        "\na\na"
      ],
      "suffix": "ers",
      "exampleString": "Domain\\x20servers:\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aaers"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([0-9]+\\.[0-9]+(?: \\| )?)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0.0"
      ],
      "pumps": [
        "00.0"
      ],
      "suffix": "0..",
      "exampleString": "0.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.00.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 85
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(ip[honead]+)(?:.*os\\s*([\\w]+)*\\slike\\smac|;\\sopera)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "ipaosa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "mao\tlik",
      "exampleString": "ipaosaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaamao\\x09lik"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 118
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "^[ ]{0,2}([ ]?_[ ]?){3,}[ \\t]*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        " _  _ "
      ],
      "pumps": [
        " _ _"
      ],
      "suffix": "\t_",
      "exampleString": "\\x20_\\x20\\x20_\\x20\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x20_\\x09_"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 141
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((void|VALUE|int|char *\\*|ID|struct \\w+ *\\*|st_table *\\*) *)?\\n(\\w+)\\(.*\\)\\n\\s*((.+;\\n)*)\\{",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\na()\n"
      ],
      "pumps": [
        "a;\na;\n"
      ],
      "suffix": "s",
      "exampleString": "\\x0aa()\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0aa;\\x0as"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 225
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 1
    }
  },
  {
    "pattern": "^([A-Z](\\w|_)+::)+[A-Z](\\w|_)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A_"
      ],
      "pumps": [
        "_"
      ],
      "suffix": "_:a",
      "exampleString": "A____________________________________________:a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 101
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "QStringRef(?:[^\\w]+(?:.*?))+?$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "QStringRef$"
      ],
      "pumps": [
        "$$"
      ],
      "suffix": "a",
      "exampleString": "QStringRef$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 742
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\s|\\\\|\\n|\\r|\\t)*\\(",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\r\t"
      ],
      "suffix": "\n(\n",
      "exampleString": "\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0d\\x09\\x0a(\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<p>\\{% apibody %\\}.*\\n((.*\\n)*?).*\\{% endapibody %\\}</p>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<p>{% apibody %}\n"
      ],
      "pumps": [
        "\na"
      ],
      "suffix": "% apib",
      "exampleString": "<p>{%\\x20apibody\\x20%}\\x0a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa%\\x20apib"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 200
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<script[^>]+>(.|\\n|\\r)*?<\\/script\\s*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<scripta>"
      ],
      "pumps": [
        "\n\r"
      ],
      "suffix": "<s",
      "exampleString": "<scripta>\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d<s"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:\\/[^\\s\\/]*?(?:['\"`{}][^\\s\\/]*?)*\\/)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "\"\""
      ],
      "suffix": "/\"/\"",
      "exampleString": "/\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"/\"/\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 93
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "untuk( *|\\n*)*?\\(",
    "exploitString": {
      "degree": 0,
      "separators": [
        "untuk"
      ],
      "pumps": [
        "  "
      ],
      "suffix": "un\n",
      "exampleString": "untuk\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20un\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "return\\s*\"((?:\\\\\"|[^\"]+)+)\"",
    "exploitString": {
      "degree": 0,
      "separators": [
        "return\"a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "rn\"\"",
      "exampleString": "return\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaarn\"\""
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 86
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((menu|page)[-_\\w+]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "me"
      ],
      "pumps": [
        "nuapageame"
      ],
      "suffix": "#",
      "exampleString": "menuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageamenuapageame#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\/tmp\\/(\\w|\\W|block|\\d)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/tmp/"
      ],
      "pumps": [
        "block0"
      ],
      "suffix": "a",
      "exampleString": "/tmp/block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0block0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 779
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "```(.|\\s)+```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```"
      ],
      "pumps": [
        "a\t"
      ],
      "suffix": "\t``",
      "exampleString": "```a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09a\\x09\\x09``"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 97
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": ":25:([A-Z0-9]{8}[\\d\\.]+)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        ":25:"
      ],
      "pumps": [
        "00000000.000000000."
      ],
      "suffix": "5AA00AAA",
      "exampleString
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 228
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "   "
      ],
      "pumps": [
        " a    a   "
      ],
      "suffix": " ",
      "exampleString": "\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20a\\x20\\x20\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 133
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(([a-zA-Z])+((\\s+\\w+)=?(\"?.+\"?)?){0,})(\\s*\\/)\\s*>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<a\ta="
      ],
      "pumps": [
        "\"\t\ta="
      ],
      "suffix": "=",
      "exampleString": "<a\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=\"\\x09\\x09a=="
    },
    "pivot": {
      "num_nodes": 6,
      "exec_time": 143
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "(<main(?:\\s+(?:class|id|style)=\"[^\"]*\"\\s*)*>)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<main\tid=\""
      ],
      "pumps": [
        "\"\t\tid=\""
      ],
      "suffix": "l$",
      "exampleString": "<main\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"\"\\x09\\x09id=\"l$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 154
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "`(\\\\\\\\|\\\\`|[^`])*`",
    "exploitString": {
      "degree": 0,
      "separators": [
        "`"
      ],
      "pumps": [
        "\\`\\\\"
      ],
      "suffix": "``a",
      "exampleString": "`\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\\\`\\\\``a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^[A-z]:\\\\(.+?\\\\)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:\\a"
      ],
      "pumps": [
        "\\a\\a"
      ],
      "suffix": "a",
      "exampleString": "a:\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\aa"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^# yamllint disable-line( rule:\\S+)*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "# yamllint disable-line rule:"
      ],
      "pumps": [
        "a rule:"
      ],
      "suffix": "n\t:",
      "exampleString": "#\\x20yamllint\\x20disable-line\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:a\\x20rule:n\\x09:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 149
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\<sources dir\\=\\\"\\.\\/\\.\\.\\/\\\"\\>((.|\\r\\n|\\r|\\n)*?)\\<\\/sources",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<sources dir=\"./../\">"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": "=\"./",
      "exampleString": "<sources\\x20dir=\"./../\">\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a=\"./"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 147
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[\\[((?:.|\\n)+?)\\]\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[["
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "[",
      "exampleString": "[[\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*?)(\\[.*\\])+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "[][]"
      ],
      "suffix": "[",
      "exampleString": "[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\[(\\\\\\\\|\\\\\\]|[^\\]])*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "["
      ],
      "pumps": [
        "\\]\\\\"
      ],
      "suffix": "]\\a][",
      "exampleString": "[\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\\\]\\\\]\\a]["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "job_class: (\\w+:{0,2})+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "job_class: a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "j ",
      "exampleString": "job_class:\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaj\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "!\\[((?:[^\\]]|\\\\\\]|\\\\\\[)*?)\\]\\[((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "!["
      ],
      "pumps": [
        "\\["
      ],
      "suffix": "!\\a]a",
      "exampleString": "![\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[!\\a]a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 126
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 1
    }
  },
  {
    "pattern": "Domain Nameservers:\\n((.+\\n)+)\\s+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Domain Nameservers:\n"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "s",
      "exampleString": "Domain\\x20Nameservers:\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0as"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 122
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "^\\s*echo\\s+((?:[^;]+|\"[^\"\\\\]*\"|'[^'\\\\]*'|\\/\\*.*?\\*\\/)+);*\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "echo\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "h\\/;a",
      "exampleString": "echo\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaah\\/;a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 135
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "----a",
      "exampleString": "<!--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a----a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 108
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\.*\\/+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "//"
      ],
      "suffix": ".",
      "exampleString": "/////////////////////////////////////////////////////////////////////////////////////."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n\t\n\t\n\t"
      ],
      "pumps": [
        "\n\n\n\t"
      ],
      "suffix": "\t\t",
      "exampleString": "\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x0a\\x0a\\x0a\\x09\\x09\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\\\?\\s+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\\t"
      ],
      "pumps": [
        "\t\t"
      ],
      "suffix": "\\\\",
      "exampleString": "\\\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *var iteratesOwnLast;|.+?iteratesOwnLast *=.+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n /**a"
      ],
      "pumps": [
        "**a"
      ],
      "suffix": "**/\nvar iterat",
      "exampleString": "\\x0a\\x20/**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**a**/\\x0avar\\x20iterat"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 808
    },
    "indeg": {
      "num_nodes": 12,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 12,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\t*debug\\((.*\\n)*?.*\\);\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "debug("
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "u",
      "exampleString": "debug(\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0au"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 111
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\*(\\\\.|.)*?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "*"
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "\\a",
      "exampleString": "*\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\"(?:\\\\\"|.)*?\"|'(?:\\\\'|.)*?'|[^ ]+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "\\'\\'"
      ],
      "suffix": " ",
      "exampleString": "'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\'\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\r\\n|\\n|\\r)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "#\\aaaaa"
      ],
      "pumps": [
        "a\\aaaaaa\\aaaaa"
      ],
      "suffix": ":$",
      "exampleString": "#\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaaa\\aaaaa:$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 160
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 1
    }
  },
  {
    "pattern": "( |  )+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        " "
      ],
      "pumps": [
        "     "
      ],
      "suffix": "#",
      "exampleString": "\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<filter>(.|\\n)*<\\/filter>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<filter>"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "er",
      "exampleString": "<filter>\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aer"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 123
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((N|X)|(([A-G](b*|#*))((:(maj|min|dim|aug|1|5|sus2|sus4|maj6|min6|7|maj7|min7|dim7|hdim7|minmaj7|aug7|9|maj9|min9|11|maj11|min11|13|maj13|min13)(\\((\\*?((b*|#*)([1-9]|1[0-3]?))(,\\*?((b*|#*)([1-9]|1[0-3]?)))*)\\))?)|(:\\((\\*?((b*|#*)([1-9]|1[0-3]?))(,\\*?((b*|#*)([1-9]|1[0-3]?)))*)\\)))?((/((b*|#*)([1-9]|1[0-3]?)))?)?))$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "A:(*1,*"
      ],
      "pumps": [
        "1,**"
      ],
      "suffix": "A:di",
      "exampleString": "A:(*1,*1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**1,**A:di"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 346
    },
    "indeg": {
      "num_nodes": 41,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 27,
      "exec_time": 1
    }
  },
  {
    "pattern": "vivaldi\\/(\\d+(\\.?_?\\d+)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "vivaldi/0._0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "i/0",
      "exampleString": "vivaldi/0._0000000000000000000000000000000000000000000000000000000000000000000000000000000000000i/0"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 84
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "([\\s\\n]*<align><\\/align>[\\s\\n]*){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<align></align><align></"
      ],
      "pumps": [
        "align>\t<align></"
      ],
      "suffix": "</a",
      "exampleString": "<align></align><align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></align>\\x09<align></</a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 134
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "BgdTabOra\\\">(\\d+\\/\\d+\\/\\d+)<\\/TD>(.|\\n)+?Bleu11\\\">(.*?)<\\/span>(.|\\n)+?BgdTabOra\" align=\"right\">(.*?)<\\/TD>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "BgdTabOra\">0/0/0</TD>"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "e",
      "exampleString": "BgdTabOra\">0/0/0</TD>a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0ae"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 403
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(\\s*\\r\\n){2,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r\n\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "\r\t",
      "exampleString": "\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0d\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^PhaseScriptExecution\\s((\\\\\\ |\\S)*)\\s",
    "exploitString": {
      "degree": 0,
      "separators": [
        "PhaseScriptExecution\t"
      ],
      "pumps": [
        "\\ "
      ],
      "suffix": "c",
      "exampleString": "PhaseScriptExecution\\x09\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20c"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 137
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "<!--(.|\\n)*-->\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<!--"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "<\n",
      "exampleString": "<!--\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a<\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 91
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "((\\s*\\/\\/.*\\n)*)\\s*([A-z0-9.]+):\\s*'(.*)',?\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/"
      ],
      "pumps": [
        "/\n//\n/"
      ],
      "suffix": "a:\n",
      "exampleString": "//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a//\\x0a/a:\\x0a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 159
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 1
    }
  },
  {
    "pattern": "(\\\\\\|\\\\\\$|\\\\\\[|\\\\\\]|\\\\\\)|[^\\|\\(\\)\\$\\{\\}]{1})*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\\"
      ],
      "pumps": [
        "[\\[\\"
      ],
      "suffix": "|a",
      "exampleString": "\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\|a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "([+-]?[0-9]+[,\\.]?)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "+0"
      ],
      "pumps": [
        "00"
      ],
      "suffix": ",++",
      "exampleString": "+0000000000000000000000000000000000000000000000000000000000000000000000000000000000000,++"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 73
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(",
    "exploitString": {
      "degree": 0,
      "separators": [
        "                             # or\n            aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "  0             ",
      "exampleString": "\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20#\\x20or\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20\\x200\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 528
    },
    "indeg": {
      "num_nodes": 16,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 15,
      "exec_time": 2
    }
  },
  {
    "pattern": "-+BEGIN CERTIFICATE-+\\n(?:[^-]*\\n)+-+END CERTIFICATE-+\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-BEGIN CERTIFICATE-\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": " C",
      "exampleString": "-BEGIN\\x20CERTIFICATE-\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x20C"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 274
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(([^./?#@:]+\\.)*[^./?#@:]+)+(:[0-9]+)?(/[^/?#@:]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0a.:",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0a.:"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "(/?[^/]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "//",
      "exampleString": "/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa//"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 63
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[ \\t]*[\\n\\r]+[ \\t]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "#",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a#"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 64
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "<\\?php\\s*eval\\((.+\\()*base64_decode\\(.+\\)\\).+\\s*?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<?phpeval("
      ],
      "pumps": [
        "a(a("
      ],
      "suffix": "p\te",
      "exampleString": "<?phpeval(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(p\\x09e"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 221
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "((?:\\d|[^\\w,.'-])+ )",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "00"
      ],
      "suffix": " $",
      "exampleString": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\x20$"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:(?:MSG\\s+([^\\s]+)\\s+([^\\s]+)\\s+(([^\\s]+)[^\\S\\r\\n]+)?(\\d+)\\s*\\r\\n([^\\\\r\\\\n]*?)\\r\\n)+?)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "MSG\ta\ta\t"
      ],
      "pumps": [
        "a\t0\r\n\r\nMSG\r\nMSG\ta\ta\t0\r\n\r\nMSG\ta\ta\t"
      ],
      "suffix": "MS\r",
      "exampleString": "MSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x0d\\x0aMSG\\x09a\\x09a\\x090\\x0d\\x0a\\x0d\\x0aMSG\\x09a\\x09a\\x09MS\\x0d"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 235
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-zA-Z][a-zA-|Z_$\\.0-9\\[\\]]*)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "#",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 71
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 1
    }
  },
  {
    "pattern": "=(\\{(?:\\{[^}]*\\}|[^}])+\\})",
    "exploitString": {
      "degree": 0,
      "separators": [
        "={{"
      ],
      "pumps": [
        "}{a{"
      ],
      "suffix": "}}{",
      "exampleString": "={{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}{a{}}{"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 104
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "imports: \\[(.|\\s)*Test2Module(.|\\s)*\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "imports: ["
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "mpo",
      "exampleString": "imports:\\x20[\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09mpo"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 177
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:[\\d+-=\\/\\* ]+(?:\\s?,\\s?[\\d+-=\\/\\* ]+)){4,}",
    "exploitString": {
      "degree": 0,
      "separators": [
        " \t,\t  \t,\t  \t,\t "
      ],
      "pumps": [
        " , "
      ],
      "suffix": " ,\t",
      "exampleString": "\\x20\\x09,\\x09\\x20\\x20\\x09,\\x09\\x20\\x20\\x09,\\x09\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x20\\x20,\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 340
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^ :]+)*(.+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": " ",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x20"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 720
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.*?)(?:\\s+\\S+\\=\\S+\\s*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\ta"
      ],
      "pumps": [
        "==a\ta"
      ],
      "suffix": "\t",
      "exampleString": "\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a==a\\x09a\\x09"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 684
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *var shadowed[\\s\\S]+?;\\n",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\n /**a*"
      ],
      "pumps": [
        "**"
      ],
      "suffix": "*/",
      "exampleString": "\\x0a\\x20/**a**************************************************************************************/"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 236
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^\\]]+)(?:\\[(.+)\\])+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a[a]"
      ],
      "pumps": [
        "[a][a]"
      ],
      "suffix": "[][",
      "exampleString": "a[a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][a][]["
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 112
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "<meta http-equiv=\"content-type\"([^>]*)*>\\n*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<meta http-equiv=\"content-type\""
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "htt",
      "exampleString": "<meta\\x20http-equiv=\"content-type\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaahtt"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 150
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((\\\\.|[^\\\\*]+)*)\\*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\**a",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\**a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "translate\\(-*\\d+([.]\\d+)*(,*\\s*-*\\d+([.]\\d+)*)*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "translate(00"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "e(0-0.",
      "exampleString": "translate(00000000000000000000000000000000000000000000000000000000000000000000000000000000000000e(0-0."
    },
    "pivot": {
      "num_nodes": 5,
      "exec_time": 138
    },
    "indeg": {
      "num_nodes": 11,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 11,
      "exec_time": 0
    }
  },
  {
    "pattern": "^((?:\\\\?[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)+|self|static|parent)::([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]+)?\\*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\\aa"
      ],
      "suffix": "i",
      "exampleString": "\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aa\\aai"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 163
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "(([ \\t]*)-#\\s*bower:*(\\S*))(\\n|\\r|.)*?(-#\\s*endbower)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "-#bower"
      ],
      "pumps": [
        "\r\n"
      ],
      "suffix": " ",
      "exampleString": "-#bower\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x20"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 187
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 1
    }
  },
  {
    "pattern": "([^|\\\\]+|\\\\.)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\||",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\||"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 75
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(\\w|[_\\-:.^@'])+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "a_"
      ],
      "suffix": "#",
      "exampleString": "a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_a_#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 94
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 1
    }
  },
  {
    "pattern": "^(.+)\\s*:\\s*(\\n\\s+)*\\w",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a:\n\t"
      ],
      "pumps": [
        "\n\t"
      ],
      "suffix": "\n:",
      "exampleString": "a:\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a:"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 128
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "```(\\w*\\n*)((.|\\n)*?)```",
    "exploitString": {
      "degree": 0,
      "separators": [
        "```"
      ],
      "pumps": [
        "\n\n"
      ],
      "suffix": "`a`",
      "exampleString": "```\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a`a`"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\$\\{(([A-Za-z_\\-]+\\.?)+)\\}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "${a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "$",
      "exampleString": "${aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 83
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([^\\s]+(?:\\s*,\\s*[^\\s]+)*)\\s+in\\s+(.+)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a,"
      ],
      "pumps": [
        "\ta,a,"
      ],
      "suffix": "\ta,\t",
      "exampleString": "a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,a,\\x09a,\\x09"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 718
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 8,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:[a-zA-Z$_0-9]|\\\\\\.)+(?:(?:(?:[a-zA-Z$_0-9]|\\\\\\.)+)|(?:\\[[0-9]+\\]))*",
    "exploitString": {
      "degree": 0,
      "separators": [
        "aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "0[.",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0[."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 89
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "[(),]|\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*'|\\/\\*[\\s\\S]*?\\*\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\""
      ],
      "pumps": [
        "\\\\a"
      ],
      "suffix": "/a*'a\\*\"*",
      "exampleString": "\"\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a\\\\a/a*'a\\*\"*"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 127
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "(.|\\n)*?\\n(b|\\n)",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "a",
      "exampleString": "\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0aa"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 92
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a@aa"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "@.",
      "exampleString": "a@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@."
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 77
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "<script type=\"text\\/javascript\">((.|\\s)*?)<\\/script>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<script type=\"text/javascript\">"
      ],
      "pumps": [
        "\t"
      ],
      "suffix": "c",
      "exampleString": "<script\\x20type=\"text/javascript\">\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09c"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 181
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\[((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]\\[((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]",
    "exploitString": {
      "degree": 0,
      "separators": [
        "[\\"
      ],
      "pumps": [
        "]\\[\\"
      ],
      "suffix": "]\\a]a",
      "exampleString": "[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\[\\]\\a]a"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 131
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^http[s]?://(.*?\\.)*?[a-z0-9\\-]{2,4}",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://"
      ],
      "pumps": [
        ".."
      ],
      "suffix": "https",
      "exampleString": "https://....................................................................................https"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 115
    },
    "indeg": {
      "num_nodes": 6,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:'(?:''|[^'\\n])*'|#[&$%]?[a-f\\d]+)+",
    "exploitString": {
      "degree": 0,
      "separators": [
        "''"
      ],
      "pumps": [
        "''''"
      ],
      "suffix": "'#a$'\u0000",
      "exampleString": "'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''#a$'\\x00"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 98
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 4,
      "exec_time": 0
    }
  },
  {
    "pattern": "^https?:\\/\\/(([a-zA-Z0-9_-])+(\\.)?)*(:\\d+)?(\\/((\\.)?(\\?)?=?&?[a-zA-Z0-9_-](\\?)?)*)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "https://a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "ht:",
      "exampleString": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaht:"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 106
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 0
    }
  },
  {
    "pattern": "Title:\\s+((.*)\\n(\\s+(.*)\\n)*)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "Title:\t\n\t"
      ],
      "pumps": [
        "\n\t\n\t"
      ],
      "suffix": "e:",
      "exampleString": "Title:\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09\\x0a\\x09e:"
    },
    "pivot": {
      "num_nodes": 3,
      "exec_time": 114
    },
    "indeg": {
      "num_nodes": 5,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 5,
      "exec_time": 0
    }
  },
  {
    "pattern": "^\\s*log_format\\s+(\\S+)+\\s+(.+)\\s*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "log_format\ta"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\t",
      "exampleString": "log_format\\x09aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\x09"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 641
    },
    "indeg": {
      "num_nodes": 7,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 7,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(?:(\\r\\n|\\n|\\r)+)",
    "exploitString": {
      "degree": 0,
      "separators": [
        "\r"
      ],
      "pumps": [
        "\n\r\n\r"
      ],
      "suffix": "#",
      "exampleString": "\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d\\x0a\\x0d#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 76
    },
    "indeg": {
      "num_nodes": 1,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 1,
      "exec_time": 0
    }
  },
  {
    "pattern": "'(''|.)*?'",
    "exploitString": {
      "degree": 0,
      "separators": [
        "'"
      ],
      "pumps": [
        "'''"
      ],
      "suffix": "a",
      "exampleString": "'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "^(.*\\|?.*)\\n *(\\|? *[-:]+ *\\|[-| :]*)\\n((?:.*\\|.*\\n)*)\\n?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "|\n|-|\n|"
      ],
      "pumps": [
        "\n|"
      ],
      "suffix": "-",
      "exampleString": "|\\x0a|-|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|\\x0a|-"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 191
    },
    "indeg": {
      "num_nodes": 13,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 13,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+)+$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        ".aaa"
      ],
      "suffix": "..",
      "exampleString": "a.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.aaa.."
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 78
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "(?:\\s*\\/\\/.*)*(\\s*return *).+?propertyIsEnumerable[\\s\\S]+?: *",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        "//\t\t"
      ],
      "suffix": "l",
      "exampleString": "//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09//\\x09\\x09l"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 253
    },
    "indeg": {
      "num_nodes": 10,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 10,
      "exec_time": 0
    }
  },
  {
    "pattern": "^([_a-zA-Z]\\w*)*:([a-zA-Z]\\w*)$",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "a"
      ],
      "suffix": "_::",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_::"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 103
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "\\/\\*([^*]|[\\r\\n]|(\\*+([^*\\/]|[\\r\\n])))*\\*+\\/",
    "exploitString": {
      "degree": 0,
      "separators": [
        "/*"
      ],
      "pumps": [
        "a\n"
      ],
      "suffix": "/**/*",
      "exampleString": "/*a\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0aa\\x0a/**/*"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 110
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 0
    }
  },
  {
    "pattern": "<(.|\\n)+?>",
    "exploitString": {
      "degree": 0,
      "separators": [
        "<\n"
      ],
      "pumps": [
        "\n"
      ],
      "suffix": "\n",
      "exampleString": "<\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 80
    },
    "indeg": {
      "num_nodes": 3,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\d+!)?((\\d+)(.\\d+)*(.\\d+)*)(.?[a|b|rc]\\d*)?(.post\\d*)?(.dev\\d*)?",
    "exploitString": {
      "degree": 0,
      "separators": [
        "0a"
      ],
      "pumps": [
        "00"
      ],
      "suffix": "0$",
      "exampleString": "0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000$"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 268
    },
    "indeg": {
      "num_nodes": 14,
      "exec_time": 1
    },
    "ancestor": {
      "num_nodes": 14,
      "exec_time": 0
    }
  },
  {
    "pattern": "namespace :radiant do\\n  namespace :extensions do\\n    namespace :sample do\\n((\\n|\\s*.*\\n)*)    end\\n  end\\nend",
    "exploitString": {
      "degree": 0,
      "separators": [
        "namespace :radiant do\n  namespace :extensions do\n    namespace :sample do\n"
      ],
      "pumps": [
        "\t\n\t"
      ],
      "suffix": "ext",
      "exampleString": "namespace\\x20:radiant\\x20do\\x0a\\x20\\x20namespace\\x20:extensions\\x20do\\x0a\\x20\\x20\\x20\\x20namespace\\x20:sample\\x20do\\x0a\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09\\x09\\x0a\\x09ext"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 243
    },
    "indeg": {
      "num_nodes": 4,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 3,
      "exec_time": 1
    }
  },
  {
    "pattern": "((?:[^\";]+|\\\"(?:\\\\.|.)*?\\\")+?)\\s*;",
    "exploitString": {
      "degree": 0,
      "separators": [
        "a"
      ],
      "pumps": [
        "aa"
      ],
      "suffix": "\\",
      "exampleString": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\"
    },
    "pivot": {
      "num_nodes": 2,
      "exec_time": 95
    },
    "indeg": {
      "num_nodes": 8,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 6,
      "exec_time": 0
    }
  },
  {
    "pattern": "(\\.[\\w\\d-_.~\\+]+)*$",
    "exploitString": {
      "degree": 0,
      "separators": [
        ""
      ],
      "pumps": [
        ".a.a"
      ],
      "suffix": "#",
      "exampleString": ".a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a#"
    },
    "pivot": {
      "num_nodes": 1,
      "exec_time": 82
    },
    "indeg": {
      "num_nodes": 2,
      "exec_time": 0
    },
    "ancestor": {
      "num_nodes": 2,
      "exec_time": 0
    }
  }
]